import process from 'node:process';globalThis._importMeta_=globalThis._importMeta_||{url:"file:///_entry.js",env:process.env};import http, { Server as Server$1 } from 'node:http';
import https, { Server } from 'node:https';
import { promises, existsSync } from 'fs';
import { dirname as dirname$1, resolve as resolve$1, join } from 'path';
import { toValue } from 'vue';
import { defineNitroPlugin as defineNitroPlugin$1 } from 'nitropack/dist/runtime/plugin';
import { promises as promises$1 } from 'node:fs';
import { fileURLToPath } from 'node:url';
import { isSpecialLang, isSpecialTheme, addClassToHast, createHighlighterCore } from 'shiki/core';
import { transformerNotationDiff, transformerNotationFocus, transformerNotationHighlight, transformerNotationErrorLevel } from '@shikijs/transformers';
import { unified } from 'unified';
import { toString as toString$1 } from 'mdast-util-to-string';
import { postprocess, preprocess } from 'micromark';
import { stringifyPosition } from 'unist-util-stringify-position';
import { markdownLineEnding, markdownSpace } from 'micromark-util-character';
import { push, splice } from 'micromark-util-chunked';
import { resolveAll } from 'micromark-util-resolve-all';
import { normalizeUri } from 'micromark-util-sanitize-uri';
import slugify from 'slugify';
import remarkParse from 'remark-parse';
import remark2rehype from 'remark-rehype';
import remarkMDC, { parseFrontMatter } from 'remark-mdc';
import remarkEmoji from 'remark-emoji';
import remarkGFM from 'remark-gfm';
import rehypeExternalLinks from 'rehype-external-links';
import rehypeSortAttributeValues from 'rehype-sort-attribute-values';
import rehypeSortAttributes from 'rehype-sort-attributes';
import rehypeRaw from 'rehype-raw';
import { detab } from 'detab';
import { toString } from 'hast-util-to-string';
import Slugger from 'github-slugger';
import { ipxFSStorage, ipxHttpStorage, createIPX, createIPXH3Handler } from 'ipx';

const suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
const suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
const JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  const _value = value.trim();
  if (
    // eslint-disable-next-line unicorn/prefer-at
    value[0] === '"' && value.endsWith('"') && !value.includes("\\")
  ) {
    return _value.slice(1, -1);
  }
  if (_value.length <= 9) {
    const _lval = _value.toLowerCase();
    if (_lval === "true") {
      return true;
    }
    if (_lval === "false") {
      return false;
    }
    if (_lval === "undefined") {
      return void 0;
    }
    if (_lval === "null") {
      return null;
    }
    if (_lval === "nan") {
      return Number.NaN;
    }
    if (_lval === "infinity") {
      return Number.POSITIVE_INFINITY;
    }
    if (_lval === "-infinity") {
      return Number.NEGATIVE_INFINITY;
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

const HASH_RE = /#/g;
const AMPERSAND_RE = /&/g;
const SLASH_RE = /\//g;
const EQUAL_RE = /=/g;
const IM_RE = /\?/g;
const PLUS_RE = /\+/g;
const ENC_CARET_RE = /%5e/gi;
const ENC_BACKTICK_RE = /%60/gi;
const ENC_PIPE_RE = /%7c/gi;
const ENC_SPACE_RE = /%20/gi;
const ENC_SLASH_RE = /%2f/gi;
const ENC_ENC_SLASH_RE = /%252f/gi;
function encode$1(text) {
  return encodeURI("" + text).replace(ENC_PIPE_RE, "|");
}
function encodeQueryValue(input) {
  return encode$1(typeof input === "string" ? input : JSON.stringify(input)).replace(PLUS_RE, "%2B").replace(ENC_SPACE_RE, "+").replace(HASH_RE, "%23").replace(AMPERSAND_RE, "%26").replace(ENC_BACKTICK_RE, "`").replace(ENC_CARET_RE, "^").replace(SLASH_RE, "%2F");
}
function encodeQueryKey(text) {
  return encodeQueryValue(text).replace(EQUAL_RE, "%3D");
}
function encodePath(text) {
  return encode$1(text).replace(HASH_RE, "%23").replace(IM_RE, "%3F").replace(ENC_ENC_SLASH_RE, "%2F").replace(AMPERSAND_RE, "%26").replace(PLUS_RE, "%2B");
}
function encodeParam(text) {
  return encodePath(text).replace(SLASH_RE, "%2F");
}
function decode$1(text = "") {
  try {
    return decodeURIComponent("" + text);
  } catch {
    return "" + text;
  }
}
function decodePath(text) {
  return decode$1(text.replace(ENC_SLASH_RE, "%252F"));
}
function decodeQueryKey(text) {
  return decode$1(text.replace(PLUS_RE, " "));
}
function decodeQueryValue(text) {
  return decode$1(text.replace(PLUS_RE, " "));
}

function parseQuery(parametersString = "") {
  const object = {};
  if (parametersString[0] === "?") {
    parametersString = parametersString.slice(1);
  }
  for (const parameter of parametersString.split("&")) {
    const s = parameter.match(/([^=]+)=?(.*)/) || [];
    if (s.length < 2) {
      continue;
    }
    const key = decodeQueryKey(s[1]);
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const value = decodeQueryValue(s[2] || "");
    if (object[key] === void 0) {
      object[key] = value;
    } else if (Array.isArray(object[key])) {
      object[key].push(value);
    } else {
      object[key] = [object[key], value];
    }
  }
  return object;
}
function encodeQueryItem(key, value) {
  if (typeof value === "number" || typeof value === "boolean") {
    value = String(value);
  }
  if (!value) {
    return encodeQueryKey(key);
  }
  if (Array.isArray(value)) {
    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join("&");
  }
  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;
}
function stringifyQuery(query) {
  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).filter(Boolean).join("&");
}

const PROTOCOL_STRICT_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{1,2})/;
const PROTOCOL_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{2})?/;
const PROTOCOL_RELATIVE_REGEX = /^([/\\]\s*){2,}[^/\\]/;
const PROTOCOL_SCRIPT_RE = /^[\s\0]*(blob|data|javascript|vbscript):$/i;
const TRAILING_SLASH_RE = /\/$|\/\?|\/#/;
const JOIN_LEADING_SLASH_RE = /^\.?\//;
function isRelative(inputString) {
  return ["./", "../"].some((string_) => inputString.startsWith(string_));
}
function hasProtocol(inputString, opts = {}) {
  if (typeof opts === "boolean") {
    opts = { acceptRelative: opts };
  }
  if (opts.strict) {
    return PROTOCOL_STRICT_REGEX.test(inputString);
  }
  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);
}
function isScriptProtocol(protocol) {
  return !!protocol && PROTOCOL_SCRIPT_RE.test(protocol);
}
function hasTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return input.endsWith("/");
  }
  return TRAILING_SLASH_RE.test(input);
}
function withoutTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || "/";
  }
  if (!hasTrailingSlash(input, true)) {
    return input || "/";
  }
  let path = input;
  let fragment = "";
  const fragmentIndex = input.indexOf("#");
  if (fragmentIndex >= 0) {
    path = input.slice(0, fragmentIndex);
    fragment = input.slice(fragmentIndex);
  }
  const [s0, ...s] = path.split("?");
  const cleanPath = s0.endsWith("/") ? s0.slice(0, -1) : s0;
  return (cleanPath || "/") + (s.length > 0 ? `?${s.join("?")}` : "") + fragment;
}
function withTrailingSlash(input = "", respectQueryAndFragment) {
  if (!respectQueryAndFragment) {
    return input.endsWith("/") ? input : input + "/";
  }
  if (hasTrailingSlash(input, true)) {
    return input || "/";
  }
  let path = input;
  let fragment = "";
  const fragmentIndex = input.indexOf("#");
  if (fragmentIndex >= 0) {
    path = input.slice(0, fragmentIndex);
    fragment = input.slice(fragmentIndex);
    if (!path) {
      return fragment;
    }
  }
  const [s0, ...s] = path.split("?");
  return s0 + "/" + (s.length > 0 ? `?${s.join("?")}` : "") + fragment;
}
function hasLeadingSlash(input = "") {
  return input.startsWith("/");
}
function withoutLeadingSlash(input = "") {
  return (hasLeadingSlash(input) ? input.slice(1) : input) || "/";
}
function withLeadingSlash(input = "") {
  return hasLeadingSlash(input) ? input : "/" + input;
}
function withBase(input, base) {
  if (isEmptyURL(base) || hasProtocol(input)) {
    return input;
  }
  const _base = withoutTrailingSlash(base);
  if (input.startsWith(_base)) {
    return input;
  }
  return joinURL(_base, input);
}
function withoutBase(input, base) {
  if (isEmptyURL(base)) {
    return input;
  }
  const _base = withoutTrailingSlash(base);
  if (!input.startsWith(_base)) {
    return input;
  }
  const trimmed = input.slice(_base.length);
  return trimmed[0] === "/" ? trimmed : "/" + trimmed;
}
function withQuery(input, query) {
  const parsed = parseURL(input);
  const mergedQuery = { ...parseQuery(parsed.search), ...query };
  parsed.search = stringifyQuery(mergedQuery);
  return stringifyParsedURL(parsed);
}
function getQuery$1(input) {
  return parseQuery(parseURL(input).search);
}
function isEmptyURL(url) {
  return !url || url === "/";
}
function isNonEmptyURL(url) {
  return url && url !== "/";
}
function joinURL(base, ...input) {
  let url = base || "";
  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {
    if (url) {
      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, "");
      url = withTrailingSlash(url) + _segment;
    } else {
      url = segment;
    }
  }
  return url;
}
function joinRelativeURL(..._input) {
  const JOIN_SEGMENT_SPLIT_RE = /\/(?!\/)/;
  const input = _input.filter(Boolean);
  const segments = [];
  let segmentsDepth = 0;
  for (const i of input) {
    if (!i || i === "/") {
      continue;
    }
    for (const [sindex, s] of i.split(JOIN_SEGMENT_SPLIT_RE).entries()) {
      if (!s || s === ".") {
        continue;
      }
      if (s === "..") {
        if (segments.length === 1 && hasProtocol(segments[0])) {
          continue;
        }
        segments.pop();
        segmentsDepth--;
        continue;
      }
      if (sindex === 1 && segments[segments.length - 1]?.endsWith(":/")) {
        segments[segments.length - 1] += "/" + s;
        continue;
      }
      segments.push(s);
      segmentsDepth++;
    }
  }
  let url = segments.join("/");
  if (segmentsDepth >= 0) {
    if (input[0]?.startsWith("/") && !url.startsWith("/")) {
      url = "/" + url;
    } else if (input[0]?.startsWith("./") && !url.startsWith("./")) {
      url = "./" + url;
    }
  } else {
    url = "../".repeat(-1 * segmentsDepth) + url;
  }
  if (input[input.length - 1]?.endsWith("/") && !url.endsWith("/")) {
    url += "/";
  }
  return url;
}
function withHttps(input) {
  return withProtocol(input, "https://");
}
function withProtocol(input, protocol) {
  const match = input.match(PROTOCOL_REGEX);
  if (!match) {
    return protocol + input;
  }
  return protocol + input.slice(match[0].length);
}

const protocolRelative = Symbol.for("ufo:protocolRelative");
function parseURL(input = "", defaultProto) {
  const _specialProtoMatch = input.match(
    /^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i
  );
  if (_specialProtoMatch) {
    const [, _proto, _pathname = ""] = _specialProtoMatch;
    return {
      protocol: _proto.toLowerCase(),
      pathname: _pathname,
      href: _proto + _pathname,
      auth: "",
      host: "",
      search: "",
      hash: ""
    };
  }
  if (!hasProtocol(input, { acceptRelative: true })) {
    return parsePath(input);
  }
  const [, protocol = "", auth, hostAndPath = ""] = input.replace(/\\/g, "/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/) || [];
  const [, host = "", path = ""] = hostAndPath.match(/([^#/?]*)(.*)?/) || [];
  const { pathname, search, hash } = parsePath(
    path.replace(/\/(?=[A-Za-z]:)/, "")
  );
  return {
    protocol: protocol.toLowerCase(),
    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : "",
    host,
    pathname,
    search,
    hash,
    [protocolRelative]: !protocol
  };
}
function parsePath(input = "") {
  const [pathname = "", search = "", hash = ""] = (input.match(/([^#?]*)(\?[^#]*)?(#.*)?/) || []).splice(1);
  return {
    pathname,
    search,
    hash
  };
}
function stringifyParsedURL(parsed) {
  const pathname = parsed.pathname || "";
  const search = parsed.search ? (parsed.search.startsWith("?") ? "" : "?") + parsed.search : "";
  const hash = parsed.hash || "";
  const auth = parsed.auth ? parsed.auth + "@" : "";
  const host = parsed.host || "";
  const proto = parsed.protocol || parsed[protocolRelative] ? (parsed.protocol || "") + "//" : "";
  return proto + auth + host + pathname + search + hash;
}

const fieldContentRegExp = /^[\u0009\u0020-\u007E\u0080-\u00FF]+$/;
function parse$1(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  const obj = {};
  const opt = options || {};
  const dec = opt.decode || decode;
  let index = 0;
  while (index < str.length) {
    const eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    let endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    const key = str.slice(index, eqIdx).trim();
    if (void 0 === obj[key]) {
      let val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.codePointAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
}
function serialize(name, value, options) {
  const opt = options || {};
  const enc = opt.encode || encode;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  const encodedValue = enc(value);
  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {
    throw new TypeError("argument val is invalid");
  }
  let str = name + "=" + encodedValue;
  if (void 0 !== opt.maxAge && opt.maxAge !== null) {
    const maxAge = opt.maxAge - 0;
    if (Number.isNaN(maxAge) || !Number.isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    if (!isDate(opt.expires) || Number.isNaN(opt.expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + opt.expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.priority) {
    const priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low": {
        str += "; Priority=Low";
        break;
      }
      case "medium": {
        str += "; Priority=Medium";
        break;
      }
      case "high": {
        str += "; Priority=High";
        break;
      }
      default: {
        throw new TypeError("option priority is invalid");
      }
    }
  }
  if (opt.sameSite) {
    const sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true: {
        str += "; SameSite=Strict";
        break;
      }
      case "lax": {
        str += "; SameSite=Lax";
        break;
      }
      case "strict": {
        str += "; SameSite=Strict";
        break;
      }
      case "none": {
        str += "; SameSite=None";
        break;
      }
      default: {
        throw new TypeError("option sameSite is invalid");
      }
    }
  }
  if (opt.partitioned) {
    str += "; Partitioned";
  }
  return str;
}
function isDate(val) {
  return Object.prototype.toString.call(val) === "[object Date]" || val instanceof Date;
}
function tryDecode(str, decode2) {
  try {
    return decode2(str);
  } catch {
    return str;
  }
}
function decode(str) {
  return str.includes("%") ? decodeURIComponent(str) : str;
}
function encode(val) {
  return encodeURIComponent(val);
}

const defaults$1 = Object.freeze({
  ignoreUnknown: false,
  respectType: false,
  respectFunctionNames: false,
  respectFunctionProperties: false,
  unorderedObjects: true,
  unorderedArrays: false,
  unorderedSets: false,
  excludeKeys: void 0,
  excludeValues: void 0,
  replacer: void 0
});
function objectHash(object, options) {
  if (options) {
    options = { ...defaults$1, ...options };
  } else {
    options = defaults$1;
  }
  const hasher = createHasher(options);
  hasher.dispatch(object);
  return hasher.toString();
}
const defaultPrototypesKeys = Object.freeze([
  "prototype",
  "__proto__",
  "constructor"
]);
function createHasher(options) {
  let buff = "";
  let context = /* @__PURE__ */ new Map();
  const write = (str) => {
    buff += str;
  };
  return {
    toString() {
      return buff;
    },
    getContext() {
      return context;
    },
    dispatch(value) {
      if (options.replacer) {
        value = options.replacer(value);
      }
      const type = value === null ? "null" : typeof value;
      return this[type](value);
    },
    object(object) {
      if (object && typeof object.toJSON === "function") {
        return this.object(object.toJSON());
      }
      const objString = Object.prototype.toString.call(object);
      let objType = "";
      const objectLength = objString.length;
      if (objectLength < 10) {
        objType = "unknown:[" + objString + "]";
      } else {
        objType = objString.slice(8, objectLength - 1);
      }
      objType = objType.toLowerCase();
      let objectNumber = null;
      if ((objectNumber = context.get(object)) === void 0) {
        context.set(object, context.size);
      } else {
        return this.dispatch("[CIRCULAR:" + objectNumber + "]");
      }
      if (typeof Buffer !== "undefined" && Buffer.isBuffer && Buffer.isBuffer(object)) {
        write("buffer:");
        return write(object.toString("utf8"));
      }
      if (objType !== "object" && objType !== "function" && objType !== "asyncfunction") {
        if (this[objType]) {
          this[objType](object);
        } else if (!options.ignoreUnknown) {
          this.unkown(object, objType);
        }
      } else {
        let keys = Object.keys(object);
        if (options.unorderedObjects) {
          keys = keys.sort();
        }
        let extraKeys = [];
        if (options.respectType !== false && !isNativeFunction(object)) {
          extraKeys = defaultPrototypesKeys;
        }
        if (options.excludeKeys) {
          keys = keys.filter((key) => {
            return !options.excludeKeys(key);
          });
          extraKeys = extraKeys.filter((key) => {
            return !options.excludeKeys(key);
          });
        }
        write("object:" + (keys.length + extraKeys.length) + ":");
        const dispatchForKey = (key) => {
          this.dispatch(key);
          write(":");
          if (!options.excludeValues) {
            this.dispatch(object[key]);
          }
          write(",");
        };
        for (const key of keys) {
          dispatchForKey(key);
        }
        for (const key of extraKeys) {
          dispatchForKey(key);
        }
      }
    },
    array(arr, unordered) {
      unordered = unordered === void 0 ? options.unorderedArrays !== false : unordered;
      write("array:" + arr.length + ":");
      if (!unordered || arr.length <= 1) {
        for (const entry of arr) {
          this.dispatch(entry);
        }
        return;
      }
      const contextAdditions = /* @__PURE__ */ new Map();
      const entries = arr.map((entry) => {
        const hasher = createHasher(options);
        hasher.dispatch(entry);
        for (const [key, value] of hasher.getContext()) {
          contextAdditions.set(key, value);
        }
        return hasher.toString();
      });
      context = contextAdditions;
      entries.sort();
      return this.array(entries, false);
    },
    date(date) {
      return write("date:" + date.toJSON());
    },
    symbol(sym) {
      return write("symbol:" + sym.toString());
    },
    unkown(value, type) {
      write(type);
      if (!value) {
        return;
      }
      write(":");
      if (value && typeof value.entries === "function") {
        return this.array(
          Array.from(value.entries()),
          true
          /* ordered */
        );
      }
    },
    error(err) {
      return write("error:" + err.toString());
    },
    boolean(bool) {
      return write("bool:" + bool);
    },
    string(string) {
      write("string:" + string.length + ":");
      write(string);
    },
    function(fn) {
      write("fn:");
      if (isNativeFunction(fn)) {
        this.dispatch("[native]");
      } else {
        this.dispatch(fn.toString());
      }
      if (options.respectFunctionNames !== false) {
        this.dispatch("function-name:" + String(fn.name));
      }
      if (options.respectFunctionProperties) {
        this.object(fn);
      }
    },
    number(number) {
      return write("number:" + number);
    },
    xml(xml) {
      return write("xml:" + xml.toString());
    },
    null() {
      return write("Null");
    },
    undefined() {
      return write("Undefined");
    },
    regexp(regex) {
      return write("regex:" + regex.toString());
    },
    uint8array(arr) {
      write("uint8array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    uint8clampedarray(arr) {
      write("uint8clampedarray:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    int8array(arr) {
      write("int8array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    uint16array(arr) {
      write("uint16array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    int16array(arr) {
      write("int16array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    uint32array(arr) {
      write("uint32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    int32array(arr) {
      write("int32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    float32array(arr) {
      write("float32array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    float64array(arr) {
      write("float64array:");
      return this.dispatch(Array.prototype.slice.call(arr));
    },
    arraybuffer(arr) {
      write("arraybuffer:");
      return this.dispatch(new Uint8Array(arr));
    },
    url(url) {
      return write("url:" + url.toString());
    },
    map(map) {
      write("map:");
      const arr = [...map];
      return this.array(arr, options.unorderedSets !== false);
    },
    set(set) {
      write("set:");
      const arr = [...set];
      return this.array(arr, options.unorderedSets !== false);
    },
    file(file) {
      write("file:");
      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);
    },
    blob() {
      if (options.ignoreUnknown) {
        return write("[blob]");
      }
      throw new Error(
        'Hashing Blob objects is currently not supported\nUse "options.replacer" or "options.ignoreUnknown"\n'
      );
    },
    domwindow() {
      return write("domwindow");
    },
    bigint(number) {
      return write("bigint:" + number.toString());
    },
    /* Node.js standard native objects */
    process() {
      return write("process");
    },
    timer() {
      return write("timer");
    },
    pipe() {
      return write("pipe");
    },
    tcp() {
      return write("tcp");
    },
    udp() {
      return write("udp");
    },
    tty() {
      return write("tty");
    },
    statwatcher() {
      return write("statwatcher");
    },
    securecontext() {
      return write("securecontext");
    },
    connection() {
      return write("connection");
    },
    zlib() {
      return write("zlib");
    },
    context() {
      return write("context");
    },
    nodescript() {
      return write("nodescript");
    },
    httpparser() {
      return write("httpparser");
    },
    dataview() {
      return write("dataview");
    },
    signal() {
      return write("signal");
    },
    fsevent() {
      return write("fsevent");
    },
    tlswrap() {
      return write("tlswrap");
    }
  };
}
const nativeFunc = "[native code] }";
const nativeFuncLength = nativeFunc.length;
function isNativeFunction(f) {
  if (typeof f !== "function") {
    return false;
  }
  return Function.prototype.toString.call(f).slice(-nativeFuncLength) === nativeFunc;
}

class WordArray {
  constructor(words, sigBytes) {
    words = this.words = words || [];
    this.sigBytes = sigBytes === void 0 ? words.length * 4 : sigBytes;
  }
  toString(encoder) {
    return (encoder || Hex).stringify(this);
  }
  concat(wordArray) {
    this.clamp();
    if (this.sigBytes % 4) {
      for (let i = 0; i < wordArray.sigBytes; i++) {
        const thatByte = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
        this.words[this.sigBytes + i >>> 2] |= thatByte << 24 - (this.sigBytes + i) % 4 * 8;
      }
    } else {
      for (let j = 0; j < wordArray.sigBytes; j += 4) {
        this.words[this.sigBytes + j >>> 2] = wordArray.words[j >>> 2];
      }
    }
    this.sigBytes += wordArray.sigBytes;
    return this;
  }
  clamp() {
    this.words[this.sigBytes >>> 2] &= 4294967295 << 32 - this.sigBytes % 4 * 8;
    this.words.length = Math.ceil(this.sigBytes / 4);
  }
  clone() {
    return new WordArray([...this.words]);
  }
}
const Hex = {
  stringify(wordArray) {
    const hexChars = [];
    for (let i = 0; i < wordArray.sigBytes; i++) {
      const bite = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
      hexChars.push((bite >>> 4).toString(16), (bite & 15).toString(16));
    }
    return hexChars.join("");
  }
};
const Base64 = {
  stringify(wordArray) {
    const keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    const base64Chars = [];
    for (let i = 0; i < wordArray.sigBytes; i += 3) {
      const byte1 = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
      const byte2 = wordArray.words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255;
      const byte3 = wordArray.words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255;
      const triplet = byte1 << 16 | byte2 << 8 | byte3;
      for (let j = 0; j < 4 && i * 8 + j * 6 < wordArray.sigBytes * 8; j++) {
        base64Chars.push(keyStr.charAt(triplet >>> 6 * (3 - j) & 63));
      }
    }
    return base64Chars.join("");
  }
};
const Latin1 = {
  parse(latin1Str) {
    const latin1StrLength = latin1Str.length;
    const words = [];
    for (let i = 0; i < latin1StrLength; i++) {
      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 255) << 24 - i % 4 * 8;
    }
    return new WordArray(words, latin1StrLength);
  }
};
const Utf8 = {
  parse(utf8Str) {
    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
  }
};
class BufferedBlockAlgorithm {
  constructor() {
    this._data = new WordArray();
    this._nDataBytes = 0;
    this._minBufferSize = 0;
    this.blockSize = 512 / 32;
  }
  reset() {
    this._data = new WordArray();
    this._nDataBytes = 0;
  }
  _append(data) {
    if (typeof data === "string") {
      data = Utf8.parse(data);
    }
    this._data.concat(data);
    this._nDataBytes += data.sigBytes;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  _doProcessBlock(_dataWords, _offset) {
  }
  _process(doFlush) {
    let processedWords;
    let nBlocksReady = this._data.sigBytes / (this.blockSize * 4);
    if (doFlush) {
      nBlocksReady = Math.ceil(nBlocksReady);
    } else {
      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
    }
    const nWordsReady = nBlocksReady * this.blockSize;
    const nBytesReady = Math.min(nWordsReady * 4, this._data.sigBytes);
    if (nWordsReady) {
      for (let offset = 0; offset < nWordsReady; offset += this.blockSize) {
        this._doProcessBlock(this._data.words, offset);
      }
      processedWords = this._data.words.splice(0, nWordsReady);
      this._data.sigBytes -= nBytesReady;
    }
    return new WordArray(processedWords, nBytesReady);
  }
}
class Hasher extends BufferedBlockAlgorithm {
  update(messageUpdate) {
    this._append(messageUpdate);
    this._process();
    return this;
  }
  finalize(messageUpdate) {
    if (messageUpdate) {
      this._append(messageUpdate);
    }
  }
}

const H = [
  1779033703,
  -1150833019,
  1013904242,
  -1521486534,
  1359893119,
  -1694144372,
  528734635,
  1541459225
];
const K = [
  1116352408,
  1899447441,
  -1245643825,
  -373957723,
  961987163,
  1508970993,
  -1841331548,
  -1424204075,
  -670586216,
  310598401,
  607225278,
  1426881987,
  1925078388,
  -2132889090,
  -1680079193,
  -1046744716,
  -459576895,
  -272742522,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  -1740746414,
  -1473132947,
  -1341970488,
  -1084653625,
  -958395405,
  -710438585,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  -2117940946,
  -1838011259,
  -1564481375,
  -1474664885,
  -1035236496,
  -949202525,
  -778901479,
  -694614492,
  -200395387,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  -2067236844,
  -1933114872,
  -1866530822,
  -1538233109,
  -1090935817,
  -965641998
];
const W = [];
class SHA256 extends Hasher {
  constructor() {
    super(...arguments);
    this._hash = new WordArray([...H]);
  }
  reset() {
    super.reset();
    this._hash = new WordArray([...H]);
  }
  _doProcessBlock(M, offset) {
    const H2 = this._hash.words;
    let a = H2[0];
    let b = H2[1];
    let c = H2[2];
    let d = H2[3];
    let e = H2[4];
    let f = H2[5];
    let g = H2[6];
    let h = H2[7];
    for (let i = 0; i < 64; i++) {
      if (i < 16) {
        W[i] = M[offset + i] | 0;
      } else {
        const gamma0x = W[i - 15];
        const gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
        const gamma1x = W[i - 2];
        const gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
      }
      const ch = e & f ^ ~e & g;
      const maj = a & b ^ a & c ^ b & c;
      const sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
      const sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
      const t1 = h + sigma1 + ch + K[i] + W[i];
      const t2 = sigma0 + maj;
      h = g;
      g = f;
      f = e;
      e = d + t1 | 0;
      d = c;
      c = b;
      b = a;
      a = t1 + t2 | 0;
    }
    H2[0] = H2[0] + a | 0;
    H2[1] = H2[1] + b | 0;
    H2[2] = H2[2] + c | 0;
    H2[3] = H2[3] + d | 0;
    H2[4] = H2[4] + e | 0;
    H2[5] = H2[5] + f | 0;
    H2[6] = H2[6] + g | 0;
    H2[7] = H2[7] + h | 0;
  }
  finalize(messageUpdate) {
    super.finalize(messageUpdate);
    const nBitsTotal = this._nDataBytes * 8;
    const nBitsLeft = this._data.sigBytes * 8;
    this._data.words[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(
      nBitsTotal / 4294967296
    );
    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
    this._data.sigBytes = this._data.words.length * 4;
    this._process();
    return this._hash;
  }
}
function sha256base64(message) {
  return new SHA256().finalize(message).toString(Base64);
}

function hash(object, options = {}) {
  const hashed = typeof object === "string" ? object : objectHash(object, options);
  return sha256base64(hashed).slice(0, 10);
}

function isEqual(object1, object2, hashOptions = {}) {
  if (object1 === object2) {
    return true;
  }
  if (objectHash(object1, hashOptions) === objectHash(object2, hashOptions)) {
    return true;
  }
  return false;
}

const NODE_TYPES = {
  NORMAL: 0,
  WILDCARD: 1,
  PLACEHOLDER: 2
};

function createRouter$1(options = {}) {
  const ctx = {
    options,
    rootNode: createRadixNode(),
    staticRoutesMap: {}
  };
  const normalizeTrailingSlash = (p) => options.strictTrailingSlash ? p : p.replace(/\/$/, "") || "/";
  if (options.routes) {
    for (const path in options.routes) {
      insert(ctx, normalizeTrailingSlash(path), options.routes[path]);
    }
  }
  return {
    ctx,
    lookup: (path) => lookup(ctx, normalizeTrailingSlash(path)),
    insert: (path, data) => insert(ctx, normalizeTrailingSlash(path), data),
    remove: (path) => remove(ctx, normalizeTrailingSlash(path))
  };
}
function lookup(ctx, path) {
  const staticPathNode = ctx.staticRoutesMap[path];
  if (staticPathNode) {
    return staticPathNode.data;
  }
  const sections = path.split("/");
  const params = {};
  let paramsFound = false;
  let wildcardNode = null;
  let node = ctx.rootNode;
  let wildCardParam = null;
  for (let i = 0; i < sections.length; i++) {
    const section = sections[i];
    if (node.wildcardChildNode !== null) {
      wildcardNode = node.wildcardChildNode;
      wildCardParam = sections.slice(i).join("/");
    }
    const nextNode = node.children.get(section);
    if (nextNode === void 0) {
      if (node && node.placeholderChildren.length > 1) {
        const remaining = sections.length - i;
        node = node.placeholderChildren.find((c) => c.maxDepth === remaining) || null;
      } else {
        node = node.placeholderChildren[0] || null;
      }
      if (!node) {
        break;
      }
      if (node.paramName) {
        params[node.paramName] = section;
      }
      paramsFound = true;
    } else {
      node = nextNode;
    }
  }
  if ((node === null || node.data === null) && wildcardNode !== null) {
    node = wildcardNode;
    params[node.paramName || "_"] = wildCardParam;
    paramsFound = true;
  }
  if (!node) {
    return null;
  }
  if (paramsFound) {
    return {
      ...node.data,
      params: paramsFound ? params : void 0
    };
  }
  return node.data;
}
function insert(ctx, path, data) {
  let isStaticRoute = true;
  const sections = path.split("/");
  let node = ctx.rootNode;
  let _unnamedPlaceholderCtr = 0;
  const matchedNodes = [node];
  for (const section of sections) {
    let childNode;
    if (childNode = node.children.get(section)) {
      node = childNode;
    } else {
      const type = getNodeType(section);
      childNode = createRadixNode({ type, parent: node });
      node.children.set(section, childNode);
      if (type === NODE_TYPES.PLACEHOLDER) {
        childNode.paramName = section === "*" ? `_${_unnamedPlaceholderCtr++}` : section.slice(1);
        node.placeholderChildren.push(childNode);
        isStaticRoute = false;
      } else if (type === NODE_TYPES.WILDCARD) {
        node.wildcardChildNode = childNode;
        childNode.paramName = section.slice(
          3
          /* "**:" */
        ) || "_";
        isStaticRoute = false;
      }
      matchedNodes.push(childNode);
      node = childNode;
    }
  }
  for (const [depth, node2] of matchedNodes.entries()) {
    node2.maxDepth = Math.max(matchedNodes.length - depth, node2.maxDepth || 0);
  }
  node.data = data;
  if (isStaticRoute === true) {
    ctx.staticRoutesMap[path] = node;
  }
  return node;
}
function remove(ctx, path) {
  let success = false;
  const sections = path.split("/");
  let node = ctx.rootNode;
  for (const section of sections) {
    node = node.children.get(section);
    if (!node) {
      return success;
    }
  }
  if (node.data) {
    const lastSection = sections.at(-1) || "";
    node.data = null;
    if (Object.keys(node.children).length === 0 && node.parent) {
      node.parent.children.delete(lastSection);
      node.parent.wildcardChildNode = null;
      node.parent.placeholderChildren = [];
    }
    success = true;
  }
  return success;
}
function createRadixNode(options = {}) {
  return {
    type: options.type || NODE_TYPES.NORMAL,
    maxDepth: 0,
    parent: options.parent || null,
    children: /* @__PURE__ */ new Map(),
    data: options.data || null,
    paramName: options.paramName || null,
    wildcardChildNode: null,
    placeholderChildren: []
  };
}
function getNodeType(str) {
  if (str.startsWith("**")) {
    return NODE_TYPES.WILDCARD;
  }
  if (str[0] === ":" || str === "*") {
    return NODE_TYPES.PLACEHOLDER;
  }
  return NODE_TYPES.NORMAL;
}

function toRouteMatcher(router) {
  const table = _routerNodeToTable("", router.ctx.rootNode);
  return _createMatcher(table, router.ctx.options.strictTrailingSlash);
}
function _createMatcher(table, strictTrailingSlash) {
  return {
    ctx: { table },
    matchAll: (path) => _matchRoutes(path, table, strictTrailingSlash)
  };
}
function _createRouteTable() {
  return {
    static: /* @__PURE__ */ new Map(),
    wildcard: /* @__PURE__ */ new Map(),
    dynamic: /* @__PURE__ */ new Map()
  };
}
function _matchRoutes(path, table, strictTrailingSlash) {
  if (strictTrailingSlash !== true && path.endsWith("/")) {
    path = path.slice(0, -1) || "/";
  }
  const matches = [];
  for (const [key, value] of _sortRoutesMap(table.wildcard)) {
    if (path === key || path.startsWith(key + "/")) {
      matches.push(value);
    }
  }
  for (const [key, value] of _sortRoutesMap(table.dynamic)) {
    if (path.startsWith(key + "/")) {
      const subPath = "/" + path.slice(key.length).split("/").splice(2).join("/");
      matches.push(..._matchRoutes(subPath, value));
    }
  }
  const staticMatch = table.static.get(path);
  if (staticMatch) {
    matches.push(staticMatch);
  }
  return matches.filter(Boolean);
}
function _sortRoutesMap(m) {
  return [...m.entries()].sort((a, b) => a[0].length - b[0].length);
}
function _routerNodeToTable(initialPath, initialNode) {
  const table = _createRouteTable();
  function _addNode(path, node) {
    if (path) {
      if (node.type === NODE_TYPES.NORMAL && !(path.includes("*") || path.includes(":"))) {
        if (node.data) {
          table.static.set(path, node.data);
        }
      } else if (node.type === NODE_TYPES.WILDCARD) {
        table.wildcard.set(path.replace("/**", ""), node.data);
      } else if (node.type === NODE_TYPES.PLACEHOLDER) {
        const subTable = _routerNodeToTable("", node);
        if (node.data) {
          subTable.static.set("/", node.data);
        }
        table.dynamic.set(path.replace(/\/\*|\/:\w+/, ""), subTable);
        return;
      }
    }
    for (const [childPath, child] of node.children.entries()) {
      _addNode(`${path}/${childPath}`.replace("//", "/"), child);
    }
  }
  _addNode(initialPath, initialNode);
  return table;
}

function isPlainObject(value) {
  if (value === null || typeof value !== "object") {
    return false;
  }
  const prototype = Object.getPrototypeOf(value);
  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {
    return false;
  }
  if (Symbol.iterator in value) {
    return false;
  }
  if (Symbol.toStringTag in value) {
    return Object.prototype.toString.call(value) === "[object Module]";
  }
  return true;
}

function _defu(baseObject, defaults, namespace = ".", merger) {
  if (!isPlainObject(defaults)) {
    return _defu(baseObject, {}, namespace, merger);
  }
  const object = Object.assign({}, defaults);
  for (const key in baseObject) {
    if (key === "__proto__" || key === "constructor") {
      continue;
    }
    const value = baseObject[key];
    if (value === null || value === void 0) {
      continue;
    }
    if (merger && merger(object, key, value, namespace)) {
      continue;
    }
    if (Array.isArray(value) && Array.isArray(object[key])) {
      object[key] = [...value, ...object[key]];
    } else if (isPlainObject(value) && isPlainObject(object[key])) {
      object[key] = _defu(
        value,
        object[key],
        (namespace ? `${namespace}.` : "") + key.toString(),
        merger
      );
    } else {
      object[key] = value;
    }
  }
  return object;
}
function createDefu(merger) {
  return (...arguments_) => (
    // eslint-disable-next-line unicorn/no-array-reduce
    arguments_.reduce((p, c) => _defu(p, c, "", merger), {})
  );
}
const defu = createDefu();
const defuFn = createDefu((object, key, currentValue) => {
  if (object[key] !== void 0 && typeof currentValue === "function") {
    object[key] = currentValue(object[key]);
    return true;
  }
});

function rawHeaders(headers) {
  const rawHeaders2 = [];
  for (const key in headers) {
    if (Array.isArray(headers[key])) {
      for (const h of headers[key]) {
        rawHeaders2.push(key, h);
      }
    } else {
      rawHeaders2.push(key, headers[key]);
    }
  }
  return rawHeaders2;
}
function mergeFns(...functions) {
  return function(...args) {
    for (const fn of functions) {
      fn(...args);
    }
  };
}
function createNotImplementedError(name) {
  throw new Error(`[unenv] ${name} is not implemented yet!`);
}

let defaultMaxListeners = 10;
let EventEmitter$1 = class EventEmitter {
  __unenv__ = true;
  _events = /* @__PURE__ */ Object.create(null);
  _maxListeners;
  static get defaultMaxListeners() {
    return defaultMaxListeners;
  }
  static set defaultMaxListeners(arg) {
    if (typeof arg !== "number" || arg < 0 || Number.isNaN(arg)) {
      throw new RangeError(
        'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + "."
      );
    }
    defaultMaxListeners = arg;
  }
  setMaxListeners(n) {
    if (typeof n !== "number" || n < 0 || Number.isNaN(n)) {
      throw new RangeError(
        'The value of "n" is out of range. It must be a non-negative number. Received ' + n + "."
      );
    }
    this._maxListeners = n;
    return this;
  }
  getMaxListeners() {
    return _getMaxListeners(this);
  }
  emit(type, ...args) {
    if (!this._events[type] || this._events[type].length === 0) {
      return false;
    }
    if (type === "error") {
      let er;
      if (args.length > 0) {
        er = args[0];
      }
      if (er instanceof Error) {
        throw er;
      }
      const err = new Error(
        "Unhandled error." + (er ? " (" + er.message + ")" : "")
      );
      err.context = er;
      throw err;
    }
    for (const _listener of this._events[type]) {
      (_listener.listener || _listener).apply(this, args);
    }
    return true;
  }
  addListener(type, listener) {
    return _addListener(this, type, listener, false);
  }
  on(type, listener) {
    return _addListener(this, type, listener, false);
  }
  prependListener(type, listener) {
    return _addListener(this, type, listener, true);
  }
  once(type, listener) {
    return this.on(type, _wrapOnce(this, type, listener));
  }
  prependOnceListener(type, listener) {
    return this.prependListener(type, _wrapOnce(this, type, listener));
  }
  removeListener(type, listener) {
    return _removeListener(this, type, listener);
  }
  off(type, listener) {
    return this.removeListener(type, listener);
  }
  removeAllListeners(type) {
    return _removeAllListeners(this, type);
  }
  listeners(type) {
    return _listeners(this, type, true);
  }
  rawListeners(type) {
    return _listeners(this, type, false);
  }
  listenerCount(type) {
    return this.rawListeners(type).length;
  }
  eventNames() {
    return Object.keys(this._events);
  }
};
function _addListener(target, type, listener, prepend) {
  _checkListener(listener);
  if (target._events.newListener !== void 0) {
    target.emit("newListener", type, listener.listener || listener);
  }
  if (!target._events[type]) {
    target._events[type] = [];
  }
  if (prepend) {
    target._events[type].unshift(listener);
  } else {
    target._events[type].push(listener);
  }
  const maxListeners = _getMaxListeners(target);
  if (maxListeners > 0 && target._events[type].length > maxListeners && !target._events[type].warned) {
    target._events[type].warned = true;
    const warning = new Error(
      `[unenv] Possible EventEmitter memory leak detected. ${target._events[type].length} ${type} listeners added. Use emitter.setMaxListeners() to increase limit`
    );
    warning.name = "MaxListenersExceededWarning";
    warning.emitter = target;
    warning.type = type;
    warning.count = target._events[type]?.length;
    console.warn(warning);
  }
  return target;
}
function _removeListener(target, type, listener) {
  _checkListener(listener);
  if (!target._events[type] || target._events[type].length === 0) {
    return target;
  }
  const lenBeforeFilter = target._events[type].length;
  target._events[type] = target._events[type].filter((fn) => fn !== listener);
  if (lenBeforeFilter === target._events[type].length) {
    return target;
  }
  if (target._events.removeListener) {
    target.emit("removeListener", type, listener.listener || listener);
  }
  if (target._events[type].length === 0) {
    delete target._events[type];
  }
  return target;
}
function _removeAllListeners(target, type) {
  if (!target._events[type] || target._events[type].length === 0) {
    return target;
  }
  if (target._events.removeListener) {
    for (const _listener of target._events[type]) {
      target.emit("removeListener", type, _listener.listener || _listener);
    }
  }
  delete target._events[type];
  return target;
}
function _wrapOnce(target, type, listener) {
  let fired = false;
  const wrapper = (...args) => {
    if (fired) {
      return;
    }
    target.removeListener(type, wrapper);
    fired = true;
    return args.length === 0 ? listener.call(target) : listener.apply(target, args);
  };
  wrapper.listener = listener;
  return wrapper;
}
function _getMaxListeners(target) {
  return target._maxListeners ?? EventEmitter$1.defaultMaxListeners;
}
function _listeners(target, type, unwrap) {
  let listeners = target._events[type];
  if (typeof listeners === "function") {
    listeners = [listeners];
  }
  return unwrap ? listeners.map((l) => l.listener || l) : listeners;
}
function _checkListener(listener) {
  if (typeof listener !== "function") {
    throw new TypeError(
      'The "listener" argument must be of type Function. Received type ' + typeof listener
    );
  }
}

const EventEmitter = globalThis.EventEmitter || EventEmitter$1;

class _Readable extends EventEmitter {
  __unenv__ = true;
  readableEncoding = null;
  readableEnded = true;
  readableFlowing = false;
  readableHighWaterMark = 0;
  readableLength = 0;
  readableObjectMode = false;
  readableAborted = false;
  readableDidRead = false;
  closed = false;
  errored = null;
  readable = false;
  destroyed = false;
  static from(_iterable, options) {
    return new _Readable(options);
  }
  constructor(_opts) {
    super();
  }
  _read(_size) {
  }
  read(_size) {
  }
  setEncoding(_encoding) {
    return this;
  }
  pause() {
    return this;
  }
  resume() {
    return this;
  }
  isPaused() {
    return true;
  }
  unpipe(_destination) {
    return this;
  }
  unshift(_chunk, _encoding) {
  }
  wrap(_oldStream) {
    return this;
  }
  push(_chunk, _encoding) {
    return false;
  }
  _destroy(_error, _callback) {
    this.removeAllListeners();
  }
  destroy(error) {
    this.destroyed = true;
    this._destroy(error);
    return this;
  }
  pipe(_destenition, _options) {
    return {};
  }
  compose(stream, options) {
    throw new Error("[unenv] Method not implemented.");
  }
  [Symbol.asyncDispose]() {
    this.destroy();
    return Promise.resolve();
  }
  async *[Symbol.asyncIterator]() {
    throw createNotImplementedError("Readable.asyncIterator");
  }
  iterator(options) {
    throw createNotImplementedError("Readable.iterator");
  }
  map(fn, options) {
    throw createNotImplementedError("Readable.map");
  }
  filter(fn, options) {
    throw createNotImplementedError("Readable.filter");
  }
  forEach(fn, options) {
    throw createNotImplementedError("Readable.forEach");
  }
  reduce(fn, initialValue, options) {
    throw createNotImplementedError("Readable.reduce");
  }
  find(fn, options) {
    throw createNotImplementedError("Readable.find");
  }
  findIndex(fn, options) {
    throw createNotImplementedError("Readable.findIndex");
  }
  some(fn, options) {
    throw createNotImplementedError("Readable.some");
  }
  toArray(options) {
    throw createNotImplementedError("Readable.toArray");
  }
  every(fn, options) {
    throw createNotImplementedError("Readable.every");
  }
  flatMap(fn, options) {
    throw createNotImplementedError("Readable.flatMap");
  }
  drop(limit, options) {
    throw createNotImplementedError("Readable.drop");
  }
  take(limit, options) {
    throw createNotImplementedError("Readable.take");
  }
  asIndexedPairs(options) {
    throw createNotImplementedError("Readable.asIndexedPairs");
  }
}
const Readable = globalThis.Readable || _Readable;

class _Writable extends EventEmitter {
  __unenv__ = true;
  writable = true;
  writableEnded = false;
  writableFinished = false;
  writableHighWaterMark = 0;
  writableLength = 0;
  writableObjectMode = false;
  writableCorked = 0;
  closed = false;
  errored = null;
  writableNeedDrain = false;
  destroyed = false;
  _data;
  _encoding = "utf-8";
  constructor(_opts) {
    super();
  }
  pipe(_destenition, _options) {
    return {};
  }
  _write(chunk, encoding, callback) {
    if (this.writableEnded) {
      if (callback) {
        callback();
      }
      return;
    }
    if (this._data === void 0) {
      this._data = chunk;
    } else {
      const a = typeof this._data === "string" ? Buffer.from(this._data, this._encoding || encoding || "utf8") : this._data;
      const b = typeof chunk === "string" ? Buffer.from(chunk, encoding || this._encoding || "utf8") : chunk;
      this._data = Buffer.concat([a, b]);
    }
    this._encoding = encoding;
    if (callback) {
      callback();
    }
  }
  _writev(_chunks, _callback) {
  }
  _destroy(_error, _callback) {
  }
  _final(_callback) {
  }
  write(chunk, arg2, arg3) {
    const encoding = typeof arg2 === "string" ? this._encoding : "utf-8";
    const cb = typeof arg2 === "function" ? arg2 : typeof arg3 === "function" ? arg3 : void 0;
    this._write(chunk, encoding, cb);
    return true;
  }
  setDefaultEncoding(_encoding) {
    return this;
  }
  end(arg1, arg2, arg3) {
    const callback = typeof arg1 === "function" ? arg1 : typeof arg2 === "function" ? arg2 : typeof arg3 === "function" ? arg3 : void 0;
    if (this.writableEnded) {
      if (callback) {
        callback();
      }
      return this;
    }
    const data = arg1 === callback ? void 0 : arg1;
    if (data) {
      const encoding = arg2 === callback ? void 0 : arg2;
      this.write(data, encoding, callback);
    }
    this.writableEnded = true;
    this.writableFinished = true;
    this.emit("close");
    this.emit("finish");
    return this;
  }
  cork() {
  }
  uncork() {
  }
  destroy(_error) {
    this.destroyed = true;
    delete this._data;
    this.removeAllListeners();
    return this;
  }
  compose(stream, options) {
    throw new Error("[h3] Method not implemented.");
  }
}
const Writable = globalThis.Writable || _Writable;

const __Duplex = class {
  allowHalfOpen = true;
  _destroy;
  constructor(readable = new Readable(), writable = new Writable()) {
    Object.assign(this, readable);
    Object.assign(this, writable);
    this._destroy = mergeFns(readable._destroy, writable._destroy);
  }
};
function getDuplex() {
  Object.assign(__Duplex.prototype, Readable.prototype);
  Object.assign(__Duplex.prototype, Writable.prototype);
  return __Duplex;
}
const _Duplex = /* @__PURE__ */ getDuplex();
const Duplex = globalThis.Duplex || _Duplex;

class Socket extends Duplex {
  __unenv__ = true;
  bufferSize = 0;
  bytesRead = 0;
  bytesWritten = 0;
  connecting = false;
  destroyed = false;
  pending = false;
  localAddress = "";
  localPort = 0;
  remoteAddress = "";
  remoteFamily = "";
  remotePort = 0;
  autoSelectFamilyAttemptedAddresses = [];
  readyState = "readOnly";
  constructor(_options) {
    super();
  }
  write(_buffer, _arg1, _arg2) {
    return false;
  }
  connect(_arg1, _arg2, _arg3) {
    return this;
  }
  end(_arg1, _arg2, _arg3) {
    return this;
  }
  setEncoding(_encoding) {
    return this;
  }
  pause() {
    return this;
  }
  resume() {
    return this;
  }
  setTimeout(_timeout, _callback) {
    return this;
  }
  setNoDelay(_noDelay) {
    return this;
  }
  setKeepAlive(_enable, _initialDelay) {
    return this;
  }
  address() {
    return {};
  }
  unref() {
    return this;
  }
  ref() {
    return this;
  }
  destroySoon() {
    this.destroy();
  }
  resetAndDestroy() {
    const err = new Error("ERR_SOCKET_CLOSED");
    err.code = "ERR_SOCKET_CLOSED";
    this.destroy(err);
    return this;
  }
}

class IncomingMessage extends Readable {
  __unenv__ = {};
  aborted = false;
  httpVersion = "1.1";
  httpVersionMajor = 1;
  httpVersionMinor = 1;
  complete = true;
  connection;
  socket;
  headers = {};
  trailers = {};
  method = "GET";
  url = "/";
  statusCode = 200;
  statusMessage = "";
  closed = false;
  errored = null;
  readable = false;
  constructor(socket) {
    super();
    this.socket = this.connection = socket || new Socket();
  }
  get rawHeaders() {
    return rawHeaders(this.headers);
  }
  get rawTrailers() {
    return [];
  }
  setTimeout(_msecs, _callback) {
    return this;
  }
  get headersDistinct() {
    return _distinct(this.headers);
  }
  get trailersDistinct() {
    return _distinct(this.trailers);
  }
}
function _distinct(obj) {
  const d = {};
  for (const [key, value] of Object.entries(obj)) {
    if (key) {
      d[key] = (Array.isArray(value) ? value : [value]).filter(
        Boolean
      );
    }
  }
  return d;
}

class ServerResponse extends Writable {
  __unenv__ = true;
  statusCode = 200;
  statusMessage = "";
  upgrading = false;
  chunkedEncoding = false;
  shouldKeepAlive = false;
  useChunkedEncodingByDefault = false;
  sendDate = false;
  finished = false;
  headersSent = false;
  strictContentLength = false;
  connection = null;
  socket = null;
  req;
  _headers = {};
  constructor(req) {
    super();
    this.req = req;
  }
  assignSocket(socket) {
    socket._httpMessage = this;
    this.socket = socket;
    this.connection = socket;
    this.emit("socket", socket);
    this._flush();
  }
  _flush() {
    this.flushHeaders();
  }
  detachSocket(_socket) {
  }
  writeContinue(_callback) {
  }
  writeHead(statusCode, arg1, arg2) {
    if (statusCode) {
      this.statusCode = statusCode;
    }
    if (typeof arg1 === "string") {
      this.statusMessage = arg1;
      arg1 = void 0;
    }
    const headers = arg2 || arg1;
    if (headers) {
      if (Array.isArray(headers)) ; else {
        for (const key in headers) {
          this.setHeader(key, headers[key]);
        }
      }
    }
    this.headersSent = true;
    return this;
  }
  writeProcessing() {
  }
  setTimeout(_msecs, _callback) {
    return this;
  }
  appendHeader(name, value) {
    name = name.toLowerCase();
    const current = this._headers[name];
    const all = [
      ...Array.isArray(current) ? current : [current],
      ...Array.isArray(value) ? value : [value]
    ].filter(Boolean);
    this._headers[name] = all.length > 1 ? all : all[0];
    return this;
  }
  setHeader(name, value) {
    this._headers[name.toLowerCase()] = value;
    return this;
  }
  getHeader(name) {
    return this._headers[name.toLowerCase()];
  }
  getHeaders() {
    return this._headers;
  }
  getHeaderNames() {
    return Object.keys(this._headers);
  }
  hasHeader(name) {
    return name.toLowerCase() in this._headers;
  }
  removeHeader(name) {
    delete this._headers[name.toLowerCase()];
  }
  addTrailers(_headers) {
  }
  flushHeaders() {
  }
  writeEarlyHints(_headers, cb) {
    if (typeof cb === "function") {
      cb();
    }
  }
}

function useBase(base, handler) {
  base = withoutTrailingSlash(base);
  if (!base || base === "/") {
    return handler;
  }
  return eventHandler(async (event) => {
    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || "/";
    const _path = event._path || event.node.req.url || "/";
    event._path = withoutBase(event.path || "/", base);
    event.node.req.url = event._path;
    try {
      return await handler(event);
    } finally {
      event._path = event.node.req.url = _path;
    }
  });
}

function hasProp(obj, prop) {
  try {
    return prop in obj;
  } catch {
    return false;
  }
}

var __defProp$2 = Object.defineProperty;
var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField$2 = (obj, key, value) => {
  __defNormalProp$2(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class H3Error extends Error {
  constructor(message, opts = {}) {
    super(message, opts);
    __publicField$2(this, "statusCode", 500);
    __publicField$2(this, "fatal", false);
    __publicField$2(this, "unhandled", false);
    __publicField$2(this, "statusMessage");
    __publicField$2(this, "data");
    __publicField$2(this, "cause");
    if (opts.cause && !this.cause) {
      this.cause = opts.cause;
    }
  }
  toJSON() {
    const obj = {
      message: this.message,
      statusCode: sanitizeStatusCode(this.statusCode, 500)
    };
    if (this.statusMessage) {
      obj.statusMessage = sanitizeStatusMessage(this.statusMessage);
    }
    if (this.data !== void 0) {
      obj.data = this.data;
    }
    return obj;
  }
}
__publicField$2(H3Error, "__h3_error__", true);
function createError$1(input) {
  if (typeof input === "string") {
    return new H3Error(input);
  }
  if (isError(input)) {
    return input;
  }
  const err = new H3Error(input.message ?? input.statusMessage ?? "", {
    cause: input.cause || input
  });
  if (hasProp(input, "stack")) {
    try {
      Object.defineProperty(err, "stack", {
        get() {
          return input.stack;
        }
      });
    } catch {
      try {
        err.stack = input.stack;
      } catch {
      }
    }
  }
  if (input.data) {
    err.data = input.data;
  }
  if (input.statusCode) {
    err.statusCode = sanitizeStatusCode(input.statusCode, err.statusCode);
  } else if (input.status) {
    err.statusCode = sanitizeStatusCode(input.status, err.statusCode);
  }
  if (input.statusMessage) {
    err.statusMessage = input.statusMessage;
  } else if (input.statusText) {
    err.statusMessage = input.statusText;
  }
  if (err.statusMessage) {
    const originalMessage = err.statusMessage;
    const sanitizedMessage = sanitizeStatusMessage(err.statusMessage);
    if (sanitizedMessage !== originalMessage) {
      console.warn(
        "[h3] Please prefer using `message` for longer error messages instead of `statusMessage`. In the future, `statusMessage` will be sanitized by default."
      );
    }
  }
  if (input.fatal !== void 0) {
    err.fatal = input.fatal;
  }
  if (input.unhandled !== void 0) {
    err.unhandled = input.unhandled;
  }
  return err;
}
function sendError(event, error, debug) {
  if (event.handled) {
    return;
  }
  const h3Error = isError(error) ? error : createError$1(error);
  const responseBody = {
    statusCode: h3Error.statusCode,
    statusMessage: h3Error.statusMessage,
    stack: [],
    data: h3Error.data
  };
  if (debug) {
    responseBody.stack = (h3Error.stack || "").split("\n").map((l) => l.trim());
  }
  if (event.handled) {
    return;
  }
  const _code = Number.parseInt(h3Error.statusCode);
  setResponseStatus(event, _code, h3Error.statusMessage);
  event.node.res.setHeader("content-type", MIMES.json);
  event.node.res.end(JSON.stringify(responseBody, void 0, 2));
}
function isError(input) {
  return input?.constructor?.__h3_error__ === true;
}

function getQuery(event) {
  return getQuery$1(event.path || "");
}
function isMethod(event, expected, allowHead) {
  if (typeof expected === "string") {
    if (event.method === expected) {
      return true;
    }
  } else if (expected.includes(event.method)) {
    return true;
  }
  return false;
}
function assertMethod(event, expected, allowHead) {
  if (!isMethod(event, expected)) {
    throw createError$1({
      statusCode: 405,
      statusMessage: "HTTP method is not allowed."
    });
  }
}
function getRequestHeaders(event) {
  const _headers = {};
  for (const key in event.node.req.headers) {
    const val = event.node.req.headers[key];
    _headers[key] = Array.isArray(val) ? val.filter(Boolean).join(", ") : val;
  }
  return _headers;
}
function getRequestHeader(event, name) {
  const headers = getRequestHeaders(event);
  const value = headers[name.toLowerCase()];
  return value;
}
function getRequestHost(event, opts = {}) {
  if (opts.xForwardedHost) {
    const xForwardedHost = event.node.req.headers["x-forwarded-host"];
    if (xForwardedHost) {
      return xForwardedHost;
    }
  }
  return event.node.req.headers.host || "localhost";
}
function getRequestProtocol(event, opts = {}) {
  if (opts.xForwardedProto !== false && event.node.req.headers["x-forwarded-proto"] === "https") {
    return "https";
  }
  return event.node.req.connection?.encrypted ? "https" : "http";
}

const RawBodySymbol = Symbol.for("h3RawBody");
const ParsedBodySymbol = Symbol.for("h3ParsedBody");
const PayloadMethods$1 = ["PATCH", "POST", "PUT", "DELETE"];
function readRawBody(event, encoding = "utf8") {
  assertMethod(event, PayloadMethods$1);
  const _rawBody = event._requestBody || event.web?.request?.body || event.node.req[RawBodySymbol] || event.node.req.rawBody || event.node.req.body;
  if (_rawBody) {
    const promise2 = Promise.resolve(_rawBody).then((_resolved) => {
      if (Buffer.isBuffer(_resolved)) {
        return _resolved;
      }
      if (typeof _resolved.pipeTo === "function") {
        return new Promise((resolve, reject) => {
          const chunks = [];
          _resolved.pipeTo(
            new WritableStream({
              write(chunk) {
                chunks.push(chunk);
              },
              close() {
                resolve(Buffer.concat(chunks));
              },
              abort(reason) {
                reject(reason);
              }
            })
          ).catch(reject);
        });
      } else if (typeof _resolved.pipe === "function") {
        return new Promise((resolve, reject) => {
          const chunks = [];
          _resolved.on("data", (chunk) => {
            chunks.push(chunk);
          }).on("end", () => {
            resolve(Buffer.concat(chunks));
          }).on("error", reject);
        });
      }
      if (_resolved.constructor === Object) {
        return Buffer.from(JSON.stringify(_resolved));
      }
      return Buffer.from(_resolved);
    });
    return encoding ? promise2.then((buff) => buff.toString(encoding)) : promise2;
  }
  if (!Number.parseInt(event.node.req.headers["content-length"] || "") && !String(event.node.req.headers["transfer-encoding"] ?? "").split(",").map((e) => e.trim()).filter(Boolean).includes("chunked")) {
    return Promise.resolve(void 0);
  }
  const promise = event.node.req[RawBodySymbol] = new Promise(
    (resolve, reject) => {
      const bodyData = [];
      event.node.req.on("error", (err) => {
        reject(err);
      }).on("data", (chunk) => {
        bodyData.push(chunk);
      }).on("end", () => {
        resolve(Buffer.concat(bodyData));
      });
    }
  );
  const result = encoding ? promise.then((buff) => buff.toString(encoding)) : promise;
  return result;
}
async function readBody(event, options = {}) {
  const request = event.node.req;
  if (hasProp(request, ParsedBodySymbol)) {
    return request[ParsedBodySymbol];
  }
  const contentType = request.headers["content-type"] || "";
  const body = await readRawBody(event);
  let parsed;
  if (contentType === "application/json") {
    parsed = _parseJSON(body, options.strict ?? true);
  } else if (contentType.startsWith("application/x-www-form-urlencoded")) {
    parsed = _parseURLEncodedBody(body);
  } else if (contentType.startsWith("text/")) {
    parsed = body;
  } else {
    parsed = _parseJSON(body, options.strict ?? false);
  }
  request[ParsedBodySymbol] = parsed;
  return parsed;
}
function getRequestWebStream(event) {
  if (!PayloadMethods$1.includes(event.method)) {
    return;
  }
  const bodyStream = event.web?.request?.body || event._requestBody;
  if (bodyStream) {
    return bodyStream;
  }
  const _hasRawBody = RawBodySymbol in event.node.req || "rawBody" in event.node.req || "body" in event.node.req || "__unenv__" in event.node.req;
  if (_hasRawBody) {
    return new ReadableStream({
      async start(controller) {
        const _rawBody = await readRawBody(event, false);
        if (_rawBody) {
          controller.enqueue(_rawBody);
        }
        controller.close();
      }
    });
  }
  return new ReadableStream({
    start: (controller) => {
      event.node.req.on("data", (chunk) => {
        controller.enqueue(chunk);
      });
      event.node.req.on("end", () => {
        controller.close();
      });
      event.node.req.on("error", (err) => {
        controller.error(err);
      });
    }
  });
}
function _parseJSON(body = "", strict) {
  if (!body) {
    return void 0;
  }
  try {
    return destr(body, { strict });
  } catch {
    throw createError$1({
      statusCode: 400,
      statusMessage: "Bad Request",
      message: "Invalid JSON body"
    });
  }
}
function _parseURLEncodedBody(body) {
  const form = new URLSearchParams(body);
  const parsedForm = /* @__PURE__ */ Object.create(null);
  for (const [key, value] of form.entries()) {
    if (hasProp(parsedForm, key)) {
      if (!Array.isArray(parsedForm[key])) {
        parsedForm[key] = [parsedForm[key]];
      }
      parsedForm[key].push(value);
    } else {
      parsedForm[key] = value;
    }
  }
  return parsedForm;
}

function handleCacheHeaders(event, opts) {
  const cacheControls = ["public", ...opts.cacheControls || []];
  let cacheMatched = false;
  if (opts.maxAge !== void 0) {
    cacheControls.push(`max-age=${+opts.maxAge}`, `s-maxage=${+opts.maxAge}`);
  }
  if (opts.modifiedTime) {
    const modifiedTime = new Date(opts.modifiedTime);
    const ifModifiedSince = event.node.req.headers["if-modified-since"];
    event.node.res.setHeader("last-modified", modifiedTime.toUTCString());
    if (ifModifiedSince && new Date(ifModifiedSince) >= opts.modifiedTime) {
      cacheMatched = true;
    }
  }
  if (opts.etag) {
    event.node.res.setHeader("etag", opts.etag);
    const ifNonMatch = event.node.req.headers["if-none-match"];
    if (ifNonMatch === opts.etag) {
      cacheMatched = true;
    }
  }
  event.node.res.setHeader("cache-control", cacheControls.join(", "));
  if (cacheMatched) {
    event.node.res.statusCode = 304;
    if (!event.handled) {
      event.node.res.end();
    }
    return true;
  }
  return false;
}

const MIMES = {
  html: "text/html",
  json: "application/json"
};

const DISALLOWED_STATUS_CHARS = /[^\u0009\u0020-\u007E]/g;
function sanitizeStatusMessage(statusMessage = "") {
  return statusMessage.replace(DISALLOWED_STATUS_CHARS, "");
}
function sanitizeStatusCode(statusCode, defaultStatusCode = 200) {
  if (!statusCode) {
    return defaultStatusCode;
  }
  if (typeof statusCode === "string") {
    statusCode = Number.parseInt(statusCode, 10);
  }
  if (statusCode < 100 || statusCode > 999) {
    return defaultStatusCode;
  }
  return statusCode;
}

function parseCookies(event) {
  return parse$1(event.node.req.headers.cookie || "");
}
function getCookie(event, name) {
  return parseCookies(event)[name];
}
function setCookie(event, name, value, serializeOptions) {
  serializeOptions = { path: "/", ...serializeOptions };
  const cookieStr = serialize(name, value, serializeOptions);
  let setCookies = event.node.res.getHeader("set-cookie");
  if (!Array.isArray(setCookies)) {
    setCookies = [setCookies];
  }
  const _optionsHash = objectHash(serializeOptions);
  setCookies = setCookies.filter((cookieValue) => {
    return cookieValue && _optionsHash !== objectHash(parse$1(cookieValue));
  });
  event.node.res.setHeader("set-cookie", [...setCookies, cookieStr]);
}
function deleteCookie(event, name, serializeOptions) {
  setCookie(event, name, "", {
    ...serializeOptions,
    maxAge: 0
  });
}
function splitCookiesString(cookiesString) {
  if (Array.isArray(cookiesString)) {
    return cookiesString.flatMap((c) => splitCookiesString(c));
  }
  if (typeof cookiesString !== "string") {
    return [];
  }
  const cookiesStrings = [];
  let pos = 0;
  let start;
  let ch;
  let lastComma;
  let nextStart;
  let cookiesSeparatorFound;
  const skipWhitespace = () => {
    while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
      pos += 1;
    }
    return pos < cookiesString.length;
  };
  const notSpecialChar = () => {
    ch = cookiesString.charAt(pos);
    return ch !== "=" && ch !== ";" && ch !== ",";
  };
  while (pos < cookiesString.length) {
    start = pos;
    cookiesSeparatorFound = false;
    while (skipWhitespace()) {
      ch = cookiesString.charAt(pos);
      if (ch === ",") {
        lastComma = pos;
        pos += 1;
        skipWhitespace();
        nextStart = pos;
        while (pos < cookiesString.length && notSpecialChar()) {
          pos += 1;
        }
        if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
          cookiesSeparatorFound = true;
          pos = nextStart;
          cookiesStrings.push(cookiesString.slice(start, lastComma));
          start = pos;
        } else {
          pos = lastComma + 1;
        }
      } else {
        pos += 1;
      }
    }
    if (!cookiesSeparatorFound || pos >= cookiesString.length) {
      cookiesStrings.push(cookiesString.slice(start, cookiesString.length));
    }
  }
  return cookiesStrings;
}

const defer = typeof setImmediate === "undefined" ? (fn) => fn() : setImmediate;
function send(event, data, type) {
  if (type) {
    defaultContentType(event, type);
  }
  return new Promise((resolve) => {
    defer(() => {
      if (!event.handled) {
        event.node.res.end(data);
      }
      resolve();
    });
  });
}
function sendNoContent(event, code) {
  if (event.handled) {
    return;
  }
  if (!code && event.node.res.statusCode !== 200) {
    code = event.node.res.statusCode;
  }
  const _code = sanitizeStatusCode(code, 204);
  if (_code === 204) {
    event.node.res.removeHeader("content-length");
  }
  event.node.res.writeHead(_code);
  event.node.res.end();
}
function setResponseStatus(event, code, text) {
  if (code) {
    event.node.res.statusCode = sanitizeStatusCode(
      code,
      event.node.res.statusCode
    );
  }
  if (text) {
    event.node.res.statusMessage = sanitizeStatusMessage(text);
  }
}
function getResponseStatus(event) {
  return event.node.res.statusCode;
}
function getResponseStatusText(event) {
  return event.node.res.statusMessage;
}
function defaultContentType(event, type) {
  if (type && event.node.res.statusCode !== 304 && !event.node.res.getHeader("content-type")) {
    event.node.res.setHeader("content-type", type);
  }
}
function sendRedirect(event, location, code = 302) {
  event.node.res.statusCode = sanitizeStatusCode(
    code,
    event.node.res.statusCode
  );
  event.node.res.setHeader("location", location);
  const encodedLoc = location.replace(/"/g, "%22");
  const html = `<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=${encodedLoc}"></head></html>`;
  return send(event, html, MIMES.html);
}
function getResponseHeader(event, name) {
  return event.node.res.getHeader(name);
}
function setResponseHeaders(event, headers) {
  for (const [name, value] of Object.entries(headers)) {
    event.node.res.setHeader(
      name,
      value
    );
  }
}
const setHeaders = setResponseHeaders;
function setResponseHeader(event, name, value) {
  event.node.res.setHeader(name, value);
}
const setHeader = setResponseHeader;
function appendResponseHeader(event, name, value) {
  let current = event.node.res.getHeader(name);
  if (!current) {
    event.node.res.setHeader(name, value);
    return;
  }
  if (!Array.isArray(current)) {
    current = [current.toString()];
  }
  event.node.res.setHeader(name, [...current, value]);
}
const appendHeader = appendResponseHeader;
function removeResponseHeader(event, name) {
  return event.node.res.removeHeader(name);
}
function isStream(data) {
  if (!data || typeof data !== "object") {
    return false;
  }
  if (typeof data.pipe === "function") {
    if (typeof data._read === "function") {
      return true;
    }
    if (typeof data.abort === "function") {
      return true;
    }
  }
  if (typeof data.pipeTo === "function") {
    return true;
  }
  return false;
}
function isWebResponse(data) {
  return typeof Response !== "undefined" && data instanceof Response;
}
function sendStream(event, stream) {
  if (!stream || typeof stream !== "object") {
    throw new Error("[h3] Invalid stream provided.");
  }
  event.node.res._data = stream;
  if (!event.node.res.socket) {
    event._handled = true;
    return Promise.resolve();
  }
  if (hasProp(stream, "pipeTo") && typeof stream.pipeTo === "function") {
    return stream.pipeTo(
      new WritableStream({
        write(chunk) {
          event.node.res.write(chunk);
        }
      })
    ).then(() => {
      event.node.res.end();
    });
  }
  if (hasProp(stream, "pipe") && typeof stream.pipe === "function") {
    return new Promise((resolve, reject) => {
      stream.pipe(event.node.res);
      if (stream.on) {
        stream.on("end", () => {
          event.node.res.end();
          resolve();
        });
        stream.on("error", (error) => {
          reject(error);
        });
      }
      event.node.res.on("close", () => {
        if (stream.abort) {
          stream.abort();
        }
      });
    });
  }
  throw new Error("[h3] Invalid or incompatible stream provided.");
}
function sendWebResponse(event, response) {
  for (const [key, value] of response.headers) {
    if (key === "set-cookie") {
      event.node.res.appendHeader(key, splitCookiesString(value));
    } else {
      event.node.res.setHeader(key, value);
    }
  }
  if (response.status) {
    event.node.res.statusCode = sanitizeStatusCode(
      response.status,
      event.node.res.statusCode
    );
  }
  if (response.statusText) {
    event.node.res.statusMessage = sanitizeStatusMessage(response.statusText);
  }
  if (response.redirected) {
    event.node.res.setHeader("location", response.url);
  }
  if (!response.body) {
    event.node.res.end();
    return;
  }
  return sendStream(event, response.body);
}

const PayloadMethods = /* @__PURE__ */ new Set(["PATCH", "POST", "PUT", "DELETE"]);
const ignoredHeaders = /* @__PURE__ */ new Set([
  "transfer-encoding",
  "connection",
  "keep-alive",
  "upgrade",
  "expect",
  "host",
  "accept"
]);
async function proxyRequest(event, target, opts = {}) {
  let body;
  let duplex;
  if (PayloadMethods.has(event.method)) {
    if (opts.streamRequest) {
      body = getRequestWebStream(event);
      duplex = "half";
    } else {
      body = await readRawBody(event, false).catch(() => void 0);
    }
  }
  const method = opts.fetchOptions?.method || event.method;
  const fetchHeaders = mergeHeaders(
    getProxyRequestHeaders(event),
    opts.fetchOptions?.headers,
    opts.headers
  );
  return sendProxy(event, target, {
    ...opts,
    fetchOptions: {
      method,
      body,
      duplex,
      ...opts.fetchOptions,
      headers: fetchHeaders
    }
  });
}
async function sendProxy(event, target, opts = {}) {
  let response;
  try {
    response = await _getFetch(opts.fetch)(target, {
      headers: opts.headers,
      ignoreResponseError: true,
      // make $ofetch.raw transparent
      ...opts.fetchOptions
    });
  } catch (error) {
    throw createError$1({
      status: 502,
      statusMessage: "Bad Gateway",
      cause: error
    });
  }
  event.node.res.statusCode = sanitizeStatusCode(
    response.status,
    event.node.res.statusCode
  );
  event.node.res.statusMessage = sanitizeStatusMessage(response.statusText);
  const cookies = [];
  for (const [key, value] of response.headers.entries()) {
    if (key === "content-encoding") {
      continue;
    }
    if (key === "content-length") {
      continue;
    }
    if (key === "set-cookie") {
      cookies.push(...splitCookiesString(value));
      continue;
    }
    event.node.res.setHeader(key, value);
  }
  if (cookies.length > 0) {
    event.node.res.setHeader(
      "set-cookie",
      cookies.map((cookie) => {
        if (opts.cookieDomainRewrite) {
          cookie = rewriteCookieProperty(
            cookie,
            opts.cookieDomainRewrite,
            "domain"
          );
        }
        if (opts.cookiePathRewrite) {
          cookie = rewriteCookieProperty(
            cookie,
            opts.cookiePathRewrite,
            "path"
          );
        }
        return cookie;
      })
    );
  }
  if (opts.onResponse) {
    await opts.onResponse(event, response);
  }
  if (response._data !== void 0) {
    return response._data;
  }
  if (event.handled) {
    return;
  }
  if (opts.sendStream === false) {
    const data = new Uint8Array(await response.arrayBuffer());
    return event.node.res.end(data);
  }
  if (response.body) {
    for await (const chunk of response.body) {
      event.node.res.write(chunk);
    }
  }
  return event.node.res.end();
}
function getProxyRequestHeaders(event) {
  const headers = /* @__PURE__ */ Object.create(null);
  const reqHeaders = getRequestHeaders(event);
  for (const name in reqHeaders) {
    if (!ignoredHeaders.has(name)) {
      headers[name] = reqHeaders[name];
    }
  }
  return headers;
}
function fetchWithEvent(event, req, init, options) {
  return _getFetch(options?.fetch)(req, {
    ...init,
    context: init?.context || event.context,
    headers: {
      ...getProxyRequestHeaders(event),
      ...init?.headers
    }
  });
}
function _getFetch(_fetch) {
  if (_fetch) {
    return _fetch;
  }
  if (globalThis.fetch) {
    return globalThis.fetch;
  }
  throw new Error(
    "fetch is not available. Try importing `node-fetch-native/polyfill` for Node.js."
  );
}
function rewriteCookieProperty(header, map, property) {
  const _map = typeof map === "string" ? { "*": map } : map;
  return header.replace(
    new RegExp(`(;\\s*${property}=)([^;]+)`, "gi"),
    (match, prefix, previousValue) => {
      let newValue;
      if (previousValue in _map) {
        newValue = _map[previousValue];
      } else if ("*" in _map) {
        newValue = _map["*"];
      } else {
        return match;
      }
      return newValue ? prefix + newValue : "";
    }
  );
}
function mergeHeaders(defaults, ...inputs) {
  const _inputs = inputs.filter(Boolean);
  if (_inputs.length === 0) {
    return defaults;
  }
  const merged = new Headers(defaults);
  for (const input of _inputs) {
    for (const [key, value] of Object.entries(input)) {
      if (value !== void 0) {
        merged.set(key, value);
      }
    }
  }
  return merged;
}

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class H3Event {
  constructor(req, res) {
    __publicField(this, "__is_event__", true);
    // Context
    __publicField(this, "node");
    // Node
    __publicField(this, "web");
    // Web
    __publicField(this, "context", {});
    // Shared
    // Request
    __publicField(this, "_method");
    __publicField(this, "_path");
    __publicField(this, "_headers");
    __publicField(this, "_requestBody");
    // Response
    __publicField(this, "_handled", false);
    // Hooks
    __publicField(this, "_onBeforeResponseCalled");
    __publicField(this, "_onAfterResponseCalled");
    this.node = { req, res };
  }
  // --- Request ---
  get method() {
    if (!this._method) {
      this._method = (this.node.req.method || "GET").toUpperCase();
    }
    return this._method;
  }
  get path() {
    return this._path || this.node.req.url || "/";
  }
  get headers() {
    if (!this._headers) {
      this._headers = _normalizeNodeHeaders(this.node.req.headers);
    }
    return this._headers;
  }
  // --- Respoonse ---
  get handled() {
    return this._handled || this.node.res.writableEnded || this.node.res.headersSent;
  }
  respondWith(response) {
    return Promise.resolve(response).then(
      (_response) => sendWebResponse(this, _response)
    );
  }
  // --- Utils ---
  toString() {
    return `[${this.method}] ${this.path}`;
  }
  toJSON() {
    return this.toString();
  }
  // --- Deprecated ---
  /** @deprecated Please use `event.node.req` instead. */
  get req() {
    return this.node.req;
  }
  /** @deprecated Please use `event.node.res` instead. */
  get res() {
    return this.node.res;
  }
}
function isEvent(input) {
  return hasProp(input, "__is_event__");
}
function createEvent(req, res) {
  return new H3Event(req, res);
}
function _normalizeNodeHeaders(nodeHeaders) {
  const headers = new Headers();
  for (const [name, value] of Object.entries(nodeHeaders)) {
    if (Array.isArray(value)) {
      for (const item of value) {
        headers.append(name, item);
      }
    } else if (value) {
      headers.set(name, value);
    }
  }
  return headers;
}

function defineEventHandler(handler) {
  if (typeof handler === "function") {
    handler.__is_handler__ = true;
    return handler;
  }
  const _hooks = {
    onRequest: _normalizeArray(handler.onRequest),
    onBeforeResponse: _normalizeArray(handler.onBeforeResponse)
  };
  const _handler = (event) => {
    return _callHandler(event, handler.handler, _hooks);
  };
  _handler.__is_handler__ = true;
  _handler.__resolve__ = handler.handler.__resolve__;
  _handler.__websocket__ = handler.websocket;
  return _handler;
}
function _normalizeArray(input) {
  return input ? Array.isArray(input) ? input : [input] : void 0;
}
async function _callHandler(event, handler, hooks) {
  if (hooks.onRequest) {
    for (const hook of hooks.onRequest) {
      await hook(event);
      if (event.handled) {
        return;
      }
    }
  }
  const body = await handler(event);
  const response = { body };
  if (hooks.onBeforeResponse) {
    for (const hook of hooks.onBeforeResponse) {
      await hook(event, response);
    }
  }
  return response.body;
}
const eventHandler = defineEventHandler;
function isEventHandler(input) {
  return hasProp(input, "__is_handler__");
}
function toEventHandler(input, _, _route) {
  if (!isEventHandler(input)) {
    console.warn(
      "[h3] Implicit event handler conversion is deprecated. Use `eventHandler()` or `fromNodeMiddleware()` to define event handlers.",
      _route && _route !== "/" ? `
     Route: ${_route}` : "",
      `
     Handler: ${input}`
    );
  }
  return input;
}
function defineLazyEventHandler(factory) {
  let _promise;
  let _resolved;
  const resolveHandler = () => {
    if (_resolved) {
      return Promise.resolve(_resolved);
    }
    if (!_promise) {
      _promise = Promise.resolve(factory()).then((r) => {
        const handler2 = r.default || r;
        if (typeof handler2 !== "function") {
          throw new TypeError(
            "Invalid lazy handler result. It should be a function:",
            handler2
          );
        }
        _resolved = { handler: toEventHandler(r.default || r) };
        return _resolved;
      });
    }
    return _promise;
  };
  const handler = eventHandler((event) => {
    if (_resolved) {
      return _resolved.handler(event);
    }
    return resolveHandler().then((r) => r.handler(event));
  });
  handler.__resolve__ = resolveHandler;
  return handler;
}
const lazyEventHandler = defineLazyEventHandler;

function createApp(options = {}) {
  const stack = [];
  const handler = createAppEventHandler(stack, options);
  const resolve = createResolver(stack);
  handler.__resolve__ = resolve;
  const getWebsocket = cachedFn(() => websocketOptions(resolve, options));
  const app = {
    // @ts-expect-error
    use: (arg1, arg2, arg3) => use(app, arg1, arg2, arg3),
    resolve,
    handler,
    stack,
    options,
    get websocket() {
      return getWebsocket();
    }
  };
  return app;
}
function use(app, arg1, arg2, arg3) {
  if (Array.isArray(arg1)) {
    for (const i of arg1) {
      use(app, i, arg2, arg3);
    }
  } else if (Array.isArray(arg2)) {
    for (const i of arg2) {
      use(app, arg1, i, arg3);
    }
  } else if (typeof arg1 === "string") {
    app.stack.push(
      normalizeLayer({ ...arg3, route: arg1, handler: arg2 })
    );
  } else if (typeof arg1 === "function") {
    app.stack.push(normalizeLayer({ ...arg2, handler: arg1 }));
  } else {
    app.stack.push(normalizeLayer({ ...arg1 }));
  }
  return app;
}
function createAppEventHandler(stack, options) {
  const spacing = options.debug ? 2 : void 0;
  return eventHandler(async (event) => {
    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || "/";
    const _reqPath = event._path || event.node.req.url || "/";
    let _layerPath;
    if (options.onRequest) {
      await options.onRequest(event);
    }
    for (const layer of stack) {
      if (layer.route.length > 1) {
        if (!_reqPath.startsWith(layer.route)) {
          continue;
        }
        _layerPath = _reqPath.slice(layer.route.length) || "/";
      } else {
        _layerPath = _reqPath;
      }
      if (layer.match && !layer.match(_layerPath, event)) {
        continue;
      }
      event._path = _layerPath;
      event.node.req.url = _layerPath;
      const val = await layer.handler(event);
      const _body = val === void 0 ? void 0 : await val;
      if (_body !== void 0) {
        const _response = { body: _body };
        if (options.onBeforeResponse) {
          event._onBeforeResponseCalled = true;
          await options.onBeforeResponse(event, _response);
        }
        await handleHandlerResponse(event, _response.body, spacing);
        if (options.onAfterResponse) {
          event._onAfterResponseCalled = true;
          await options.onAfterResponse(event, _response);
        }
        return;
      }
      if (event.handled) {
        if (options.onAfterResponse) {
          event._onAfterResponseCalled = true;
          await options.onAfterResponse(event, void 0);
        }
        return;
      }
    }
    if (!event.handled) {
      throw createError$1({
        statusCode: 404,
        statusMessage: `Cannot find any path matching ${event.path || "/"}.`
      });
    }
    if (options.onAfterResponse) {
      event._onAfterResponseCalled = true;
      await options.onAfterResponse(event, void 0);
    }
  });
}
function createResolver(stack) {
  return async (path) => {
    let _layerPath;
    for (const layer of stack) {
      if (layer.route === "/" && !layer.handler.__resolve__) {
        continue;
      }
      if (!path.startsWith(layer.route)) {
        continue;
      }
      _layerPath = path.slice(layer.route.length) || "/";
      if (layer.match && !layer.match(_layerPath, void 0)) {
        continue;
      }
      let res = { route: layer.route, handler: layer.handler };
      if (res.handler.__resolve__) {
        const _res = await res.handler.__resolve__(_layerPath);
        if (!_res) {
          continue;
        }
        res = {
          ...res,
          ..._res,
          route: joinURL(res.route || "/", _res.route || "/")
        };
      }
      return res;
    }
  };
}
function normalizeLayer(input) {
  let handler = input.handler;
  if (handler.handler) {
    handler = handler.handler;
  }
  if (input.lazy) {
    handler = lazyEventHandler(handler);
  } else if (!isEventHandler(handler)) {
    handler = toEventHandler(handler, void 0, input.route);
  }
  return {
    route: withoutTrailingSlash(input.route),
    match: input.match,
    handler
  };
}
function handleHandlerResponse(event, val, jsonSpace) {
  if (val === null) {
    return sendNoContent(event);
  }
  if (val) {
    if (isWebResponse(val)) {
      return sendWebResponse(event, val);
    }
    if (isStream(val)) {
      return sendStream(event, val);
    }
    if (val.buffer) {
      return send(event, val);
    }
    if (val.arrayBuffer && typeof val.arrayBuffer === "function") {
      return val.arrayBuffer().then((arrayBuffer) => {
        return send(event, Buffer.from(arrayBuffer), val.type);
      });
    }
    if (val instanceof Error) {
      throw createError$1(val);
    }
    if (typeof val.end === "function") {
      return true;
    }
  }
  const valType = typeof val;
  if (valType === "string") {
    return send(event, val, MIMES.html);
  }
  if (valType === "object" || valType === "boolean" || valType === "number") {
    return send(event, JSON.stringify(val, void 0, jsonSpace), MIMES.json);
  }
  if (valType === "bigint") {
    return send(event, val.toString(), MIMES.json);
  }
  throw createError$1({
    statusCode: 500,
    statusMessage: `[h3] Cannot send ${valType} as response.`
  });
}
function cachedFn(fn) {
  let cache;
  return () => {
    if (!cache) {
      cache = fn();
    }
    return cache;
  };
}
function websocketOptions(evResolver, appOptions) {
  return {
    ...appOptions.websocket,
    async resolve(info) {
      const { pathname } = parseURL(info.url || "/");
      const resolved = await evResolver(pathname);
      return resolved?.handler?.__websocket__ || {};
    }
  };
}

const RouterMethods = [
  "connect",
  "delete",
  "get",
  "head",
  "options",
  "post",
  "put",
  "trace",
  "patch"
];
function createRouter(opts = {}) {
  const _router = createRouter$1({});
  const routes = {};
  let _matcher;
  const router = {};
  const addRoute = (path, handler, method) => {
    let route = routes[path];
    if (!route) {
      routes[path] = route = { path, handlers: {} };
      _router.insert(path, route);
    }
    if (Array.isArray(method)) {
      for (const m of method) {
        addRoute(path, handler, m);
      }
    } else {
      route.handlers[method] = toEventHandler(handler, void 0, path);
    }
    return router;
  };
  router.use = router.add = (path, handler, method) => addRoute(path, handler, method || "all");
  for (const method of RouterMethods) {
    router[method] = (path, handle) => router.add(path, handle, method);
  }
  const matchHandler = (path = "/", method = "get") => {
    const qIndex = path.indexOf("?");
    if (qIndex !== -1) {
      path = path.slice(0, Math.max(0, qIndex));
    }
    const matched = _router.lookup(path);
    if (!matched || !matched.handlers) {
      return {
        error: createError$1({
          statusCode: 404,
          name: "Not Found",
          statusMessage: `Cannot find any route matching ${path || "/"}.`
        })
      };
    }
    let handler = matched.handlers[method] || matched.handlers.all;
    if (!handler) {
      if (!_matcher) {
        _matcher = toRouteMatcher(_router);
      }
      const _matches = _matcher.matchAll(path).reverse();
      for (const _match of _matches) {
        if (_match.handlers[method]) {
          handler = _match.handlers[method];
          matched.handlers[method] = matched.handlers[method] || handler;
          break;
        }
        if (_match.handlers.all) {
          handler = _match.handlers.all;
          matched.handlers.all = matched.handlers.all || handler;
          break;
        }
      }
    }
    if (!handler) {
      return {
        error: createError$1({
          statusCode: 405,
          name: "Method Not Allowed",
          statusMessage: `Method ${method} is not allowed on this route.`
        })
      };
    }
    return { matched, handler };
  };
  const isPreemptive = opts.preemptive || opts.preemtive;
  router.handler = eventHandler((event) => {
    const match = matchHandler(
      event.path,
      event.method.toLowerCase()
    );
    if ("error" in match) {
      if (isPreemptive) {
        throw match.error;
      } else {
        return;
      }
    }
    event.context.matchedRoute = match.matched;
    const params = match.matched.params || {};
    event.context.params = params;
    return Promise.resolve(match.handler(event)).then((res) => {
      if (res === void 0 && isPreemptive) {
        return null;
      }
      return res;
    });
  });
  router.handler.__resolve__ = async (path) => {
    path = withLeadingSlash(path);
    const match = matchHandler(path);
    if ("error" in match) {
      return;
    }
    let res = {
      route: match.matched.path,
      handler: match.handler
    };
    if (match.handler.__resolve__) {
      const _res = await match.handler.__resolve__(path);
      if (!_res) {
        return;
      }
      res = { ...res, ..._res };
    }
    return res;
  };
  return router;
}
function toNodeListener(app) {
  const toNodeHandle = async function(req, res) {
    const event = createEvent(req, res);
    try {
      await app.handler(event);
    } catch (_error) {
      const error = createError$1(_error);
      if (!isError(_error)) {
        error.unhandled = true;
      }
      setResponseStatus(event, error.statusCode, error.statusMessage);
      if (app.options.onError) {
        await app.options.onError(error, event);
      }
      if (event.handled) {
        return;
      }
      if (error.unhandled || error.fatal) {
        console.error("[h3]", error.fatal ? "[fatal]" : "[unhandled]", error);
      }
      if (app.options.onBeforeResponse && !event._onBeforeResponseCalled) {
        await app.options.onBeforeResponse(event, { body: error });
      }
      await sendError(event, error, !!app.options.debug);
      if (app.options.onAfterResponse && !event._onAfterResponseCalled) {
        await app.options.onAfterResponse(event, { body: error });
      }
    }
  };
  return toNodeHandle;
}

const s=globalThis.Headers,i=globalThis.AbortController,l=globalThis.fetch||(()=>{throw new Error("[node-fetch-native] Failed to fetch: `globalThis.fetch` is not available!")});

class FetchError extends Error {
  constructor(message, opts) {
    super(message, opts);
    this.name = "FetchError";
    if (opts?.cause && !this.cause) {
      this.cause = opts.cause;
    }
  }
}
function createFetchError(ctx) {
  const errorMessage = ctx.error?.message || ctx.error?.toString() || "";
  const method = ctx.request?.method || ctx.options?.method || "GET";
  const url = ctx.request?.url || String(ctx.request) || "/";
  const requestStr = `[${method}] ${JSON.stringify(url)}`;
  const statusStr = ctx.response ? `${ctx.response.status} ${ctx.response.statusText}` : "<no response>";
  const message = `${requestStr}: ${statusStr}${errorMessage ? ` ${errorMessage}` : ""}`;
  const fetchError = new FetchError(
    message,
    ctx.error ? { cause: ctx.error } : void 0
  );
  for (const key of ["request", "options", "response"]) {
    Object.defineProperty(fetchError, key, {
      get() {
        return ctx[key];
      }
    });
  }
  for (const [key, refKey] of [
    ["data", "_data"],
    ["status", "status"],
    ["statusCode", "status"],
    ["statusText", "statusText"],
    ["statusMessage", "statusText"]
  ]) {
    Object.defineProperty(fetchError, key, {
      get() {
        return ctx.response && ctx.response[refKey];
      }
    });
  }
  return fetchError;
}

const payloadMethods = new Set(
  Object.freeze(["PATCH", "POST", "PUT", "DELETE"])
);
function isPayloadMethod(method = "GET") {
  return payloadMethods.has(method.toUpperCase());
}
function isJSONSerializable(value) {
  if (value === void 0) {
    return false;
  }
  const t = typeof value;
  if (t === "string" || t === "number" || t === "boolean" || t === null) {
    return true;
  }
  if (t !== "object") {
    return false;
  }
  if (Array.isArray(value)) {
    return true;
  }
  if (value.buffer) {
    return false;
  }
  return value.constructor && value.constructor.name === "Object" || typeof value.toJSON === "function";
}
const textTypes = /* @__PURE__ */ new Set([
  "image/svg",
  "application/xml",
  "application/xhtml",
  "application/html"
]);
const JSON_RE = /^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;
function detectResponseType(_contentType = "") {
  if (!_contentType) {
    return "json";
  }
  const contentType = _contentType.split(";").shift() || "";
  if (JSON_RE.test(contentType)) {
    return "json";
  }
  if (textTypes.has(contentType) || contentType.startsWith("text/")) {
    return "text";
  }
  return "blob";
}
function mergeFetchOptions(input, defaults, Headers = globalThis.Headers) {
  const merged = {
    ...defaults,
    ...input
  };
  if (defaults?.params && input?.params) {
    merged.params = {
      ...defaults?.params,
      ...input?.params
    };
  }
  if (defaults?.query && input?.query) {
    merged.query = {
      ...defaults?.query,
      ...input?.query
    };
  }
  if (defaults?.headers && input?.headers) {
    merged.headers = new Headers(defaults?.headers || {});
    for (const [key, value] of new Headers(input?.headers || {})) {
      merged.headers.set(key, value);
    }
  }
  return merged;
}

const retryStatusCodes = /* @__PURE__ */ new Set([
  408,
  // Request Timeout
  409,
  // Conflict
  425,
  // Too Early
  429,
  // Too Many Requests
  500,
  // Internal Server Error
  502,
  // Bad Gateway
  503,
  // Service Unavailable
  504
  //  Gateway Timeout
]);
const nullBodyResponses$1 = /* @__PURE__ */ new Set([101, 204, 205, 304]);
function createFetch$1(globalOptions = {}) {
  const {
    fetch = globalThis.fetch,
    Headers = globalThis.Headers,
    AbortController = globalThis.AbortController
  } = globalOptions;
  async function onError(context) {
    const isAbort = context.error && context.error.name === "AbortError" && !context.options.timeout || false;
    if (context.options.retry !== false && !isAbort) {
      let retries;
      if (typeof context.options.retry === "number") {
        retries = context.options.retry;
      } else {
        retries = isPayloadMethod(context.options.method) ? 0 : 1;
      }
      const responseCode = context.response && context.response.status || 500;
      if (retries > 0 && (Array.isArray(context.options.retryStatusCodes) ? context.options.retryStatusCodes.includes(responseCode) : retryStatusCodes.has(responseCode))) {
        const retryDelay = context.options.retryDelay || 0;
        if (retryDelay > 0) {
          await new Promise((resolve) => setTimeout(resolve, retryDelay));
        }
        return $fetchRaw(context.request, {
          ...context.options,
          retry: retries - 1
        });
      }
    }
    const error = createFetchError(context);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, $fetchRaw);
    }
    throw error;
  }
  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {
    const context = {
      request: _request,
      options: mergeFetchOptions(_options, globalOptions.defaults, Headers),
      response: void 0,
      error: void 0
    };
    context.options.method = context.options.method?.toUpperCase();
    if (context.options.onRequest) {
      await context.options.onRequest(context);
    }
    if (typeof context.request === "string") {
      if (context.options.baseURL) {
        context.request = withBase(context.request, context.options.baseURL);
      }
      if (context.options.query || context.options.params) {
        context.request = withQuery(context.request, {
          ...context.options.params,
          ...context.options.query
        });
      }
    }
    if (context.options.body && isPayloadMethod(context.options.method)) {
      if (isJSONSerializable(context.options.body)) {
        context.options.body = typeof context.options.body === "string" ? context.options.body : JSON.stringify(context.options.body);
        context.options.headers = new Headers(context.options.headers || {});
        if (!context.options.headers.has("content-type")) {
          context.options.headers.set("content-type", "application/json");
        }
        if (!context.options.headers.has("accept")) {
          context.options.headers.set("accept", "application/json");
        }
      } else if (
        // ReadableStream Body
        "pipeTo" in context.options.body && typeof context.options.body.pipeTo === "function" || // Node.js Stream Body
        typeof context.options.body.pipe === "function"
      ) {
        if (!("duplex" in context.options)) {
          context.options.duplex = "half";
        }
      }
    }
    let abortTimeout;
    if (!context.options.signal && context.options.timeout) {
      const controller = new AbortController();
      abortTimeout = setTimeout(
        () => controller.abort(),
        context.options.timeout
      );
      context.options.signal = controller.signal;
    }
    try {
      context.response = await fetch(
        context.request,
        context.options
      );
    } catch (error) {
      context.error = error;
      if (context.options.onRequestError) {
        await context.options.onRequestError(context);
      }
      return await onError(context);
    } finally {
      if (abortTimeout) {
        clearTimeout(abortTimeout);
      }
    }
    const hasBody = context.response.body && !nullBodyResponses$1.has(context.response.status) && context.options.method !== "HEAD";
    if (hasBody) {
      const responseType = (context.options.parseResponse ? "json" : context.options.responseType) || detectResponseType(context.response.headers.get("content-type") || "");
      switch (responseType) {
        case "json": {
          const data = await context.response.text();
          const parseFunction = context.options.parseResponse || destr;
          context.response._data = parseFunction(data);
          break;
        }
        case "stream": {
          context.response._data = context.response.body;
          break;
        }
        default: {
          context.response._data = await context.response[responseType]();
        }
      }
    }
    if (context.options.onResponse) {
      await context.options.onResponse(context);
    }
    if (!context.options.ignoreResponseError && context.response.status >= 400 && context.response.status < 600) {
      if (context.options.onResponseError) {
        await context.options.onResponseError(context);
      }
      return await onError(context);
    }
    return context.response;
  };
  const $fetch = async function $fetch2(request, options) {
    const r = await $fetchRaw(request, options);
    return r._data;
  };
  $fetch.raw = $fetchRaw;
  $fetch.native = (...args) => fetch(...args);
  $fetch.create = (defaultOptions = {}) => createFetch$1({
    ...globalOptions,
    defaults: {
      ...globalOptions.defaults,
      ...defaultOptions
    }
  });
  return $fetch;
}

function createNodeFetch() {
  const useKeepAlive = JSON.parse(process.env.FETCH_KEEP_ALIVE || "false");
  if (!useKeepAlive) {
    return l;
  }
  const agentOptions = { keepAlive: true };
  const httpAgent = new http.Agent(agentOptions);
  const httpsAgent = new https.Agent(agentOptions);
  const nodeFetchOptions = {
    agent(parsedURL) {
      return parsedURL.protocol === "http:" ? httpAgent : httpsAgent;
    }
  };
  return function nodeFetchWithKeepAlive(input, init) {
    return l(input, { ...nodeFetchOptions, ...init });
  };
}
const fetch = globalThis.fetch || createNodeFetch();
const Headers$1 = globalThis.Headers || s;
const AbortController = globalThis.AbortController || i;
const ofetch = createFetch$1({ fetch, Headers: Headers$1, AbortController });
const $fetch$1 = ofetch;

const nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);
function createCall(handle) {
  return function callHandle(context) {
    const req = new IncomingMessage();
    const res = new ServerResponse(req);
    req.url = context.url || "/";
    req.method = context.method || "GET";
    req.headers = {};
    if (context.headers) {
      const headerEntries = typeof context.headers.entries === "function" ? context.headers.entries() : Object.entries(context.headers);
      for (const [name, value] of headerEntries) {
        if (!value) {
          continue;
        }
        req.headers[name.toLowerCase()] = value;
      }
    }
    req.headers.host = req.headers.host || context.host || "localhost";
    req.connection.encrypted = // @ts-ignore
    req.connection.encrypted || context.protocol === "https";
    req.body = context.body || null;
    req.__unenv__ = context.context;
    return handle(req, res).then(() => {
      let body = res._data;
      if (nullBodyResponses.has(res.statusCode) || req.method.toUpperCase() === "HEAD") {
        body = null;
        delete res._headers["content-length"];
      }
      const r = {
        body,
        headers: res._headers,
        status: res.statusCode,
        statusText: res.statusMessage
      };
      req.destroy();
      res.destroy();
      return r;
    });
  };
}

function createFetch(call, _fetch = global.fetch) {
  return async function ufetch(input, init) {
    const url = input.toString();
    if (!url.startsWith("/")) {
      return _fetch(url, init);
    }
    try {
      const r = await call({ url, ...init });
      return new Response(r.body, {
        status: r.status,
        statusText: r.statusText,
        headers: Object.fromEntries(
          Object.entries(r.headers).map(([name, value]) => [
            name,
            Array.isArray(value) ? value.join(",") : String(value) || ""
          ])
        )
      });
    } catch (error) {
      return new Response(error.toString(), {
        status: Number.parseInt(error.statusCode || error.code) || 500,
        statusText: error.statusText
      });
    }
  };
}

function flatHooks(configHooks, hooks = {}, parentName) {
  for (const key in configHooks) {
    const subHook = configHooks[key];
    const name = parentName ? `${parentName}:${key}` : key;
    if (typeof subHook === "object" && subHook !== null) {
      flatHooks(subHook, hooks, name);
    } else if (typeof subHook === "function") {
      hooks[name] = subHook;
    }
  }
  return hooks;
}
const defaultTask = { run: (function_) => function_() };
const _createTask = () => defaultTask;
const createTask = typeof console.createTask !== "undefined" ? console.createTask : _createTask;
function serialTaskCaller(hooks, args) {
  const name = args.shift();
  const task = createTask(name);
  return hooks.reduce(
    (promise, hookFunction) => promise.then(() => task.run(() => hookFunction(...args))),
    Promise.resolve()
  );
}
function parallelTaskCaller(hooks, args) {
  const name = args.shift();
  const task = createTask(name);
  return Promise.all(hooks.map((hook) => task.run(() => hook(...args))));
}
function callEachWith(callbacks, arg0) {
  for (const callback of [...callbacks]) {
    callback(arg0);
  }
}

class Hookable {
  constructor() {
    this._hooks = {};
    this._before = void 0;
    this._after = void 0;
    this._deprecatedMessages = void 0;
    this._deprecatedHooks = {};
    this.hook = this.hook.bind(this);
    this.callHook = this.callHook.bind(this);
    this.callHookWith = this.callHookWith.bind(this);
  }
  hook(name, function_, options = {}) {
    if (!name || typeof function_ !== "function") {
      return () => {
      };
    }
    const originalName = name;
    let dep;
    while (this._deprecatedHooks[name]) {
      dep = this._deprecatedHooks[name];
      name = dep.to;
    }
    if (dep && !options.allowDeprecated) {
      let message = dep.message;
      if (!message) {
        message = `${originalName} hook has been deprecated` + (dep.to ? `, please use ${dep.to}` : "");
      }
      if (!this._deprecatedMessages) {
        this._deprecatedMessages = /* @__PURE__ */ new Set();
      }
      if (!this._deprecatedMessages.has(message)) {
        console.warn(message);
        this._deprecatedMessages.add(message);
      }
    }
    if (!function_.name) {
      try {
        Object.defineProperty(function_, "name", {
          get: () => "_" + name.replace(/\W+/g, "_") + "_hook_cb",
          configurable: true
        });
      } catch {
      }
    }
    this._hooks[name] = this._hooks[name] || [];
    this._hooks[name].push(function_);
    return () => {
      if (function_) {
        this.removeHook(name, function_);
        function_ = void 0;
      }
    };
  }
  hookOnce(name, function_) {
    let _unreg;
    let _function = (...arguments_) => {
      if (typeof _unreg === "function") {
        _unreg();
      }
      _unreg = void 0;
      _function = void 0;
      return function_(...arguments_);
    };
    _unreg = this.hook(name, _function);
    return _unreg;
  }
  removeHook(name, function_) {
    if (this._hooks[name]) {
      const index = this._hooks[name].indexOf(function_);
      if (index !== -1) {
        this._hooks[name].splice(index, 1);
      }
      if (this._hooks[name].length === 0) {
        delete this._hooks[name];
      }
    }
  }
  deprecateHook(name, deprecated) {
    this._deprecatedHooks[name] = typeof deprecated === "string" ? { to: deprecated } : deprecated;
    const _hooks = this._hooks[name] || [];
    delete this._hooks[name];
    for (const hook of _hooks) {
      this.hook(name, hook);
    }
  }
  deprecateHooks(deprecatedHooks) {
    Object.assign(this._deprecatedHooks, deprecatedHooks);
    for (const name in deprecatedHooks) {
      this.deprecateHook(name, deprecatedHooks[name]);
    }
  }
  addHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    const removeFns = Object.keys(hooks).map(
      (key) => this.hook(key, hooks[key])
    );
    return () => {
      for (const unreg of removeFns.splice(0, removeFns.length)) {
        unreg();
      }
    };
  }
  removeHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    for (const key in hooks) {
      this.removeHook(key, hooks[key]);
    }
  }
  removeAllHooks() {
    for (const key in this._hooks) {
      delete this._hooks[key];
    }
  }
  callHook(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(serialTaskCaller, name, ...arguments_);
  }
  callHookParallel(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(parallelTaskCaller, name, ...arguments_);
  }
  callHookWith(caller, name, ...arguments_) {
    const event = this._before || this._after ? { name, args: arguments_, context: {} } : void 0;
    if (this._before) {
      callEachWith(this._before, event);
    }
    const result = caller(
      name in this._hooks ? [...this._hooks[name]] : [],
      arguments_
    );
    if (result instanceof Promise) {
      return result.finally(() => {
        if (this._after && event) {
          callEachWith(this._after, event);
        }
      });
    }
    if (this._after && event) {
      callEachWith(this._after, event);
    }
    return result;
  }
  beforeEach(function_) {
    this._before = this._before || [];
    this._before.push(function_);
    return () => {
      if (this._before !== void 0) {
        const index = this._before.indexOf(function_);
        if (index !== -1) {
          this._before.splice(index, 1);
        }
      }
    };
  }
  afterEach(function_) {
    this._after = this._after || [];
    this._after.push(function_);
    return () => {
      if (this._after !== void 0) {
        const index = this._after.indexOf(function_);
        if (index !== -1) {
          this._after.splice(index, 1);
        }
      }
    };
  }
}
function createHooks() {
  return new Hookable();
}

function klona(x) {
	if (typeof x !== 'object') return x;

	var k, tmp, str=Object.prototype.toString.call(x);

	if (str === '[object Object]') {
		if (x.constructor !== Object && typeof x.constructor === 'function') {
			tmp = new x.constructor();
			for (k in x) {
				if (x.hasOwnProperty(k) && tmp[k] !== x[k]) {
					tmp[k] = klona(x[k]);
				}
			}
		} else {
			tmp = {}; // null
			for (k in x) {
				if (k === '__proto__') {
					Object.defineProperty(tmp, k, {
						value: klona(x[k]),
						configurable: true,
						enumerable: true,
						writable: true,
					});
				} else {
					tmp[k] = klona(x[k]);
				}
			}
		}
		return tmp;
	}

	if (str === '[object Array]') {
		k = x.length;
		for (tmp=Array(k); k--;) {
			tmp[k] = klona(x[k]);
		}
		return tmp;
	}

	if (str === '[object Set]') {
		tmp = new Set;
		x.forEach(function (val) {
			tmp.add(klona(val));
		});
		return tmp;
	}

	if (str === '[object Map]') {
		tmp = new Map;
		x.forEach(function (val, key) {
			tmp.set(klona(key), klona(val));
		});
		return tmp;
	}

	if (str === '[object Date]') {
		return new Date(+x);
	}

	if (str === '[object RegExp]') {
		tmp = new RegExp(x.source, x.flags);
		tmp.lastIndex = x.lastIndex;
		return tmp;
	}

	if (str === '[object DataView]') {
		return new x.constructor( klona(x.buffer) );
	}

	if (str === '[object ArrayBuffer]') {
		return x.slice(0);
	}

	// ArrayBuffer.isView(x)
	// ~> `new` bcuz `Buffer.slice` => ref
	if (str.slice(-6) === 'Array]') {
		return new x.constructor(x);
	}

	return x;
}

const NUMBER_CHAR_RE = /\d/;
const STR_SPLITTERS = ["-", "_", "/", "."];
function isUppercase(char = "") {
  if (NUMBER_CHAR_RE.test(char)) {
    return void 0;
  }
  return char !== char.toLowerCase();
}
function splitByCase(str, separators) {
  const splitters = STR_SPLITTERS;
  const parts = [];
  if (!str || typeof str !== "string") {
    return parts;
  }
  let buff = "";
  let previousUpper;
  let previousSplitter;
  for (const char of str) {
    const isSplitter = splitters.includes(char);
    if (isSplitter === true) {
      parts.push(buff);
      buff = "";
      previousUpper = void 0;
      continue;
    }
    const isUpper = isUppercase(char);
    if (previousSplitter === false) {
      if (previousUpper === false && isUpper === true) {
        parts.push(buff);
        buff = char;
        previousUpper = isUpper;
        continue;
      }
      if (previousUpper === true && isUpper === false && buff.length > 1) {
        const lastChar = buff.at(-1);
        parts.push(buff.slice(0, Math.max(0, buff.length - 1)));
        buff = lastChar + char;
        previousUpper = isUpper;
        continue;
      }
    }
    buff += char;
    previousUpper = isUpper;
    previousSplitter = isSplitter;
  }
  parts.push(buff);
  return parts;
}
function upperFirst(str) {
  return str ? str[0].toUpperCase() + str.slice(1) : "";
}
function lowerFirst(str) {
  return str ? str[0].toLowerCase() + str.slice(1) : "";
}
function pascalCase(str, opts) {
  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p) => upperFirst(opts?.normalize ? p.toLowerCase() : p)).join("") : "";
}
function camelCase(str, opts) {
  return lowerFirst(pascalCase(str || "", opts));
}
function kebabCase(str, joiner) {
  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p) => p.toLowerCase()).join(joiner ?? "-") : "";
}
function snakeCase(str) {
  return kebabCase(str || "", "_");
}

function getEnv(key, opts) {
  const envKey = snakeCase(key).toUpperCase();
  return destr(
    process.env[opts.prefix + envKey] ?? process.env[opts.altPrefix + envKey]
  );
}
function _isObject(input) {
  return typeof input === "object" && !Array.isArray(input);
}
function applyEnv(obj, opts, parentKey = "") {
  for (const key in obj) {
    const subKey = parentKey ? `${parentKey}_${key}` : key;
    const envValue = getEnv(subKey, opts);
    if (_isObject(obj[key])) {
      if (_isObject(envValue)) {
        obj[key] = { ...obj[key], ...envValue };
        applyEnv(obj[key], opts, subKey);
      } else if (envValue === void 0) {
        applyEnv(obj[key], opts, subKey);
      } else {
        obj[key] = envValue ?? obj[key];
      }
    } else {
      obj[key] = envValue ?? obj[key];
    }
    if (opts.envExpansion && typeof obj[key] === "string") {
      obj[key] = _expandFromEnv(obj[key]);
    }
  }
  return obj;
}
const envExpandRx = /{{(.*?)}}/g;
function _expandFromEnv(value) {
  return value.replace(envExpandRx, (match, key) => {
    return process.env[key] || match;
  });
}

const defineAppConfig = (config) => config;

const appConfig0 = defineAppConfig({
  ui: {
    primary: "sky",
    gray: "cool",
    button: {
      rounded: "rounded-full",
      default: {
        size: "md"
      }
    },
    input: {
      default: {
        size: "md"
      }
    },
    card: {
      rounded: "rounded-xl"
    },
    footer: {
      top: {
        wrapper: "border-t border-gray-200 dark:border-gray-800",
        container: "py-8 lg:py-16"
      },
      bottom: {
        wrapper: "border-t border-gray-200 dark:border-gray-800"
      }
    },
    page: {
      hero: {
        wrapper: "lg:py-24"
      }
    }
  }
});

const appConfig1 = defineAppConfig({
  ui: {
    variables: {
      light: {
        background: "255 255 255",
        foreground: "var(--color-gray-700)"
      },
      dark: {
        background: "var(--color-gray-900)",
        foreground: "var(--color-gray-200)"
      },
      header: {
        height: "4rem"
      }
    },
    icons: {
      dark: "i-heroicons-moon-20-solid",
      light: "i-heroicons-sun-20-solid",
      system: "i-heroicons-computer-desktop-20-solid",
      search: "i-heroicons-magnifying-glass-20-solid",
      external: "i-heroicons-arrow-up-right-20-solid",
      chevron: "i-heroicons-chevron-down-20-solid",
      hash: "i-heroicons-hashtag-20-solid",
      menu: "i-heroicons-bars-3-20-solid",
      close: "i-heroicons-x-mark-20-solid",
      check: "i-heroicons-check-circle-20-solid"
    },
    presets: {
      button: {
        primary: {
          color: "white",
          variant: "solid"
        },
        secondary: {
          color: "gray",
          variant: "ghost"
        },
        input: {
          color: "white",
          variant: "outline",
          ui: {
            font: "",
            color: {
              white: {
                outline: "ring-1 ring-inset ring-gray-300 dark:ring-gray-700 hover:ring-gray-300 dark:hover:ring-gray-700 hover:bg-gray-100/50 dark:hover:bg-gray-800/50 text-gray-400 dark:text-gray-500 hover:text-gray-700 dark:hover:text-gray-200 focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400"
              }
            }
          }
        }
      }
    }
  }
});

const inlineAppConfig = {
  "nuxt": {},
  "ui": {
    "primary": "green",
    "gray": "cool",
    "colors": [
      "red",
      "orange",
      "amber",
      "yellow",
      "lime",
      "green",
      "emerald",
      "teal",
      "cyan",
      "sky",
      "blue",
      "indigo",
      "violet",
      "purple",
      "fuchsia",
      "pink",
      "rose",
      "primary"
    ],
    "strategy": "merge"
  }
};

const appConfig = defuFn(appConfig0, appConfig1, inlineAppConfig);

const _inlineRuntimeConfig = {
  "app": {
    "baseURL": "/",
    "buildId": "f936fbc2-ca3f-4f86-aa67-f7336cd3aa22",
    "buildAssetsDir": "/_nuxt/",
    "cdnURL": ""
  },
  "nitro": {
    "envPrefix": "NUXT_",
    "routeRules": {
      "/__nuxt_error": {
        "cache": false
      },
      "/": {
        "prerender": true
      },
      "/_nuxt/builds/meta/**": {
        "headers": {
          "cache-control": "public, max-age=31536000, immutable"
        }
      },
      "/_nuxt/builds/**": {
        "headers": {
          "cache-control": "public, max-age=1, immutable"
        }
      },
      "/_fonts/**": {
        "headers": {
          "cache-control": "public, max-age=31536000, immutable"
        }
      },
      "/_nuxt/**": {
        "headers": {
          "cache-control": "public, max-age=31536000, immutable"
        }
      }
    }
  },
  "public": {
    "mdc": {
      "useNuxtImage": true,
      "components": {
        "prose": true,
        "map": {
          "p": "prose-p",
          "a": "prose-a",
          "blockquote": "prose-blockquote",
          "code-inline": "prose-code-inline",
          "code": "ProseCodeInline",
          "em": "prose-em",
          "h1": "prose-h1",
          "h2": "prose-h2",
          "h3": "prose-h3",
          "h4": "prose-h4",
          "h5": "prose-h5",
          "h6": "prose-h6",
          "hr": "prose-hr",
          "img": "prose-img",
          "ul": "prose-ul",
          "ol": "prose-ol",
          "li": "prose-li",
          "strong": "prose-strong",
          "table": "prose-table",
          "thead": "prose-thead",
          "tbody": "prose-tbody",
          "td": "prose-td",
          "th": "prose-th",
          "tr": "prose-tr"
        }
      },
      "headings": {
        "anchorLinks": {
          "h1": false,
          "h2": true,
          "h3": true,
          "h4": true,
          "h5": false,
          "h6": false
        }
      }
    },
    "content": {
      "locales": [],
      "defaultLocale": "",
      "integrity": 1720964739686,
      "experimental": {
        "stripQueryParameters": false,
        "advanceQuery": false,
        "clientDB": false
      },
      "respectPathCase": false,
      "api": {
        "baseURL": "/api/_content"
      },
      "navigation": {
        "fields": [
          "icon",
          "to",
          "target"
        ]
      },
      "tags": {
        "p": "prose-p",
        "a": "prose-a",
        "blockquote": "prose-blockquote",
        "code-inline": "prose-code-inline",
        "code": "ProseCodeInline",
        "em": "prose-em",
        "h1": "prose-h1",
        "h2": "prose-h2",
        "h3": "prose-h3",
        "h4": "prose-h4",
        "h5": "prose-h5",
        "h6": "prose-h6",
        "hr": "prose-hr",
        "img": "prose-img",
        "ul": "prose-ul",
        "ol": "prose-ol",
        "li": "prose-li",
        "strong": "prose-strong",
        "table": "prose-table",
        "thead": "prose-thead",
        "tbody": "prose-tbody",
        "td": "prose-td",
        "th": "prose-th",
        "tr": "prose-tr"
      },
      "highlight": {
        "theme": {
          "light": "material-theme-lighter",
          "default": "material-theme",
          "dark": "material-theme-palenight"
        },
        "preload": [
          "json",
          "js",
          "ts",
          "html",
          "css",
          "vue",
          "diff",
          "shell",
          "markdown",
          "yaml",
          "bash",
          "ini"
        ],
        "highlighter": "shiki",
        "langs": [
          "js",
          "jsx",
          "json",
          "ts",
          "tsx",
          "vue",
          "css",
          "html",
          "bash",
          "md",
          "mdc",
          "yaml",
          "json",
          "js",
          "ts",
          "html",
          "css",
          "vue",
          "diff",
          "shell",
          "markdown",
          "yaml",
          "bash",
          "ini"
        ]
      },
      "wsUrl": "",
      "documentDriven": false,
      "host": "",
      "trailingSlash": false,
      "search": "",
      "contentHead": true,
      "anchorLinks": {
        "depth": 4,
        "exclude": [
          1
        ]
      }
    },
    "studio": {
      "apiURL": "https://api.nuxt.studio",
      "iframeMessagingAllowedOrigins": ""
    }
  },
  "content": {
    "cacheVersion": 2,
    "cacheIntegrity": "42LCwcizp5",
    "transformers": [],
    "base": "",
    "api": {
      "baseURL": "/api/_content"
    },
    "watch": {
      "ws": {
        "port": {
          "port": 4000,
          "portRange": [
            4000,
            4040
          ]
        },
        "hostname": "localhost",
        "showURL": false
      }
    },
    "sources": {},
    "ignores": [],
    "locales": [],
    "defaultLocale": "",
    "highlight": {
      "theme": {
        "light": "material-theme-lighter",
        "default": "material-theme",
        "dark": "material-theme-palenight"
      },
      "preload": [
        "json",
        "js",
        "ts",
        "html",
        "css",
        "vue",
        "diff",
        "shell",
        "markdown",
        "yaml",
        "bash",
        "ini"
      ],
      "highlighter": "shiki",
      "langs": [
        "js",
        "jsx",
        "json",
        "ts",
        "tsx",
        "vue",
        "css",
        "html",
        "bash",
        "md",
        "mdc",
        "yaml",
        "json",
        "js",
        "ts",
        "html",
        "css",
        "vue",
        "diff",
        "shell",
        "markdown",
        "yaml",
        "bash",
        "ini"
      ]
    },
    "markdown": {
      "tags": {
        "p": "prose-p",
        "a": "prose-a",
        "blockquote": "prose-blockquote",
        "code-inline": "prose-code-inline",
        "code": "ProseCodeInline",
        "em": "prose-em",
        "h1": "prose-h1",
        "h2": "prose-h2",
        "h3": "prose-h3",
        "h4": "prose-h4",
        "h5": "prose-h5",
        "h6": "prose-h6",
        "hr": "prose-hr",
        "img": "prose-img",
        "ul": "prose-ul",
        "ol": "prose-ol",
        "li": "prose-li",
        "strong": "prose-strong",
        "table": "prose-table",
        "thead": "prose-thead",
        "tbody": "prose-tbody",
        "td": "prose-td",
        "th": "prose-th",
        "tr": "prose-tr"
      },
      "anchorLinks": {
        "depth": 4,
        "exclude": [
          1
        ]
      },
      "remarkPlugins": {},
      "rehypePlugins": {}
    },
    "yaml": {},
    "csv": {
      "delimeter": ",",
      "json": true
    },
    "navigation": {
      "fields": [
        "icon",
        "to",
        "target"
      ]
    },
    "contentHead": true,
    "documentDriven": false,
    "respectPathCase": false,
    "experimental": {
      "clientDB": false,
      "cacheContents": true,
      "stripQueryParameters": false,
      "advanceQuery": false,
      "search": ""
    }
  },
  "studio": {
    "version": "2.0.3",
    "publicToken": "",
    "gitInfo": {
      "name": "stritch",
      "owner": "henghenghahaha",
      "url": "https://github.com/henghenghahaha/stritch"
    }
  },
  "nuxt-site-config": {
    "stack": [
      {
        "_context": "system",
        "_priority": -15,
        "name": "nuxt-ui-pro-saas",
        "env": "production"
      },
      {
        "_context": "package.json",
        "_priority": -10,
        "name": "nuxt-ui-pro-template-saas"
      }
    ],
    "version": "2.2.14",
    "debug": false
  },
  "nuxt-og-image": {
    "version": "3.0.0-rc.59",
    "satoriOptions": {},
    "resvgOptions": {},
    "sharpOptions": {},
    "publicStoragePath": "root:public",
    "defaults": {
      "emojis": "noto",
      "renderer": "satori",
      "component": "NuxtSeo",
      "extension": "png",
      "width": 1200,
      "height": 600,
      "cacheMaxAgeSeconds": 259200
    },
    "debug": false,
    "baseCacheKey": "/cache/nuxt-og-image/3.0.0-rc.59",
    "fonts": [
      {
        "cacheKey": "Inter:400",
        "style": "normal",
        "weight": 400,
        "name": "Inter",
        "key": "nuxt-og-image:fonts:Inter-400.ttf.base64"
      },
      {
        "cacheKey": "Inter:700",
        "style": "normal",
        "weight": 700,
        "name": "Inter",
        "key": "nuxt-og-image:fonts:Inter-700.ttf.base64"
      }
    ],
    "hasNuxtIcon": true,
    "colorPreference": "light",
    "isNuxtContentDocumentDriven": false
  },
  "appConfigSchema": {
    "properties": {
      "id": "#appConfig",
      "properties": {
        "nuxtIcon": {
          "title": "Nuxt Icon",
          "description": "Configure Nuxt Icon module preferences.",
          "id": "#appConfig/nuxtIcon",
          "properties": {
            "size": {
              "title": "Icon Size",
              "description": "Set the default icon size. Set to false to disable the sizing of icon in style.",
              "tags": [
                "@studioIcon material-symbols:format-size-rounded"
              ],
              "tsType": "string | false",
              "id": "#appConfig/nuxtIcon/size",
              "default": "1em",
              "type": "string"
            },
            "class": {
              "title": "CSS Class",
              "description": "Set the default CSS class.",
              "tags": [
                "@studioIcon material-symbols:css"
              ],
              "id": "#appConfig/nuxtIcon/class",
              "default": "",
              "type": "string"
            },
            "aliases": {
              "title": "Icon aliases",
              "description": "Define Icon aliases to update them easily without code changes.",
              "tags": [
                "@studioIcon material-symbols:star-rounded"
              ],
              "tsType": "{ [alias: string]: string }",
              "id": "#appConfig/nuxtIcon/aliases",
              "default": {},
              "type": "object"
            },
            "iconifyApiOptions": {
              "title": "Iconify API Options",
              "description": "Define preferences for Iconify API fetch.",
              "tags": [
                "@studioIcon material-symbols:tv-options-input-settings"
              ],
              "id": "#appConfig/nuxtIcon/iconifyApiOptions",
              "properties": {
                "url": {
                  "title": "Iconify API URL",
                  "description": "Define a custom Iconify API URL. Useful if you want to use a self-hosted Iconify API. Learn more: https://iconify.design/docs/api.",
                  "tags": [
                    "@studioIcon material-symbols:api"
                  ],
                  "id": "#appConfig/nuxtIcon/iconifyApiOptions/url",
                  "default": "https://api.iconify.design",
                  "type": "string"
                },
                "publicApiFallback": {
                  "title": "Public Iconify API fallback",
                  "description": "Define if the public Iconify API should be used as fallback.",
                  "tags": [
                    "@studioIcon material-symbols:public"
                  ],
                  "id": "#appConfig/nuxtIcon/iconifyApiOptions/publicApiFallback",
                  "default": false,
                  "type": "boolean"
                }
              },
              "type": "object",
              "default": {
                "url": "https://api.iconify.design",
                "publicApiFallback": false
              }
            }
          },
          "type": "object",
          "default": {
            "size": "1em",
            "class": "",
            "aliases": {},
            "iconifyApiOptions": {
              "url": "https://api.iconify.design",
              "publicApiFallback": false
            }
          }
        },
        "ui": {
          "title": "UI",
          "description": "UI Customization.",
          "tags": [
            "@studioIcon i-mdi-palette-outline"
          ],
          "id": "#appConfig/ui",
          "properties": {
            "icons": {
              "title": "Icons",
              "description": "Manage icons used in UI Pro.",
              "tags": [
                "@studioIcon i-mdi-application-settings-outline"
              ],
              "id": "#appConfig/ui/icons",
              "properties": {
                "search": {
                  "type": "string",
                  "title": "Search Bar",
                  "description": "Icon to display in the search bar.",
                  "default": "i-heroicons-magnifying-glass-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-mdi-magnify"
                  ],
                  "id": "#appConfig/ui/icons/search"
                },
                "dark": {
                  "type": "string",
                  "title": "Dark mode",
                  "description": "Icon of color mode button for dark mode.",
                  "default": "i-heroicons-moon-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-mdi-moon-waning-crescent"
                  ],
                  "id": "#appConfig/ui/icons/dark"
                },
                "light": {
                  "type": "string",
                  "title": "Light mode",
                  "description": "Icon of color mode button for light mode.",
                  "default": "i-heroicons-sun-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-mdi-white-balance-sunny"
                  ],
                  "id": "#appConfig/ui/icons/light"
                },
                "external": {
                  "type": "string",
                  "title": "External Link",
                  "description": "Icon for external link.",
                  "default": "i-heroicons-arrow-up-right-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-mdi-arrow-top-right"
                  ],
                  "id": "#appConfig/ui/icons/external"
                },
                "chevron": {
                  "type": "string",
                  "title": "Chevron",
                  "description": "Icon for chevron.",
                  "default": "i-heroicons-chevron-down-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-mdi-chevron-down"
                  ],
                  "id": "#appConfig/ui/icons/chevron"
                },
                "hash": {
                  "type": "string",
                  "title": "Hash",
                  "description": "Icon for hash anchors.",
                  "default": "i-heroicons-hashtag-20-solid",
                  "tags": [
                    "@studioInput icon",
                    "@studioIcon i-ph-hash"
                  ],
                  "id": "#appConfig/ui/icons/hash"
                }
              },
              "type": "object",
              "default": {
                "search": "i-heroicons-magnifying-glass-20-solid",
                "dark": "i-heroicons-moon-20-solid",
                "light": "i-heroicons-sun-20-solid",
                "external": "i-heroicons-arrow-up-right-20-solid",
                "chevron": "i-heroicons-chevron-down-20-solid",
                "hash": "i-heroicons-hashtag-20-solid"
              }
            },
            "primary": {
              "type": "string",
              "title": "Primary",
              "description": "Primary color of your UI.",
              "default": "green",
              "required": [
                "sky",
                "mint",
                "rose",
                "amber",
                "violet",
                "emerald",
                "fuchsia",
                "indigo",
                "lime",
                "orange",
                "pink",
                "purple",
                "red",
                "teal",
                "yellow",
                "green",
                "blue",
                "cyan",
                "gray",
                "white",
                "black"
              ],
              "tags": [
                "@studioInput string",
                "@studioIcon i-mdi-palette-outline"
              ],
              "id": "#appConfig/ui/primary"
            },
            "gray": {
              "type": "string",
              "title": "Gray",
              "description": "Gray color of your UI.",
              "default": "slate",
              "required": [
                "slate",
                "cool",
                "zinc",
                "neutral",
                "stone"
              ],
              "tags": [
                "@studioInput string",
                "@studioIcon i-mdi-palette-outline"
              ],
              "id": "#appConfig/ui/gray"
            }
          },
          "type": "object",
          "default": {
            "icons": {
              "search": "i-heroicons-magnifying-glass-20-solid",
              "dark": "i-heroicons-moon-20-solid",
              "light": "i-heroicons-sun-20-solid",
              "external": "i-heroicons-arrow-up-right-20-solid",
              "chevron": "i-heroicons-chevron-down-20-solid",
              "hash": "i-heroicons-hashtag-20-solid"
            },
            "primary": "green",
            "gray": "slate"
          }
        }
      },
      "type": "object",
      "default": {
        "nuxtIcon": {
          "size": "1em",
          "class": "",
          "aliases": {},
          "iconifyApiOptions": {
            "url": "https://api.iconify.design",
            "publicApiFallback": false
          }
        },
        "ui": {
          "icons": {
            "search": "i-heroicons-magnifying-glass-20-solid",
            "dark": "i-heroicons-moon-20-solid",
            "light": "i-heroicons-sun-20-solid",
            "external": "i-heroicons-arrow-up-right-20-solid",
            "chevron": "i-heroicons-chevron-down-20-solid",
            "hash": "i-heroicons-hashtag-20-solid"
          },
          "primary": "green",
          "gray": "slate"
        }
      }
    },
    "default": {
      "nuxtIcon": {
        "size": "1em",
        "class": "",
        "aliases": {},
        "iconifyApiOptions": {
          "url": "https://api.iconify.design",
          "publicApiFallback": false
        }
      },
      "ui": {
        "icons": {
          "search": "i-heroicons-magnifying-glass-20-solid",
          "dark": "i-heroicons-moon-20-solid",
          "light": "i-heroicons-sun-20-solid",
          "external": "i-heroicons-arrow-up-right-20-solid",
          "chevron": "i-heroicons-chevron-down-20-solid",
          "hash": "i-heroicons-hashtag-20-solid"
        },
        "primary": "green",
        "gray": "slate"
      }
    }
  },
  "contentSchema": {},
  "ipx": {
    "baseURL": "/_ipx",
    "alias": {},
    "fs": {
      "dir": "../public"
    },
    "http": {
      "domains": []
    }
  }
};
const envOptions = {
  prefix: "NITRO_",
  altPrefix: _inlineRuntimeConfig.nitro.envPrefix ?? process.env.NITRO_ENV_PREFIX ?? "_",
  envExpansion: _inlineRuntimeConfig.nitro.envExpansion ?? process.env.NITRO_ENV_EXPANSION ?? false
};
const _sharedRuntimeConfig = _deepFreeze(
  applyEnv(klona(_inlineRuntimeConfig), envOptions)
);
function useRuntimeConfig(event) {
  if (!event) {
    return _sharedRuntimeConfig;
  }
  if (event.context.nitro.runtimeConfig) {
    return event.context.nitro.runtimeConfig;
  }
  const runtimeConfig = klona(_inlineRuntimeConfig);
  applyEnv(runtimeConfig, envOptions);
  event.context.nitro.runtimeConfig = runtimeConfig;
  return runtimeConfig;
}
const _sharedAppConfig = _deepFreeze(klona(appConfig));
function useAppConfig(event) {
  if (!event) {
    return _sharedAppConfig;
  }
  if (event.context.nitro.appConfig) {
    return event.context.nitro.appConfig;
  }
  const appConfig$1 = klona(appConfig);
  event.context.nitro.appConfig = appConfig$1;
  return appConfig$1;
}
function _deepFreeze(object) {
  const propNames = Object.getOwnPropertyNames(object);
  for (const name of propNames) {
    const value = object[name];
    if (value && typeof value === "object") {
      _deepFreeze(value);
    }
  }
  return Object.freeze(object);
}
new Proxy(/* @__PURE__ */ Object.create(null), {
  get: (_, prop) => {
    console.warn(
      "Please use `useRuntimeConfig()` instead of accessing config directly."
    );
    const runtimeConfig = useRuntimeConfig();
    if (prop in runtimeConfig) {
      return runtimeConfig[prop];
    }
    return void 0;
  }
});

function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive$1(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive$1(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
function checkBufferSupport() {
  if (typeof Buffer === void 0) {
    throw new TypeError("[unstorage] Buffer is not supported!");
  }
}
const BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  checkBufferSupport();
  const base64 = Buffer.from(value).toString("base64");
  return BASE64_PREFIX + base64;
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  checkBufferSupport();
  return Buffer.from(value.slice(BASE64_PREFIX.length), "base64");
}

const storageKeyProperties = [
  "hasItem",
  "getItem",
  "getItemRaw",
  "setItem",
  "setItemRaw",
  "removeItem",
  "getMeta",
  "setMeta",
  "removeMeta",
  "getKeys",
  "clear",
  "mount",
  "unmount"
];
function prefixStorage(storage, base) {
  base = normalizeBaseKey(base);
  if (!base) {
    return storage;
  }
  const nsStorage = { ...storage };
  for (const property of storageKeyProperties) {
    nsStorage[property] = (key = "", ...args) => (
      // @ts-ignore
      storage[property](base + key, ...args)
    );
  }
  nsStorage.getKeys = (key = "", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));
  return nsStorage;
}
function normalizeKey$2(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "");
}
function joinKeys(...keys) {
  return normalizeKey$2(keys.join(":"));
}
function normalizeBaseKey(base) {
  base = normalizeKey$2(base);
  return base ? base + ":" : "";
}

function defineDriver$1(factory) {
  return factory;
}

const DRIVER_NAME$3 = "memory";
const memory$1 = defineDriver$1(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME$3,
    options: {},
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return Array.from(data.keys());
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});

function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory$1() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base of context.mountpoints) {
      if (key.startsWith(base)) {
        return {
          base,
          relativeKey: key.slice(base.length),
          driver: context.mounts[base]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey$2(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey$2(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r) => r.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r) => r.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey$2(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base, opts = {}) {
      base = normalizeBaseKey(base);
      const mounts = getMounts(base, true);
      let maskedMounts = [];
      const allKeys = [];
      for (const mount of mounts) {
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        const keys = rawKeys.map((key) => mount.mountpoint + normalizeKey$2(key)).filter((key) => !maskedMounts.some((p) => key.startsWith(p)));
        allKeys.push(...keys);
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))
        ];
      }
      return base ? allKeys.filter((key) => key.startsWith(base) && !key.endsWith("$")) : allKeys.filter((key) => !key.endsWith("$"));
    },
    // Utils
    async clear(base, opts = {}) {
      base = normalizeBaseKey(base);
      await Promise.all(
        getMounts(base, false).map(async (m) => {
          if (m.driver.clear) {
            return asyncCall(m.driver.clear, m.relativeBase, opts);
          }
          if (m.driver.removeItem) {
            const keys = await m.driver.getKeys(m.relativeBase || "", opts);
            return Promise.all(
              keys.map((key) => m.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base, driver) {
      base = normalizeBaseKey(base);
      if (base && context.mounts[base]) {
        throw new Error(`already mounted at ${base}`);
      }
      if (base) {
        context.mountpoints.push(base);
        context.mountpoints.sort((a, b) => b.length - a.length);
      }
      context.mounts[base] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {
          context.unwatch[base] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base, _dispose = true) {
      base = normalizeBaseKey(base);
      if (!base || !context.mounts[base]) {
        return;
      }
      if (context.watching && base in context.unwatch) {
        context.unwatch[base]();
        delete context.unwatch[base];
      }
      if (_dispose) {
        await dispose(context.mounts[base]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base);
      delete context.mounts[base];
    },
    getMount(key = "") {
      key = normalizeKey$2(key) + ":";
      const m = getMount(key);
      return {
        driver: m.driver,
        base: m.base
      };
    },
    getMounts(base = "", opts = {}) {
      base = normalizeKey$2(base);
      const mounts = getMounts(base, opts.parents);
      return mounts.map((m) => ({
        driver: m.driver,
        base: m.mountpoint
      }));
    }
  };
  return storage;
}
function watch(driver, onChange, base) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

const _assets = {
  ["nuxt-og-image:fonts:Inter-400.ttf.base64"]: {
    import: () => import('./raw/Inter-400.ttf.mjs').then(r => r.default || r),
    meta: {"type":"text/plain; charset=utf-8","etag":"\"652cc-qEeSD1DXCSV8gPP2rnBA6ePGdZ4\"","mtime":"2024-07-14T13:45:42.639Z"}
  },
  ["nuxt-og-image:fonts:Inter-700.ttf.base64"]: {
    import: () => import('./raw/Inter-700.ttf.mjs').then(r => r.default || r),
    meta: {"type":"text/plain; charset=utf-8","etag":"\"674f0-FZReUXHhPTnY0HmYVn2iPpKm9ds\"","mtime":"2024-07-14T13:45:42.639Z"}
  },
  ["nitro:bundled:cache:content:content-index.json"]: {
    import: () => import('./raw/content-index.mjs').then(r => r.default || r),
    meta: {"type":"application/json","etag":"\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"","mtime":"2024-07-14T13:46:38.525Z"}
  },
  ["nitro:bundled:cache:content:content-navigation.json"]: {
    import: () => import('./raw/content-navigation.mjs').then(r => r.default || r),
    meta: {"type":"application/json","etag":"\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\"","mtime":"2024-07-14T13:46:38.526Z"}
  }
};

const normalizeKey$1 = function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "");
};

const assets$1 = {
  getKeys() {
    return Promise.resolve(Object.keys(_assets))
  },
  hasItem (id) {
    id = normalizeKey$1(id);
    return Promise.resolve(id in _assets)
  },
  getItem (id) {
    id = normalizeKey$1(id);
    return Promise.resolve(_assets[id] ? _assets[id].import() : null)
  },
  getMeta (id) {
    id = normalizeKey$1(id);
    return Promise.resolve(_assets[id] ? _assets[id].meta : {})
  }
};

function defineDriver(factory) {
  return factory;
}
function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.replace(/[/\\]/g, ":").replace(/^:|:$/g, "");
}
function createError(driver, message, opts) {
  const err = new Error(`[unstorage] [${driver}] ${message}`, opts);
  return err;
}
function createRequiredError(driver, name) {
  if (Array.isArray(name)) {
    return createError(
      driver,
      `Missing some of the required options ${name.map((n) => "`" + n + "`").join(", ")}`
    );
  }
  return createError(driver, `Missing required option \`${name}\`.`);
}

function ignoreNotfound(err) {
  return err.code === "ENOENT" || err.code === "EISDIR" ? null : err;
}
function ignoreExists(err) {
  return err.code === "EEXIST" ? null : err;
}
async function writeFile(path, data, encoding) {
  await ensuredir(dirname$1(path));
  return promises.writeFile(path, data, encoding);
}
function readFile(path, encoding) {
  return promises.readFile(path, encoding).catch(ignoreNotfound);
}
function unlink(path) {
  return promises.unlink(path).catch(ignoreNotfound);
}
function readdir(dir) {
  return promises.readdir(dir, { withFileTypes: true }).catch(ignoreNotfound).then((r) => r || []);
}
async function ensuredir(dir) {
  if (existsSync(dir)) {
    return;
  }
  await ensuredir(dirname$1(dir)).catch(ignoreExists);
  await promises.mkdir(dir).catch(ignoreExists);
}
async function readdirRecursive(dir, ignore) {
  if (ignore && ignore(dir)) {
    return [];
  }
  const entries = await readdir(dir);
  const files = [];
  await Promise.all(
    entries.map(async (entry) => {
      const entryPath = resolve$1(dir, entry.name);
      if (entry.isDirectory()) {
        const dirFiles = await readdirRecursive(entryPath, ignore);
        files.push(...dirFiles.map((f) => entry.name + "/" + f));
      } else {
        if (!(ignore && ignore(entry.name))) {
          files.push(entry.name);
        }
      }
    })
  );
  return files;
}
async function rmRecursive(dir) {
  const entries = await readdir(dir);
  await Promise.all(
    entries.map((entry) => {
      const entryPath = resolve$1(dir, entry.name);
      if (entry.isDirectory()) {
        return rmRecursive(entryPath).then(() => promises.rmdir(entryPath));
      } else {
        return promises.unlink(entryPath);
      }
    })
  );
}

const PATH_TRAVERSE_RE = /\.\.\:|\.\.$/;
const DRIVER_NAME$2 = "fs-lite";
const unstorage_47drivers_47fs_45lite = defineDriver((opts = {}) => {
  if (!opts.base) {
    throw createRequiredError(DRIVER_NAME$2, "base");
  }
  opts.base = resolve$1(opts.base);
  const r = (key) => {
    if (PATH_TRAVERSE_RE.test(key)) {
      throw createError(
        DRIVER_NAME$2,
        `Invalid key: ${JSON.stringify(key)}. It should not contain .. segments`
      );
    }
    const resolved = join(opts.base, key.replace(/:/g, "/"));
    return resolved;
  };
  return {
    name: DRIVER_NAME$2,
    options: opts,
    hasItem(key) {
      return existsSync(r(key));
    },
    getItem(key) {
      return readFile(r(key), "utf8");
    },
    getItemRaw(key) {
      return readFile(r(key));
    },
    async getMeta(key) {
      const { atime, mtime, size, birthtime, ctime } = await promises.stat(r(key)).catch(() => ({}));
      return { atime, mtime, size, birthtime, ctime };
    },
    setItem(key, value) {
      if (opts.readOnly) {
        return;
      }
      return writeFile(r(key), value, "utf8");
    },
    setItemRaw(key, value) {
      if (opts.readOnly) {
        return;
      }
      return writeFile(r(key), value);
    },
    removeItem(key) {
      if (opts.readOnly) {
        return;
      }
      return unlink(r(key));
    },
    getKeys() {
      return readdirRecursive(r("."), opts.ignore);
    },
    async clear() {
      if (opts.readOnly || opts.noClear) {
        return;
      }
      await rmRecursive(r("."));
    }
  };
});

const OVERLAY_REMOVED = "__OVERLAY_REMOVED__";
const DRIVER_NAME$1 = "overlay";
const overlay = defineDriver((options) => {
  return {
    name: DRIVER_NAME$1,
    options,
    async hasItem(key, opts) {
      for (const layer of options.layers) {
        if (await layer.hasItem(key, opts)) {
          if (layer === options.layers[0]) {
            if (await options.layers[0]?.getItem(key) === OVERLAY_REMOVED) {
              return false;
            }
          }
          return true;
        }
      }
      return false;
    },
    async getItem(key) {
      for (const layer of options.layers) {
        const value = await layer.getItem(key);
        if (value === OVERLAY_REMOVED) {
          return null;
        }
        if (value !== null) {
          return value;
        }
      }
      return null;
    },
    // TODO: Support native meta
    // async getMeta (key) {},
    async setItem(key, value, opts) {
      await options.layers[0]?.setItem?.(key, value, opts);
    },
    async removeItem(key, opts) {
      await options.layers[0]?.setItem?.(key, OVERLAY_REMOVED, opts);
    },
    async getKeys(base, opts) {
      const allKeys = await Promise.all(
        options.layers.map(async (layer) => {
          const keys = await layer.getKeys(base, opts);
          return keys.map((key) => normalizeKey(key));
        })
      );
      const uniqueKeys = Array.from(new Set(allKeys.flat()));
      const existingKeys = await Promise.all(
        uniqueKeys.map(async (key) => {
          if (await options.layers[0]?.getItem(key) === OVERLAY_REMOVED) {
            return false;
          }
          return key;
        })
      );
      return existingKeys.filter(Boolean);
    },
    async dispose() {
      await Promise.all(
        options.layers.map(async (layer) => {
          if (layer.dispose) {
            await layer.dispose();
          }
        })
      );
    }
  };
});

const DRIVER_NAME = "memory";
const memoryDriver = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    options: {},
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return Array.from(data.keys());
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});

const storage = createStorage({});

storage.mount('/assets', assets$1);

storage.mount('data', unstorage_47drivers_47fs_45lite({"driver":"fsLite","base":"C:\\Users\\ADMIN\\WebstormProjects\\nuxt-ui-pro-saas\\.data\\kv"}));

const bundledStorage = ["/cache/content"];
for (const base of bundledStorage) {
  storage.mount(base, overlay({
    layers: [
      memoryDriver(),
      // TODO
      // prefixStorage(storage, base),
      prefixStorage(storage, 'assets:nitro:bundled:' + base)
    ]
  }));
}

function useStorage(base = "") {
  return base ? prefixStorage(storage, base) : storage;
}

const defaultCacheOptions = {
  name: "_",
  base: "/cache",
  swr: true,
  maxAge: 1
};
function defineCachedFunction(fn, opts = {}) {
  opts = { ...defaultCacheOptions, ...opts };
  const pending = {};
  const group = opts.group || "nitro/functions";
  const name = opts.name || fn.name || "_";
  const integrity = opts.integrity || hash([fn, opts]);
  const validate = opts.validate || ((entry) => entry.value !== void 0);
  async function get(key, resolver, shouldInvalidateCache, event) {
    const cacheKey = [opts.base, group, name, key + ".json"].filter(Boolean).join(":").replace(/:\/$/, ":index");
    let entry = await useStorage().getItem(cacheKey) || {};
    if (typeof entry !== "object") {
      entry = {};
      const error = new Error("Malformed data read from cache.");
      console.error("[nitro] [cache]", error);
      useNitroApp().captureError(error, { event, tags: ["cache"] });
    }
    const ttl = (opts.maxAge ?? opts.maxAge ?? 0) * 1e3;
    if (ttl) {
      entry.expires = Date.now() + ttl;
    }
    const expired = shouldInvalidateCache || entry.integrity !== integrity || ttl && Date.now() - (entry.mtime || 0) > ttl || validate(entry) === false;
    const _resolve = async () => {
      const isPending = pending[key];
      if (!isPending) {
        if (entry.value !== void 0 && (opts.staleMaxAge || 0) >= 0 && opts.swr === false) {
          entry.value = void 0;
          entry.integrity = void 0;
          entry.mtime = void 0;
          entry.expires = void 0;
        }
        pending[key] = Promise.resolve(resolver());
      }
      try {
        entry.value = await pending[key];
      } catch (error) {
        if (!isPending) {
          delete pending[key];
        }
        throw error;
      }
      if (!isPending) {
        entry.mtime = Date.now();
        entry.integrity = integrity;
        delete pending[key];
        if (validate(entry) !== false) {
          const promise = useStorage().setItem(cacheKey, entry).catch((error) => {
            console.error(`[nitro] [cache] Cache write error.`, error);
            useNitroApp().captureError(error, { event, tags: ["cache"] });
          });
          if (event && event.waitUntil) {
            event.waitUntil(promise);
          }
        }
      }
    };
    const _resolvePromise = expired ? _resolve() : Promise.resolve();
    if (entry.value === void 0) {
      await _resolvePromise;
    } else if (expired && event && event.waitUntil) {
      event.waitUntil(_resolvePromise);
    }
    if (opts.swr && validate(entry) !== false) {
      _resolvePromise.catch((error) => {
        console.error(`[nitro] [cache] SWR handler error.`, error);
        useNitroApp().captureError(error, { event, tags: ["cache"] });
      });
      return entry;
    }
    return _resolvePromise.then(() => entry);
  }
  return async (...args) => {
    const shouldBypassCache = await opts.shouldBypassCache?.(...args);
    if (shouldBypassCache) {
      return fn(...args);
    }
    const key = await (opts.getKey || getKey)(...args);
    const shouldInvalidateCache = await opts.shouldInvalidateCache?.(...args);
    const entry = await get(
      key,
      () => fn(...args),
      shouldInvalidateCache,
      args[0] && isEvent(args[0]) ? args[0] : void 0
    );
    let value = entry.value;
    if (opts.transform) {
      value = await opts.transform(entry, ...args) || value;
    }
    return value;
  };
}
const cachedFunction = defineCachedFunction;
function getKey(...args) {
  return args.length > 0 ? hash(args, {}) : "";
}
function escapeKey(key) {
  return String(key).replace(/\W/g, "");
}
function defineCachedEventHandler(handler, opts = defaultCacheOptions) {
  const variableHeaderNames = (opts.varies || []).filter(Boolean).map((h) => h.toLowerCase()).sort();
  const _opts = {
    ...opts,
    getKey: async (event) => {
      const customKey = await opts.getKey?.(event);
      if (customKey) {
        return escapeKey(customKey);
      }
      const _path = event.node.req.originalUrl || event.node.req.url || event.path;
      const _pathname = escapeKey(decodeURI(parseURL(_path).pathname)).slice(0, 16) || "index";
      const _hashedPath = `${_pathname}.${hash(_path)}`;
      const _headers = variableHeaderNames.map((header) => [header, event.node.req.headers[header]]).map(([name, value]) => `${escapeKey(name)}.${hash(value)}`);
      return [_hashedPath, ..._headers].join(":");
    },
    validate: (entry) => {
      if (!entry.value) {
        return false;
      }
      if (entry.value.code >= 400) {
        return false;
      }
      if (entry.value.body === void 0) {
        return false;
      }
      if (entry.value.headers.etag === "undefined" || entry.value.headers["last-modified"] === "undefined") {
        return false;
      }
      return true;
    },
    group: opts.group || "nitro/handlers",
    integrity: opts.integrity || hash([handler, opts])
  };
  const _cachedHandler = cachedFunction(
    async (incomingEvent) => {
      const variableHeaders = {};
      for (const header of variableHeaderNames) {
        variableHeaders[header] = incomingEvent.node.req.headers[header];
      }
      const reqProxy = cloneWithProxy(incomingEvent.node.req, {
        headers: variableHeaders
      });
      const resHeaders = {};
      let _resSendBody;
      const resProxy = cloneWithProxy(incomingEvent.node.res, {
        statusCode: 200,
        writableEnded: false,
        writableFinished: false,
        headersSent: false,
        closed: false,
        getHeader(name) {
          return resHeaders[name];
        },
        setHeader(name, value) {
          resHeaders[name] = value;
          return this;
        },
        getHeaderNames() {
          return Object.keys(resHeaders);
        },
        hasHeader(name) {
          return name in resHeaders;
        },
        removeHeader(name) {
          delete resHeaders[name];
        },
        getHeaders() {
          return resHeaders;
        },
        end(chunk, arg2, arg3) {
          if (typeof chunk === "string") {
            _resSendBody = chunk;
          }
          if (typeof arg2 === "function") {
            arg2();
          }
          if (typeof arg3 === "function") {
            arg3();
          }
          return this;
        },
        write(chunk, arg2, arg3) {
          if (typeof chunk === "string") {
            _resSendBody = chunk;
          }
          if (typeof arg2 === "function") {
            arg2();
          }
          if (typeof arg3 === "function") {
            arg3();
          }
          return this;
        },
        writeHead(statusCode, headers2) {
          this.statusCode = statusCode;
          if (headers2) {
            for (const header in headers2) {
              this.setHeader(header, headers2[header]);
            }
          }
          return this;
        }
      });
      const event = createEvent(reqProxy, resProxy);
      event.fetch = (url, fetchOptions) => fetchWithEvent(event, url, fetchOptions, {
        fetch: useNitroApp().localFetch
      });
      event.$fetch = (url, fetchOptions) => fetchWithEvent(event, url, fetchOptions, {
        fetch: globalThis.$fetch
      });
      event.context = incomingEvent.context;
      event.context.cache = {
        options: _opts
      };
      const body = await handler(event) || _resSendBody;
      const headers = event.node.res.getHeaders();
      headers.etag = String(
        headers.Etag || headers.etag || `W/"${hash(body)}"`
      );
      headers["last-modified"] = String(
        headers["Last-Modified"] || headers["last-modified"] || (/* @__PURE__ */ new Date()).toUTCString()
      );
      const cacheControl = [];
      if (opts.swr) {
        if (opts.maxAge) {
          cacheControl.push(`s-maxage=${opts.maxAge}`);
        }
        if (opts.staleMaxAge) {
          cacheControl.push(`stale-while-revalidate=${opts.staleMaxAge}`);
        } else {
          cacheControl.push("stale-while-revalidate");
        }
      } else if (opts.maxAge) {
        cacheControl.push(`max-age=${opts.maxAge}`);
      }
      if (cacheControl.length > 0) {
        headers["cache-control"] = cacheControl.join(", ");
      }
      const cacheEntry = {
        code: event.node.res.statusCode,
        headers,
        body
      };
      return cacheEntry;
    },
    _opts
  );
  return defineEventHandler(async (event) => {
    if (opts.headersOnly) {
      if (handleCacheHeaders(event, { maxAge: opts.maxAge })) {
        return;
      }
      return handler(event);
    }
    const response = await _cachedHandler(event);
    if (event.node.res.headersSent || event.node.res.writableEnded) {
      return response.body;
    }
    if (handleCacheHeaders(event, {
      modifiedTime: new Date(response.headers["last-modified"]),
      etag: response.headers.etag,
      maxAge: opts.maxAge
    })) {
      return;
    }
    event.node.res.statusCode = response.code;
    for (const name in response.headers) {
      const value = response.headers[name];
      if (name === "set-cookie") {
        event.node.res.appendHeader(
          name,
          splitCookiesString(value)
        );
      } else {
        event.node.res.setHeader(name, value);
      }
    }
    return response.body;
  });
}
function cloneWithProxy(obj, overrides) {
  return new Proxy(obj, {
    get(target, property, receiver) {
      if (property in overrides) {
        return overrides[property];
      }
      return Reflect.get(target, property, receiver);
    },
    set(target, property, value, receiver) {
      if (property in overrides) {
        overrides[property] = value;
        return true;
      }
      return Reflect.set(target, property, value, receiver);
    }
  });
}
const cachedEventHandler = defineCachedEventHandler;

function hasReqHeader(event, name, includes) {
  const value = getRequestHeader(event, name);
  return value && typeof value === "string" && value.toLowerCase().includes(includes);
}
function isJsonRequest(event) {
  if (hasReqHeader(event, "accept", "text/html")) {
    return false;
  }
  return hasReqHeader(event, "accept", "application/json") || hasReqHeader(event, "user-agent", "curl/") || hasReqHeader(event, "user-agent", "httpie/") || hasReqHeader(event, "sec-fetch-mode", "cors") || event.path.startsWith("/api/") || event.path.endsWith(".json");
}
function normalizeError(error) {
  const cwd = typeof process.cwd === "function" ? process.cwd() : "/";
  const stack = (error.stack || "").split("\n").splice(1).filter((line) => line.includes("at ")).map((line) => {
    const text = line.replace(cwd + "/", "./").replace("webpack:/", "").replace("file://", "").trim();
    return {
      text,
      internal: line.includes("node_modules") && !line.includes(".cache") || line.includes("internal") || line.includes("new Promise")
    };
  });
  const statusCode = error.statusCode || 500;
  const statusMessage = error.statusMessage ?? (statusCode === 404 ? "Not Found" : "");
  const message = error.message || error.toString();
  return {
    stack,
    statusCode,
    statusMessage,
    message
  };
}
function _captureError(error, type) {
  console.error(`[nitro] [${type}]`, error);
  useNitroApp().captureError(error, { tags: [type] });
}
function trapUnhandledNodeErrors() {
  process.on(
    "unhandledRejection",
    (error) => _captureError(error, "unhandledRejection")
  );
  process.on(
    "uncaughtException",
    (error) => _captureError(error, "uncaughtException")
  );
}
function joinHeaders(value) {
  return Array.isArray(value) ? value.join(", ") : String(value);
}
function normalizeFetchResponse(response) {
  if (!response.headers.has("set-cookie")) {
    return response;
  }
  return new Response(response.body, {
    status: response.status,
    statusText: response.statusText,
    headers: normalizeCookieHeaders(response.headers)
  });
}
function normalizeCookieHeader(header = "") {
  return splitCookiesString(joinHeaders(header));
}
function normalizeCookieHeaders(headers) {
  const outgoingHeaders = new Headers();
  for (const [name, header] of headers) {
    if (name === "set-cookie") {
      for (const cookie of normalizeCookieHeader(header)) {
        outgoingHeaders.append("set-cookie", cookie);
      }
    } else {
      outgoingHeaders.set(name, joinHeaders(header));
    }
  }
  return outgoingHeaders;
}

const config = useRuntimeConfig();
const _routeRulesMatcher = toRouteMatcher(
  createRouter$1({ routes: config.nitro.routeRules })
);
function createRouteRulesHandler(ctx) {
  return eventHandler((event) => {
    const routeRules = getRouteRules(event);
    if (routeRules.headers) {
      setHeaders(event, routeRules.headers);
    }
    if (routeRules.redirect) {
      let target = routeRules.redirect.to;
      if (target.endsWith("/**")) {
        let targetPath = event.path;
        const strpBase = routeRules.redirect._redirectStripBase;
        if (strpBase) {
          targetPath = withoutBase(targetPath, strpBase);
        }
        target = joinURL(target.slice(0, -3), targetPath);
      } else if (event.path.includes("?")) {
        const query = getQuery$1(event.path);
        target = withQuery(target, query);
      }
      return sendRedirect(event, target, routeRules.redirect.statusCode);
    }
    if (routeRules.proxy) {
      let target = routeRules.proxy.to;
      if (target.endsWith("/**")) {
        let targetPath = event.path;
        const strpBase = routeRules.proxy._proxyStripBase;
        if (strpBase) {
          targetPath = withoutBase(targetPath, strpBase);
        }
        target = joinURL(target.slice(0, -3), targetPath);
      } else if (event.path.includes("?")) {
        const query = getQuery$1(event.path);
        target = withQuery(target, query);
      }
      return proxyRequest(event, target, {
        fetch: ctx.localFetch,
        ...routeRules.proxy
      });
    }
  });
}
function getRouteRules(event) {
  event.context._nitro = event.context._nitro || {};
  if (!event.context._nitro.routeRules) {
    event.context._nitro.routeRules = getRouteRulesForPath(
      withoutBase(event.path.split("?")[0], useRuntimeConfig().app.baseURL)
    );
  }
  return event.context._nitro.routeRules;
}
function getRouteRulesForPath(path) {
  return defu({}, ..._routeRulesMatcher.matchAll(path).reverse());
}

const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
const unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
const reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
const escaped = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\0",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
const objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function devalue(value) {
  const counts = /* @__PURE__ */ new Map();
  let logNum = 0;
  function log(message) {
    if (logNum < 100) {
      console.warn(message);
      logNum += 1;
    }
  }
  function walk(thing) {
    if (typeof thing === "function") {
      log(`Cannot stringify a function ${thing.name}`);
      return;
    }
    if (counts.has(thing)) {
      counts.set(thing, counts.get(thing) + 1);
      return;
    }
    counts.set(thing, 1);
    if (!isPrimitive(thing)) {
      const type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach(walk);
          break;
        case "Set":
        case "Map":
          Array.from(thing).forEach(walk);
          break;
        default:
          const proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== objectProtoOwnPropertyNames) {
            if (typeof thing.toJSON !== "function") {
              log(`Cannot stringify arbitrary non-POJOs ${thing.constructor.name}`);
            }
          } else if (Object.getOwnPropertySymbols(thing).length > 0) {
            log(`Cannot stringify POJOs with symbolic keys ${Object.getOwnPropertySymbols(thing).map((symbol) => symbol.toString())}`);
          } else {
            Object.keys(thing).forEach((key) => walk(thing[key]));
          }
      }
    }
  }
  walk(value);
  const names = /* @__PURE__ */ new Map();
  Array.from(counts).filter((entry) => entry[1] > 1).sort((a, b) => b[1] - a[1]).forEach((entry, i) => {
    names.set(entry[0], getName(i));
  });
  function stringify(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (isPrimitive(thing)) {
      return stringifyPrimitive(thing);
    }
    const type = getType(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return `Object(${stringify(thing.valueOf())})`;
      case "RegExp":
        return thing.toString();
      case "Date":
        return `new Date(${thing.getTime()})`;
      case "Array":
        const members = thing.map((v, i) => i in thing ? stringify(v) : "");
        const tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return `[${members.join(",")}${tail}]`;
      case "Set":
      case "Map":
        return `new ${type}([${Array.from(thing).map(stringify).join(",")}])`;
      default:
        if (thing.toJSON) {
          let json = thing.toJSON();
          if (getType(json) === "String") {
            try {
              json = JSON.parse(json);
            } catch (e) {
            }
          }
          return stringify(json);
        }
        if (Object.getPrototypeOf(thing) === null) {
          if (Object.keys(thing).length === 0) {
            return "Object.create(null)";
          }
          return `Object.create(null,{${Object.keys(thing).map((key) => `${safeKey(key)}:{writable:true,enumerable:true,value:${stringify(thing[key])}}`).join(",")}})`;
        }
        return `{${Object.keys(thing).map((key) => `${safeKey(key)}:${stringify(thing[key])}`).join(",")}}`;
    }
  }
  const str = stringify(value);
  if (names.size) {
    const params = [];
    const statements = [];
    const values = [];
    names.forEach((name, thing) => {
      params.push(name);
      if (isPrimitive(thing)) {
        values.push(stringifyPrimitive(thing));
        return;
      }
      const type = getType(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values.push(`Object(${stringify(thing.valueOf())})`);
          break;
        case "RegExp":
          values.push(thing.toString());
          break;
        case "Date":
          values.push(`new Date(${thing.getTime()})`);
          break;
        case "Array":
          values.push(`Array(${thing.length})`);
          thing.forEach((v, i) => {
            statements.push(`${name}[${i}]=${stringify(v)}`);
          });
          break;
        case "Set":
          values.push("new Set");
          statements.push(`${name}.${Array.from(thing).map((v) => `add(${stringify(v)})`).join(".")}`);
          break;
        case "Map":
          values.push("new Map");
          statements.push(`${name}.${Array.from(thing).map(([k, v]) => `set(${stringify(k)}, ${stringify(v)})`).join(".")}`);
          break;
        default:
          values.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach((key) => {
            statements.push(`${name}${safeProp(key)}=${stringify(thing[key])}`);
          });
      }
    });
    statements.push(`return ${str}`);
    return `(function(${params.join(",")}){${statements.join(";")}}(${values.join(",")}))`;
  } else {
    return str;
  }
}
function getName(num) {
  let name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? `${name}0` : name;
}
function isPrimitive(thing) {
  return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
  if (typeof thing === "string") {
    return stringifyString(thing);
  }
  if (thing === void 0) {
    return "void 0";
  }
  if (thing === 0 && 1 / thing < 0) {
    return "-0";
  }
  const str = String(thing);
  if (typeof thing === "number") {
    return str.replace(/^(-)?0\./, "$1.");
  }
  return str;
}
function getType(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
  return escaped[c] || c;
}
function escapeUnsafeChars(str) {
  return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? `.${key}` : `[${escapeUnsafeChars(JSON.stringify(key))}]`;
}
function stringifyString(str) {
  let result = '"';
  for (let i = 0; i < str.length; i += 1) {
    const char = str.charAt(i);
    const code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped) {
      result += escaped[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i + 1);
      if (code <= 56319 && (next >= 56320 && next <= 57343)) {
        result += char + str[++i];
      } else {
        result += `\\u${code.toString(16).toUpperCase()}`;
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}

function normalizeSiteConfig(config) {
  if (typeof config.indexable !== "undefined")
    config.indexable = String(config.indexable) !== "false";
  if (typeof config.trailingSlash !== "undefined" && !config.trailingSlash)
    config.trailingSlash = String(config.trailingSlash) !== "false";
  if (config.url && !hasProtocol(config.url, { acceptRelative: true, strict: false }))
    config.url = withHttps(config.url);
  const keys = Object.keys(config).sort((a, b) => a.localeCompare(b));
  const newConfig = {};
  for (const k of keys)
    newConfig[k] = config[k];
  return newConfig;
}
function createSiteConfigStack(options) {
  const debug = options?.debug || false;
  const stack = [];
  function push(input) {
    if (!input || typeof input !== "object" || Object.keys(input).length === 0)
      return;
    if (!input._context && debug) {
      let lastFunctionName = new Error("tmp").stack?.split("\n")[2].split(" ")[5];
      if (lastFunctionName?.includes("/"))
        lastFunctionName = "anonymous";
      input._context = lastFunctionName;
    }
    const entry = {};
    for (const k in input) {
      const val = input[k];
      if (typeof val !== "undefined" && val !== "")
        entry[k] = val;
    }
    if (Object.keys(entry).filter((k) => !k.startsWith("_")).length > 0)
      stack.push(entry);
  }
  function get(options2) {
    const siteConfig = {};
    if (options2?.debug)
      siteConfig._context = {};
    for (const o in stack.sort((a, b) => (a._priority || 0) - (b._priority || 0))) {
      for (const k in stack[o]) {
        const key = k;
        const val = options2?.resolveRefs ? toValue(stack[o][k]) : stack[o][k];
        if (!k.startsWith("_") && typeof val !== "undefined") {
          siteConfig[k] = val;
          if (options2?.debug)
            siteConfig._context[key] = stack[o]._context?.[key] || stack[o]._context || "anonymous";
        }
      }
    }
    return options2?.skipNormalize ? siteConfig : normalizeSiteConfig(siteConfig);
  }
  return {
    stack,
    push,
    get
  };
}

function envSiteConfig(env) {
  return Object.fromEntries(Object.entries(env).filter(([k]) => k.startsWith("NUXT_SITE_") || k.startsWith("NUXT_PUBLIC_SITE_")).map(([k, v]) => [
    k.replace(/^NUXT_(PUBLIC_)?SITE_/, "").split("_").map((s, i) => i === 0 ? s.toLowerCase() : s[0].toUpperCase() + s.slice(1).toLowerCase()).join(""),
    v
  ]));
}

function useSiteConfig(e, _options) {
  e.context.siteConfig = e.context.siteConfig || createSiteConfigStack();
  const options = defu(_options, useRuntimeConfig(e)["nuxt-site-config"], { debug: false });
  return e.context.siteConfig.get(options);
}

function useNitroOrigin(e) {
  const cert = process.env.NITRO_SSL_CERT;
  const key = process.env.NITRO_SSL_KEY;
  let host = process.env.NITRO_HOST || process.env.HOST || false;
  let port = false;
  let protocol = cert && key || !false ? "https" : "http";
  {
    host = getRequestHost(e, { xForwardedHost: true }) || host;
    protocol = getRequestProtocol(e, { xForwardedProto: true }) || protocol;
  }
  if (typeof host === "string" && host.includes(":")) {
    port = host.split(":").pop();
    host = host.split(":")[0];
  }
  port = port ? `:${port}` : "";
  return withTrailingSlash(`${protocol}://${host}${port}`);
}

function defineNitroPlugin(def) {
  return def;
}

function isTag(vnode, tag) {
  if (vnode.type === tag) {
    return true;
  }
  if (typeof vnode.type === "object" && vnode.type.tag === tag) {
    return true;
  }
  if (vnode.tag === tag) {
    return true;
  }
  return false;
}
function isText(vnode) {
  return isTag(vnode, "text") || isTag(vnode, Symbol.for("v-txt"));
}
function nodeChildren(node) {
  if (Array.isArray(node.children) || typeof node.children === "string") {
    return node.children;
  }
  if (typeof node.children?.default === "function") {
    return node.children.default();
  }
  return [];
}
function nodeTextContent(node) {
  if (!node) {
    return "";
  }
  if (Array.isArray(node)) {
    return node.map(nodeTextContent).join("");
  }
  if (isText(node)) {
    return node.children || node.value || "";
  }
  const children = nodeChildren(node);
  if (Array.isArray(children)) {
    return children.map(nodeTextContent).filter(Boolean).join("");
  }
  return "";
}

const useProcessorPlugins = async (processor, plugins = {}) => {
  const toUse = Object.entries(plugins).filter((p) => p[1] !== false);
  for (const plugin of toUse) {
    const instance = plugin[1].instance || await import(
      /* @vite-ignore */
      plugin[0]
    ).then((m) => m.default || m);
    processor.use(instance, plugin[1].options);
  }
};

function emphasis(state, node) {
  const result = {
    type: "element",
    tagName: "em",
    properties: node.attributes || {},
    children: state.all(node)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}

function parseThematicBlock(lang) {
  if (!lang?.trim()) {
    return {
      language: void 0,
      highlights: void 0,
      filename: void 0,
      meta: void 0
    };
  }
  const languageMatches = lang.replace(/[{|[](.+)/, "").match(/^[^ \t]+(?=[ \t]|$)/);
  const highlightTokensMatches = lang.match(/\{([^}]*)\}/);
  const filenameMatches = lang.match(/\[((\\\]|[^\]])*)\]/);
  const meta = lang.replace(languageMatches?.[0] ?? "", "").replace(highlightTokensMatches?.[0] ?? "", "").replace(filenameMatches?.[0] ?? "", "").trim();
  return {
    language: languageMatches?.[0] || void 0,
    highlights: parseHighlightedLines(highlightTokensMatches?.[1] || void 0),
    // https://github.com/nuxt/content/pull/2169
    filename: filenameMatches?.[1].replace(/\\\]/g, "]") || void 0,
    meta
  };
}
function parseHighlightedLines(lines) {
  const lineArray = String(lines || "").split(",").filter(Boolean).flatMap((line) => {
    const [start, end] = line.trim().split("-").map((a) => Number(a.trim()));
    return Array.from({ length: (end || start) - start + 1 }).map((_, i) => start + i);
  });
  return lineArray.length ? lineArray : void 0;
}
const TAG_NAME_REGEXP = /^<\/?([\w-]+)(\s[^>]*?)?\/?>/;
function getTagName(value) {
  const result = String(value).match(TAG_NAME_REGEXP);
  return result && result[1];
}

const code = (state, node) => {
  const lang = (node.lang || "") + " " + (node.meta || "");
  const { language, highlights, filename, meta } = parseThematicBlock(lang);
  const value = node.value ? detab(node.value + "\n") : "";
  let result = {
    type: "element",
    tagName: "code",
    properties: { __ignoreMap: "" },
    children: [{ type: "text", value }]
  };
  if (meta) {
    result.data = {
      meta
    };
  }
  state.patch(node, result);
  result = state.applyData(node, result);
  const properties = {
    language,
    filename,
    highlights,
    meta,
    code: value
  };
  if (language) {
    properties.className = ["language-" + language];
  }
  result = { type: "element", tagName: "pre", properties, children: [result] };
  state.patch(node, result);
  return result;
};

function html(state, node) {
  const tagName = getTagName(node.value);
  if (tagName && /[A-Z]/.test(tagName)) {
    node.value = node.value.replace(tagName, kebabCase(tagName));
  }
  if (state.dangerous || state.options?.allowDangerousHtml) {
    const result = { type: "raw", value: node.value };
    state.patch(node, result);
    return state.applyData(node, result);
  }
  return void 0;
}

function link$1(state, node) {
  const properties = {
    ...node.attributes || {},
    href: normalizeUri(node.url)
  };
  if (node.title !== null && node.title !== void 0) {
    properties.title = node.title;
  }
  const result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}

function list(state, node) {
  const properties = {};
  const results = state.all(node);
  let index = -1;
  if (typeof node.start === "number" && node.start !== 1) {
    properties.start = node.start;
  }
  while (++index < results.length) {
    const child = results[index];
    if (child.type === "element" && child.tagName === "li" && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes("task-list-item")) {
      properties.className = ["contains-task-list"];
      break;
    }
  }
  if ((node.children || []).some((child) => typeof child.checked === "boolean")) {
    properties.className = ["contains-task-list"];
  }
  const result = {
    type: "element",
    tagName: node.ordered ? "ol" : "ul",
    properties,
    children: state.wrap(results, true)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}

const htmlTags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "math",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rb",
  "rp",
  "rt",
  "rtc",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "slot",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "svg",
  "table",
  "tbody",
  "td",
  "template",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr"
];

function paragraph(state, node) {
  if (node.children && node.children[0] && node.children[0].type === "html") {
    const tagName = kebabCase(getTagName(node.children[0].value) || "div");
    if (!htmlTags.includes(tagName)) {
      return state.all(node);
    }
  }
  const result = {
    type: "element",
    tagName: "p",
    properties: {},
    children: state.all(node)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}

function image(state, node) {
  const properties = { ...node.attributes, src: normalizeUri(node.url) };
  if (node.alt !== null && node.alt !== void 0) {
    properties.alt = node.alt;
  }
  if (node.title !== null && node.title !== void 0) {
    properties.title = node.title;
  }
  const result = { type: "element", tagName: "img", properties, children: [] };
  state.patch(node, result);
  return state.applyData(node, result);
}

function strong(state, node) {
  const result = {
    type: "element",
    tagName: "strong",
    properties: node.attributes || {},
    children: state.all(node)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}

function inlineCode(state, node) {
  const language = node.attributes?.language || node.attributes?.lang;
  const text = { type: "text", value: node.value.replace(/\r?\n|\r/g, " ") };
  state.patch(node, text);
  const result = {
    type: "element",
    tagName: "code",
    properties: node.attributes || {},
    children: [text]
  };
  const classes = (result.properties.class || "").split(" ");
  delete result.properties.class;
  if (language) {
    result.properties.language = language;
    delete result.properties.lang;
    classes.push("language-" + language);
  }
  result.properties.className = classes.join(" ");
  state.patch(node, result);
  return state.applyData(node, result);
}

function containerComponent(state, node) {
  const result = {
    type: "element",
    tagName: node.name,
    properties: {
      ...node.attributes,
      ...node.data?.hProperties
    },
    children: state.all(node)
  };
  state.patch(node, result);
  result.attributes = node.attributes;
  result.fmAttributes = node.fmAttributes;
  return result;
}

const handlers$1 = {
  emphasis,
  code,
  link: link$1,
  paragraph,
  html,
  list,
  image,
  strong,
  inlineCode,
  containerComponent
};

const defaults = {
  remark: {
    plugins: {
      "remark-mdc": {
        instance: remarkMDC
      },
      "remark-emoji": {
        instance: remarkEmoji
      },
      "remark-gfm": {
        instance: remarkGFM
      }
    }
  },
  rehype: {
    options: {
      handlers: handlers$1,
      allowDangerousHtml: true
    },
    plugins: {
      "rehype-external-links": {
        instance: rehypeExternalLinks
      },
      "rehype-sort-attribute-values": {
        instance: rehypeSortAttributeValues
      },
      "rehype-sort-attributes": {
        instance: rehypeSortAttributes
      },
      "rehype-raw": {
        instance: rehypeRaw,
        options: {
          passThrough: ["element"]
        }
      }
    }
  },
  highlight: false,
  toc: {
    searchDepth: 2,
    depth: 2
  }
};

function flattenNodeText(node) {
  if (node.type === "comment") {
    return "";
  }
  if (node.type === "text") {
    return node.value || "";
  } else {
    return (node.children || []).reduce((text, child) => {
      return text.concat(flattenNodeText(child));
    }, "");
  }
}
function flattenNode(node, maxDepth = 2, _depth = 0) {
  if (!Array.isArray(node.children) || _depth === maxDepth) {
    return [node];
  }
  return [
    node,
    ...node.children.reduce((acc, child) => acc.concat(flattenNode(child, maxDepth, _depth + 1)), [])
  ];
}

const TOC_TAGS = ["h2", "h3", "h4", "h5", "h6"];
const TOC_TAGS_DEPTH = TOC_TAGS.reduce((tags, tag) => {
  tags[tag] = Number(tag.charAt(tag.length - 1));
  return tags;
}, {});
const getHeaderDepth = (node) => TOC_TAGS_DEPTH[node.tag];
const getTocTags = (depth) => {
  if (depth < 1 || depth > 5) {
    console.log(`\`toc.depth\` is set to ${depth}. It should be a number between 1 and 5. `);
    depth = 1;
  }
  return TOC_TAGS.slice(0, depth);
};
function nestHeaders(headers) {
  if (headers.length <= 1) {
    return headers;
  }
  const toc = [];
  let parent;
  headers.forEach((header) => {
    if (!parent || header.depth <= parent.depth) {
      header.children = [];
      parent = header;
      toc.push(header);
    } else {
      parent.children.push(header);
    }
  });
  toc.forEach((header) => {
    if (header.children?.length) {
      header.children = nestHeaders(header.children);
    } else {
      delete header.children;
    }
  });
  return toc;
}
function generateFlatToc(body, options) {
  const { searchDepth, depth, title = "" } = options;
  const tags = getTocTags(depth);
  const headers = flattenNode(body, searchDepth).filter((node) => tags.includes(node.tag || ""));
  const links = headers.map((node) => ({
    id: node.props?.id,
    depth: getHeaderDepth(node),
    text: flattenNodeText(node)
  }));
  return {
    title,
    searchDepth,
    depth,
    links
  };
}
function generateToc(body, options) {
  const toc = generateFlatToc(body, options);
  toc.links = nestHeaders(toc.links);
  return toc;
}

const unsafeLinkPrefix = [
  "javascript:",
  "data:text/html",
  "vbscript:",
  "data:text/javascript",
  "data:text/vbscript",
  "data:text/css",
  "data:text/plain",
  "data:text/xml"
];
const validateProp = (attribute, value) => {
  if (attribute.startsWith("on")) {
    return false;
  }
  if (attribute === "href" || attribute === "src") {
    return !unsafeLinkPrefix.some((prefix) => value.toLowerCase().startsWith(prefix));
  }
  return true;
};
const validateProps = (type, props) => {
  if (!props) {
    return {};
  }
  props = Object.fromEntries(
    Object.entries(props).filter(([name, value]) => {
      const isValid = validateProp(name, value);
      if (!isValid) {
        console.warn(`[@nuxtjs/mdc] removing unsafe attribute: ${name}="${value}"`);
      }
      return isValid;
    })
  );
  if (type === "pre") {
    if (typeof props.highlights === "string") {
      props.highlights = props.highlights.split(" ").map((i) => Number.parseInt(i));
    }
  }
  return props;
};

function compileHast(options = {}) {
  const slugs = new Slugger();
  function compileToJSON(node, parent) {
    if (node.type === "root") {
      return {
        type: "root",
        children: node.children.map((child) => compileToJSON(child, node)).filter(Boolean)
      };
    }
    if (node.type === "element") {
      if (node.tagName === "p" && node.children.every((child) => child.type === "text" && /^\s*$/.test(child.value))) {
        return null;
      }
      if (node.tagName === "li") {
        let hasPreviousParagraph = false;
        node.children = node.children?.flatMap((child) => {
          if (child.type === "element" && child.tagName === "p") {
            if (hasPreviousParagraph) {
              child.children.unshift({
                type: "element",
                tagName: "br",
                properties: {},
                children: []
              });
            }
            hasPreviousParagraph = true;
            return child.children;
          }
          return child;
        });
      }
      if (node.tagName?.match(/^h\d$/)) {
        node.properties = node.properties || {};
        node.properties.id = String(node.properties?.id || slugs.slug(toString(node))).replace(/-+/g, "-").replace(/^-|-$/g, "").replace(/^(\d)/, "_$1");
      }
      if (node.tagName === "component-slot") {
        node.tagName = "template";
      }
      const children = (node.tagName === "template" && node.content?.children.length ? node.content.children : node.children).map((child) => compileToJSON(child, node)).filter(Boolean);
      return {
        type: "element",
        tag: node.tagName,
        props: validateProps(node.tagName, node.properties),
        children
      };
    }
    if (node.type === "text") {
      if (!/^\n+$/.test(node.value || "") || parent?.properties?.emptyLinePlaceholder) {
        return {
          type: "text",
          value: node.value
        };
      }
    }
    if (options.keepComments && node.type === "comment") {
      return {
        type: "comment",
        value: node.value
      };
    }
    return null;
  }
  this.Compiler = (tree) => {
    const body = compileToJSON(tree);
    let excerpt = void 0;
    const excerptIndex = tree.children.findIndex((node) => node.type === "comment" && node.value?.trim() === "more");
    if (excerptIndex !== -1) {
      excerpt = compileToJSON({
        type: "root",
        children: tree.children.slice(0, excerptIndex)
      });
      if (excerpt.children.find((node) => node.type === "element" && node.tag === "pre")) {
        const lastChild = body.children[body.children.length - 1];
        if (lastChild.type === "element" && lastChild.tag === "style") {
          excerpt.children.push(lastChild);
        }
      }
    }
    body.children = (body.children || []).filter((child) => child.type !== "text");
    return {
      body,
      excerpt
    };
  };
}

let moduleOptions;
let generatedMdcConfigs;
const createMarkdownParser = async (inlineOptions = {}) => {
  if (!moduleOptions) {
    moduleOptions = await import(
      './build/mdc-imports.mjs'
      /* @vite-ignore */
    ).catch(() => ({}));
  }
  if (!generatedMdcConfigs) {
    generatedMdcConfigs = await Promise.resolve().then(function () { return mdcConfigs; }).then((r) => r.getMdcConfigs()).catch(() => []);
  }
  const mdcConfigs$1 = [
    ...generatedMdcConfigs || [],
    ...inlineOptions.configs || []
  ];
  if (inlineOptions.highlight != null && inlineOptions.highlight != false && inlineOptions.highlight.highlighter !== void 0 && typeof inlineOptions.highlight.highlighter !== "function") {
    inlineOptions = {
      ...inlineOptions,
      highlight: {
        ...inlineOptions.highlight
      }
    };
    delete inlineOptions.highlight.highlighter;
  }
  const options = defu(inlineOptions, {
    remark: { plugins: moduleOptions?.remarkPlugins },
    rehype: { plugins: moduleOptions?.rehypePlugins },
    highlight: moduleOptions?.highlight
  }, defaults);
  if (options.rehype?.plugins?.highlight) {
    options.rehype.plugins.highlight.options = {
      ...options.rehype.plugins.highlight.options || {},
      ...options.highlight || {}
    };
  }
  let processor = unified();
  for (const config of mdcConfigs$1) {
    processor = await config.unified?.pre?.(processor) || processor;
  }
  processor.use(remarkParse);
  for (const config of mdcConfigs$1) {
    processor = await config.unified?.remark?.(processor) || processor;
  }
  await useProcessorPlugins(processor, options.remark?.plugins);
  processor.use(remark2rehype, options.rehype?.options);
  for (const config of mdcConfigs$1) {
    processor = await config.unified?.rehype?.(processor) || processor;
  }
  await useProcessorPlugins(processor, options.rehype?.plugins);
  processor.use(compileHast, options);
  for (const config of mdcConfigs$1) {
    processor = await config.unified?.post?.(processor) || processor;
  }
  return async (md) => {
    const { content, data: frontmatter } = await parseFrontMatter(md);
    const processedFile = await processor.process({ value: content, data: frontmatter });
    const result = processedFile.result;
    const data = Object.assign(
      contentHeading(result.body),
      frontmatter,
      processedFile?.data || {}
    );
    let toc;
    if (data.toc !== false) {
      const tocOption = defu(data.toc || {}, options.toc);
      toc = generateToc(result.body, tocOption);
    }
    return {
      data,
      body: result.body,
      excerpt: result.excerpt,
      toc
    };
  };
};
const parseMarkdown = async (md, inlineOptions = {}) => {
  const parser = await createMarkdownParser(inlineOptions);
  return parser(md);
};
function contentHeading(body) {
  let title = "";
  let description = "";
  const children = body.children.filter((node) => node.type === "element" && node.tag !== "hr");
  if (children.length && children[0].tag === "h1") {
    const node = children.shift();
    title = nodeTextContent(node);
  }
  if (children.length && children[0].tag === "p") {
    const node = children.shift();
    description = nodeTextContent(node);
  }
  return {
    title,
    description
  };
}

const _qNdgJX7zPR = defineNitroPlugin(async (nitroApp) => {
  nitroApp.hooks.hook("render:html", async (ctx, { event }) => {
    const routeOptions = getRouteRules(event);
    const isIsland = process.env.NUXT_COMPONENT_ISLANDS && event.path.startsWith("/__nuxt_island");
    event.path;
    const noSSR = event.context.nuxt?.noSSR || routeOptions.ssr === false && !isIsland || (false);
    if (noSSR) {
      const siteConfig = Object.fromEntries(
        Object.entries(useSiteConfig(event)).map(([k, v]) => [k, toValue(v)])
      );
      ctx.body.push(`<script>window.__NUXT_SITE_CONFIG__=${devalue(siteConfig)}<\/script>`);
    }
  });
});

function getOgImagePath(pagePath, _options) {
  const baseURL = useRuntimeConfig().app.baseURL;
  const options = defu(_options, useOgImageRuntimeConfig().defaults);
  return joinURL("/", baseURL, "__og-image__/image", pagePath, `og.${options.extension}`);
}
function useOgImageRuntimeConfig() {
  return useRuntimeConfig()["nuxt-og-image"];
}

const _g7Z2NB5mMU = defineNitroPlugin$1((nitroApp) => {
  const { isNuxtContentDocumentDriven, defaults } = useOgImageRuntimeConfig();
  nitroApp.hooks.hook("content:file:afterParse", async (content) => {
    if (content._draft || content._extension !== "md" || content._partial || content.indexable === false || content.index === false)
      return;
    let path = content.path;
    if (isNuxtContentDocumentDriven)
      path = content._path;
    if (path && content.ogImage) {
      const ogImageConfig = typeof content.ogImage === "object" ? content.ogImage : {};
      const optionsWithDefault = defu(ogImageConfig, defaults);
      const src = getOgImagePath(path, optionsWithDefault);
      const payload = {
        title: content.title,
        excerpt: content.description || content.excerpt,
        ...content.ogImage
      };
      Object.entries(ogImageConfig).forEach(([key, val]) => {
        payload[key.replace(/-([a-z])/g, (g) => g[1].toUpperCase())] = val;
      });
      content.head = defu({
        script: [
          {
            id: "nuxt-og-image-overrides",
            type: "application/json",
            processTemplateParams: true,
            innerHTML: payload,
            // we want this to be last in our head
            tagPosition: "bodyClose",
            tagPriority: 30
            // slighty higher priority
          }
        ],
        meta: [
          { property: "og:image", content: src },
          { property: "og:image:width", content: optionsWithDefault.width },
          { property: "og:image:height", content: optionsWithDefault.height },
          { property: "og:image:type", content: `image/${optionsWithDefault.extension}` },
          { property: "og:image:alt", content: optionsWithDefault.alt },
          // twitter
          { name: "twitter:card", content: "summary_large_image" },
          { name: "twitter:image:src", content: src },
          { name: "twitter:image:width", content: optionsWithDefault.width },
          { name: "twitter:image:height", content: optionsWithDefault.height },
          { name: "twitter:image:alt", content: optionsWithDefault.alt }
        ]
      });
    }
    return content;
  });
});

const _qapnOcJGMY = defineNitroPlugin$1(async (nitro) => {
  return;
});

const script = "\"use strict\";(()=>{const a=window,e=document.documentElement,c=window.localStorage,d=[\"dark\",\"light\"],n=c&&c.getItem&&c.getItem(\"nuxt-color-mode\")||\"system\";let l=n===\"system\"?f():n;const i=e.getAttribute(\"data-color-mode-forced\");i&&(l=i),r(l),a[\"__NUXT_COLOR_MODE__\"]={preference:n,value:l,getColorScheme:f,addColorScheme:r,removeColorScheme:u};function r(o){const t=\"\"+o+\"\",s=\"\";e.classList?e.classList.add(t):e.className+=\" \"+t,s&&e.setAttribute(\"data-\"+s,o)}function u(o){const t=\"\"+o+\"\",s=\"\";e.classList?e.classList.remove(t):e.className=e.className.replace(new RegExp(t,\"g\"),\"\"),s&&e.removeAttribute(\"data-\"+s)}function m(o){return a.matchMedia(\"(prefers-color-scheme\"+o+\")\")}function f(){if(a.matchMedia&&m(\"\").media!==\"not all\"){for(const o of d)if(m(\":\"+o).matches)return o}return\"light\"}})();";

const _ewEbeeVZj6 = (function(nitro) {
  nitro.hooks.hook("render:html", (htmlContext) => {
    htmlContext.head.push(`<script>${script}<\/script>`);
  });
});

const plugins = [
  _qNdgJX7zPR,
_g7Z2NB5mMU,
_qapnOcJGMY,
_ewEbeeVZj6
];

const errorHandler = (async function errorhandler(error, event) {
  const { stack, statusCode, statusMessage, message } = normalizeError(error);
  const errorObject = {
    url: event.path,
    statusCode,
    statusMessage,
    message,
    stack: "",
    // TODO: check and validate error.data for serialisation into query
    data: error.data
  };
  if (error.unhandled || error.fatal) {
    const tags = [
      "[nuxt]",
      "[request error]",
      error.unhandled && "[unhandled]",
      error.fatal && "[fatal]",
      Number(errorObject.statusCode) !== 200 && `[${errorObject.statusCode}]`
    ].filter(Boolean).join(" ");
    console.error(tags, errorObject.message + "\n" + stack.map((l) => "  " + l.text).join("  \n"));
  }
  if (event.handled) {
    return;
  }
  setResponseStatus(event, errorObject.statusCode !== 200 && errorObject.statusCode || 500, errorObject.statusMessage);
  if (isJsonRequest(event)) {
    setResponseHeader(event, "Content-Type", "application/json");
    return send(event, JSON.stringify(errorObject));
  }
  const reqHeaders = getRequestHeaders(event);
  const isRenderingError = event.path.startsWith("/__nuxt_error") || !!reqHeaders["x-nuxt-error"];
  const res = isRenderingError ? null : await useNitroApp().localFetch(
    withQuery(joinURL(useRuntimeConfig(event).app.baseURL, "/__nuxt_error"), errorObject),
    {
      headers: { ...reqHeaders, "x-nuxt-error": "true" },
      redirect: "manual"
    }
  ).catch(() => null);
  if (!res) {
    const { template } = await import('./_/error-500.mjs');
    if (event.handled) {
      return;
    }
    setResponseHeader(event, "Content-Type", "text/html;charset=UTF-8");
    return send(event, template(errorObject));
  }
  const html = await res.text();
  if (event.handled) {
    return;
  }
  for (const [header, value] of res.headers.entries()) {
    setResponseHeader(event, header, value);
  }
  setResponseStatus(event, res.status && res.status !== 200 ? res.status : void 0, res.statusText);
  return send(event, html);
});

const assets = {
  "/art.png": {
    "type": "image/png",
    "etag": "\"31640-X6hT9HUqWX0wuTEzBDvh/GRQdbs\"",
    "mtime": "2024-07-12T14:02:05.066Z",
    "size": 202304,
    "path": "../public/art.png"
  },
  "/BONAVENTUREHALL.png": {
    "type": "image/png",
    "etag": "\"2faa0-3EX7v8wQc2v4gz91C6ygz4c+zK0\"",
    "mtime": "2024-07-12T13:25:22.651Z",
    "size": 195232,
    "path": "../public/BONAVENTUREHALL.png"
  },
  "/bussiness.png": {
    "type": "image/png",
    "etag": "\"100177-B/wFt3nJmVtY3Mwyoi7RVHHN/No\"",
    "mtime": "2024-07-12T14:00:17.668Z",
    "size": 1048951,
    "path": "../public/bussiness.png"
  },
  "/CAMPUSCENTER.png": {
    "type": "image/png",
    "etag": "\"3cefa-UZAiqV+SGFjQJb/OY1JcU2NRlyw\"",
    "mtime": "2024-07-12T13:25:48.960Z",
    "size": 249594,
    "path": "../public/CAMPUSCENTER.png"
  },
  "/communication.png": {
    "type": "image/png",
    "etag": "\"38b6b-sHNBouiRhgiYaSn3LX7ZRKLFnuI\"",
    "mtime": "2024-07-12T14:01:37.943Z",
    "size": 232299,
    "path": "../public/communication.png"
  },
  "/CONFERENCECENTER.png": {
    "type": "image/png",
    "etag": "\"3ec18-f7dj+cIRl/MvmK3YluxYjldEHhw\"",
    "mtime": "2024-07-12T13:26:03.378Z",
    "size": 257048,
    "path": "../public/CONFERENCECENTER.png"
  },
  "/education.png": {
    "type": "image/png",
    "etag": "\"1ebf9-qTaM9J/kFdVWN5XPZ3AAciXCwYc\"",
    "mtime": "2024-07-12T14:01:10.686Z",
    "size": 125945,
    "path": "../public/education.png"
  },
  "/Faith_08_1200X500-1536x640.jpg": {
    "type": "image/jpeg",
    "etag": "\"58632-Llu+IqQXtaFm4QvTKZErY40r7Cc\"",
    "mtime": "2024-07-12T12:00:57.561Z",
    "size": 362034,
    "path": "../public/Faith_08_1200X500-1536x640.jpg"
  },
  "/favicon.ico": {
    "type": "image/vnd.microsoft.icon",
    "etag": "\"8d70e-/T0HxZPWwY3449TORVPFAsrn2sc\"",
    "mtime": "2024-07-12T12:56:39.074Z",
    "size": 579342,
    "path": "../public/favicon.ico"
  },
  "/greathall.png": {
    "type": "image/png",
    "etag": "\"261db-jOPT5JCki2x8FdKA3iWYKQJQxv4\"",
    "mtime": "2024-07-12T13:25:00.035Z",
    "size": 156123,
    "path": "../public/greathall.png"
  },
  "/index.html": {
    "type": "text/html;charset=utf-8",
    "etag": "\"5263d-z5i5Ru4Ci+zzuitFksjCFgoPKRE\"",
    "mtime": "2024-07-14T13:46:38.388Z",
    "size": 337469,
    "path": "../public/index.html"
  },
  "/law.png": {
    "type": "image/png",
    "etag": "\"3a849-G8A+hJO4BbGivpBAh6Jtf+P8J14\"",
    "mtime": "2024-07-12T14:00:32.074Z",
    "size": 239689,
    "path": "../public/law.png"
  },
  "/LIBRARY.png": {
    "type": "image/png",
    "etag": "\"286ff-fJ1HrZUp1zSJSRX8ZBxq4wVOq34\"",
    "mtime": "2024-07-12T13:25:38.236Z",
    "size": 165631,
    "path": "../public/LIBRARY.png"
  },
  "/nursing.png": {
    "type": "image/png",
    "etag": "\"ebc36-U6ijHpjwV5Qu7NiZHg4fciqiQkg\"",
    "mtime": "2024-07-12T14:00:43.371Z",
    "size": 965686,
    "path": "../public/nursing.png"
  },
  "/psychology.png": {
    "type": "image/png",
    "etag": "\"ba1a-MLtXqNTtUEnLx5R2dgzxLi0Cpho\"",
    "mtime": "2024-07-12T14:13:41.205Z",
    "size": 47642,
    "path": "../public/psychology.png"
  },
  "/theater.png": {
    "type": "image/png",
    "etag": "\"10e810-/Ql/X6Qx4fA3r/8kPA1hI4gsG2s\"",
    "mtime": "2024-07-12T14:02:24.277Z",
    "size": 1107984,
    "path": "../public/theater.png"
  },
  "/_payload.json": {
    "type": "application/json;charset=utf-8",
    "etag": "\"56-GRTR6lRJPzncqZQxqkC+esms6Fo\"",
    "mtime": "2024-07-14T13:46:38.404Z",
    "size": 86,
    "path": "../public/_payload.json"
  },
  "/__studio.json": {
    "type": "application/json",
    "etag": "\"b7ce-kd33l1Wn68LnQin5uMzBEzM9svE\"",
    "mtime": "2024-07-14T13:46:38.230Z",
    "size": 47054,
    "path": "../public/__studio.json"
  },
  "/_nuxt/0odOVgx2.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b7-U9KBbt0X7UNRRMN6M+eSbyD6CV0\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 183,
    "path": "../public/_nuxt/0odOVgx2.js"
  },
  "/_nuxt/6byDJbPA.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"ba-sRS/ai/Xp45jIademRtwzf99nKk\"",
    "mtime": "2024-07-14T13:46:20.467Z",
    "size": 186,
    "path": "../public/_nuxt/6byDJbPA.js"
  },
  "/_nuxt/77kVjPu9.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"5bb58-rdIqpXMT9PjDQbjSdGbjsQFf+eI\"",
    "mtime": "2024-07-14T13:46:20.478Z",
    "size": 375640,
    "path": "../public/_nuxt/77kVjPu9.js"
  },
  "/_nuxt/9I8DJuh3.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"82d-eR0mGDr85YF442nr3+n9huyh8co\"",
    "mtime": "2024-07-14T13:46:20.471Z",
    "size": 2093,
    "path": "../public/_nuxt/9I8DJuh3.js"
  },
  "/_nuxt/AnjbpH9C.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"4e-wwWhUq20r1psk92DpWWB8guQd2I\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 78,
    "path": "../public/_nuxt/AnjbpH9C.js"
  },
  "/_nuxt/auth.CREb6WB-.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"2ec-Sshq/x+N3N/qiwFPRVzSnMt54EQ\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 748,
    "path": "../public/_nuxt/auth.CREb6WB-.css"
  },
  "/_nuxt/B21vYovu.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"1a2-ETgg13uErjEuf+JT7jFBfwJD6y8\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 418,
    "path": "../public/_nuxt/B21vYovu.js"
  },
  "/_nuxt/BAUlVKSO.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"7ad-Fp64oMRnsDyT7vDn+eC9P7iaXz0\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 1965,
    "path": "../public/_nuxt/BAUlVKSO.js"
  },
  "/_nuxt/BbwhpcWJ.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2fe-ETR2Mu5Za3DTLY4SGIq3fOA+RK8\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 766,
    "path": "../public/_nuxt/BbwhpcWJ.js"
  },
  "/_nuxt/BbZwc3wB.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"11bd-th6uy8cwbclbVtWMGYU0E2dGZ34\"",
    "mtime": "2024-07-14T13:46:20.464Z",
    "size": 4541,
    "path": "../public/_nuxt/BbZwc3wB.js"
  },
  "/_nuxt/Bf6iOOQ4.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b7-5m5Rg6M+WjUGX9cCo5twHCclKmc\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 183,
    "path": "../public/_nuxt/Bf6iOOQ4.js"
  },
  "/_nuxt/BFXgUcjn.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"161-Y8ylAJAko9wjgZTQRIjq/ztmPuc\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 353,
    "path": "../public/_nuxt/BFXgUcjn.js"
  },
  "/_nuxt/BiYp9AJ0.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"90-cPwvVzxxzMkHcGdPeRjDuoU+mNQ\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 144,
    "path": "../public/_nuxt/BiYp9AJ0.js"
  },
  "/_nuxt/BMiqmqFw.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-Gmaar5RqT3aYq/uV+sHbjJI+Wnc\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 180,
    "path": "../public/_nuxt/BMiqmqFw.js"
  },
  "/_nuxt/BosuxZz1.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2b3-Gs2c8CozuFz8HQpV2+LRxv0gz5Q\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 691,
    "path": "../public/_nuxt/BosuxZz1.js"
  },
  "/_nuxt/BpjlOTsG.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"366-gZs0fLycx7qz3B6S5rsdFJbM3Kg\"",
    "mtime": "2024-07-14T13:46:20.469Z",
    "size": 870,
    "path": "../public/_nuxt/BpjlOTsG.js"
  },
  "/_nuxt/BPQEHjQ_.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"1d1-mY40qjEgApKn1hrodXuAEhqy2pk\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 465,
    "path": "../public/_nuxt/BPQEHjQ_.js"
  },
  "/_nuxt/BQFqkEFp.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"184a-ynr7c4U9mKmYQmHabeK2+mkQqPw\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 6218,
    "path": "../public/_nuxt/BQFqkEFp.js"
  },
  "/_nuxt/BqSB5-XQ.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"335-oeb3KqTAdjZ/mk7bplCjD/Htgfc\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 821,
    "path": "../public/_nuxt/BqSB5-XQ.js"
  },
  "/_nuxt/BqYkJkOf.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"6d6-nPwisk7pV6/1Xh9fPq2RNsUqAEE\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 1750,
    "path": "../public/_nuxt/BqYkJkOf.js"
  },
  "/_nuxt/BQzQW7U9.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-cgortxI7M6LjdeW25FKRqYeX7Hw\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 180,
    "path": "../public/_nuxt/BQzQW7U9.js"
  },
  "/_nuxt/BTLirXqR.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-TDCOBLKnySRNb4KhjbDLX+aiA3c\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 180,
    "path": "../public/_nuxt/BTLirXqR.js"
  },
  "/_nuxt/Bvb4xU9r.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"4c6-7dU3dFpD9RzHByp6ORvMADPic7w\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 1222,
    "path": "../public/_nuxt/Bvb4xU9r.js"
  },
  "/_nuxt/BxlB7Wjr.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-JUkz5xyk71dBT4vN9c7/sbLB4ds\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 180,
    "path": "../public/_nuxt/BxlB7Wjr.js"
  },
  "/_nuxt/BXNt2Lf3.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"bc-/HztZnYbbvaK+6InSc7cFTFkH8Q\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 188,
    "path": "../public/_nuxt/BXNt2Lf3.js"
  },
  "/_nuxt/BYqxM56Y.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"241a2-wGIoKdj6YjNBqMlv/GjyxH3t+W0\"",
    "mtime": "2024-07-14T13:46:20.478Z",
    "size": 147874,
    "path": "../public/_nuxt/BYqxM56Y.js"
  },
  "/_nuxt/ByxBBgm1.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"5e6c-C5IZwlpdEsKtD+ytnrGhmN9GClI\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 24172,
    "path": "../public/_nuxt/ByxBBgm1.js"
  },
  "/_nuxt/BZIuFac2.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b6-Yk0JVmPBYQL/j8qLWEHOoG87vNY\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 182,
    "path": "../public/_nuxt/BZIuFac2.js"
  },
  "/_nuxt/C-v3KzvZ.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2ea-5DAAbu6tArfeYyY6Qf21UAkKRUs\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 746,
    "path": "../public/_nuxt/C-v3KzvZ.js"
  },
  "/_nuxt/C0CkjXa_.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"4e-ogV7t39bkHfAO+9czaxbb+6sK2w\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 78,
    "path": "../public/_nuxt/C0CkjXa_.js"
  },
  "/_nuxt/C2462JX8.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2b7-J3qLiJIpi9LkeBh2Vf5osYpsj38\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 695,
    "path": "../public/_nuxt/C2462JX8.js"
  },
  "/_nuxt/C3DMfcN3.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-1Ri2gEwdPT2z/XrJ+hJ2XNeyRBY\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 180,
    "path": "../public/_nuxt/C3DMfcN3.js"
  },
  "/_nuxt/CAcGYwuc.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"201-lmzFH8HMiAGYK3YpfFKypr++hJE\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 513,
    "path": "../public/_nuxt/CAcGYwuc.js"
  },
  "/_nuxt/Cb8MIwvY.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"f3-j+rxqzYtnv0By8DS9KIR07rd+dQ\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 243,
    "path": "../public/_nuxt/Cb8MIwvY.js"
  },
  "/_nuxt/cBk0boXk.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"956-Pv00fI+YIgkkjAus2FdLMgO1GLw\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 2390,
    "path": "../public/_nuxt/cBk0boXk.js"
  },
  "/_nuxt/CF3NOiUn.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"9d28-KMUVGMabn+HMNY7u7jtzYjghhSY\"",
    "mtime": "2024-07-14T13:46:20.478Z",
    "size": 40232,
    "path": "../public/_nuxt/CF3NOiUn.js"
  },
  "/_nuxt/CGID3fX0.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"a4d-k6bBmljfK2HFSiTOM0lKHGBhgr8\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 2637,
    "path": "../public/_nuxt/CGID3fX0.js"
  },
  "/_nuxt/CI1T1zJI.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2f8-7/P0Fu7vJK+vSfOL3uTtxhlsKRI\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 760,
    "path": "../public/_nuxt/CI1T1zJI.js"
  },
  "/_nuxt/CI_0kNcA.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"366-bD9pGCAwwWrydV/L505z8MLO7X8\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 870,
    "path": "../public/_nuxt/CI_0kNcA.js"
  },
  "/_nuxt/CM-YUn89.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"234-b+Xq4AFmsmqx7AiUc/0vV2h0ClU\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 564,
    "path": "../public/_nuxt/CM-YUn89.js"
  },
  "/_nuxt/CM9VEKSX.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"1244-6RabikUs8Kmql6WYCCnyxAfY0JQ\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 4676,
    "path": "../public/_nuxt/CM9VEKSX.js"
  },
  "/_nuxt/course.lfq488iD.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"aac-rm1zbgeNG3aR1x1OL6QNvkt8wgI\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 2732,
    "path": "../public/_nuxt/course.lfq488iD.css"
  },
  "/_nuxt/CqtHhlaW.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"91a-yX1v3Gfw3cqipRUSeGDmp2fXaS4\"",
    "mtime": "2024-07-14T13:46:20.467Z",
    "size": 2330,
    "path": "../public/_nuxt/CqtHhlaW.js"
  },
  "/_nuxt/CqZ7QpOi.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"242-nctrV9XYqpQc4IBaw5vtKEPqzXI\"",
    "mtime": "2024-07-14T13:46:20.473Z",
    "size": 578,
    "path": "../public/_nuxt/CqZ7QpOi.js"
  },
  "/_nuxt/CspwDfQ-.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"548d-AiPTeDNCccAJQYLl5oYry0utZWY\"",
    "mtime": "2024-07-14T13:46:20.477Z",
    "size": 21645,
    "path": "../public/_nuxt/CspwDfQ-.js"
  },
  "/_nuxt/CtEZZ_ao.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b8-qsAZvXeVgy7QyJ0MDU5IuXgN5y0\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 184,
    "path": "../public/_nuxt/CtEZZ_ao.js"
  },
  "/_nuxt/Cu4GKsXU.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-ttI50ejD8fdePvMOH/gkAYHI8lo\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 180,
    "path": "../public/_nuxt/Cu4GKsXU.js"
  },
  "/_nuxt/CuD4WZzr.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b4-IXAuudOVGlZNI0u9lBYF4hTZ+Jw\"",
    "mtime": "2024-07-14T13:46:20.467Z",
    "size": 180,
    "path": "../public/_nuxt/CuD4WZzr.js"
  },
  "/_nuxt/CyrugTyJ.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"165-NQdh16fpCeelqqbYaoVKv6vGYTE\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 357,
    "path": "../public/_nuxt/CyrugTyJ.js"
  },
  "/_nuxt/D-YR13Pt.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"7a-3JumVZblT0EZ0Zso6ASCJcx+jz8\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 122,
    "path": "../public/_nuxt/D-YR13Pt.js"
  },
  "/_nuxt/D80RFAZT.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"9a-OPno31ajs00xbQ2FTTUL65AD4uc\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 154,
    "path": "../public/_nuxt/D80RFAZT.js"
  },
  "/_nuxt/DGTHCtTl.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"6f5-+LwGcXKyOun58b2Z6dfQXPMvHDY\"",
    "mtime": "2024-07-14T13:46:20.471Z",
    "size": 1781,
    "path": "../public/_nuxt/DGTHCtTl.js"
  },
  "/_nuxt/dist.DXH06rbU.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"203-ywwEqU0w2AqmTTOzg9P3Uc/lvH0\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 515,
    "path": "../public/_nuxt/dist.DXH06rbU.css"
  },
  "/_nuxt/Dj8LuKSq.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2354-5wOIL/xjWXve+8hTdw5DeQF7uLk\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 9044,
    "path": "../public/_nuxt/Dj8LuKSq.js"
  },
  "/_nuxt/DJROIVB3.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"366-BqZLOYuIjx6xtis3WM2yWNeC+CE\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 870,
    "path": "../public/_nuxt/DJROIVB3.js"
  },
  "/_nuxt/DkqFr3I_.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"efd-Pqrbw4o/XNYwuSCHxolMLLA7h6Y\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 3837,
    "path": "../public/_nuxt/DkqFr3I_.js"
  },
  "/_nuxt/DmCzAEBU.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"1af-Yd3iehyQ78MDR3x10s7RlGkcIn0\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 431,
    "path": "../public/_nuxt/DmCzAEBU.js"
  },
  "/_nuxt/DmvVWzH6.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"7a-1CWKTcHAv92EoRiIN9oZ5vUZPF8\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 122,
    "path": "../public/_nuxt/DmvVWzH6.js"
  },
  "/_nuxt/Dnd51l0P.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"454-nRFS6XJvhFXjKl5SUYB6FRqWSOU\"",
    "mtime": "2024-07-14T13:46:20.475Z",
    "size": 1108,
    "path": "../public/_nuxt/Dnd51l0P.js"
  },
  "/_nuxt/DnF85Dfb.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"3a2-HR6DZtiCBAgDlbvqp1190TMy4Pk\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 930,
    "path": "../public/_nuxt/DnF85Dfb.js"
  },
  "/_nuxt/DnRf49bR.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"369d-R0gk8E43FcqEfzUXV1kKTOUM5M8\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 13981,
    "path": "../public/_nuxt/DnRf49bR.js"
  },
  "/_nuxt/DP9xwUSQ.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"121-tmj8JfkiI+OVp47c2+ZOcZ2ottA\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 289,
    "path": "../public/_nuxt/DP9xwUSQ.js"
  },
  "/_nuxt/DpYpVHka.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"979-G3Bn2TwliBWQFg6RURXlF6s4SWs\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 2425,
    "path": "../public/_nuxt/DpYpVHka.js"
  },
  "/_nuxt/DR3LlQhb.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"4949-zOw3n+bYYZ40mL+sW2UT/VzVv/s\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 18761,
    "path": "../public/_nuxt/DR3LlQhb.js"
  },
  "/_nuxt/DW-PdKGO.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"333-TAomW8Qgb6N1J2QzHAfpb3XFWMU\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 819,
    "path": "../public/_nuxt/DW-PdKGO.js"
  },
  "/_nuxt/DWSFSre1.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"514-FUAgGNAshsHB4ipN7NK1ZXc46hg\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 1300,
    "path": "../public/_nuxt/DWSFSre1.js"
  },
  "/_nuxt/DxCs-r71.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"11b-74yqonml3YfQzrr/1jL9ftI+J/E\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 283,
    "path": "../public/_nuxt/DxCs-r71.js"
  },
  "/_nuxt/DxjzwhI2.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b3-2PhXuOq6N9dVvhhs3Pt46Lb9J/Y\"",
    "mtime": "2024-07-14T13:46:20.472Z",
    "size": 179,
    "path": "../public/_nuxt/DxjzwhI2.js"
  },
  "/_nuxt/DyOzjZLE.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"1680-0loFczixwkOTqzTNJNaoZGAoCFw\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 5760,
    "path": "../public/_nuxt/DyOzjZLE.js"
  },
  "/_nuxt/DyuZLbi5.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"741-zxQLmdHxKArwVkF0SCCMMuLBR0I\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 1857,
    "path": "../public/_nuxt/DyuZLbi5.js"
  },
  "/_nuxt/entry.CYgUI0t6.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"6a-nMuvITMvintYkmBLGyLSxod6cA0\"",
    "mtime": "2024-07-14T13:46:20.461Z",
    "size": 106,
    "path": "../public/_nuxt/entry.CYgUI0t6.css"
  },
  "/_nuxt/F5soKK-0.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"2987-/AFmCrCcT6zoLPwfE37y6hg7eS0\"",
    "mtime": "2024-07-14T13:46:20.477Z",
    "size": 10631,
    "path": "../public/_nuxt/F5soKK-0.js"
  },
  "/_nuxt/fWXBjiu6.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"b7-BFGNWGCkeSMy/t1YySi7jqOepfk\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 183,
    "path": "../public/_nuxt/fWXBjiu6.js"
  },
  "/_nuxt/IconCSS.Cj2W-MfS.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"102-E9Fu9XaaisPVEyGFM0fjyAoogAg\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 258,
    "path": "../public/_nuxt/IconCSS.Cj2W-MfS.css"
  },
  "/_nuxt/index.CmimXzMY.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"3eb-Brfqr8TMkzNbOch91suovKEYRHk\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 1003,
    "path": "../public/_nuxt/index.CmimXzMY.css"
  },
  "/_nuxt/inquery.DANmo4kV.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"2d2-PFOe2I+pJq9X1mfwqwsR7kG9uxQ\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 722,
    "path": "../public/_nuxt/inquery.DANmo4kV.css"
  },
  "/_nuxt/MQxt8P_9.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"366-gF2Zzjco2S/oolCPNXp9z9fPVlc\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 870,
    "path": "../public/_nuxt/MQxt8P_9.js"
  },
  "/_nuxt/ProseCode.CchFRBtv.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"2e-GbvrqT5j9gSWlpa8e36U/Kv6Zx0\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 46,
    "path": "../public/_nuxt/ProseCode.CchFRBtv.css"
  },
  "/_nuxt/QBOu5bZy.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"242-xJMzkChvdWfMri7i/lvPNf1CAKc\"",
    "mtime": "2024-07-14T13:46:20.468Z",
    "size": 578,
    "path": "../public/_nuxt/QBOu5bZy.js"
  },
  "/_nuxt/rCYhVxbn.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"a8d-BS/JZx3o/FE1884qC1devLRXnYg\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 2701,
    "path": "../public/_nuxt/rCYhVxbn.js"
  },
  "/_nuxt/useStudio.W0kXsdSz.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"d9a-Z7RQragv1mPmhWd2vNXGK+RZmqE\"",
    "mtime": "2024-07-14T13:46:20.449Z",
    "size": 3482,
    "path": "../public/_nuxt/useStudio.W0kXsdSz.css"
  },
  "/_nuxt/XjXwqtzb.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"4f9-O9v7un2zUkolq5G9Pwe4gEbkd/Q\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 1273,
    "path": "../public/_nuxt/XjXwqtzb.js"
  },
  "/_nuxt/yGhOAhvk.js": {
    "type": "text/javascript; charset=utf-8",
    "etag": "\"409-bax2hGPhcKbe3w8LTHk2VJB1fP4\"",
    "mtime": "2024-07-14T13:46:20.476Z",
    "size": 1033,
    "path": "../public/_nuxt/yGhOAhvk.js"
  },
  "/_nuxt/_slug_.aJ5G--M4.css": {
    "type": "text/css; charset=utf-8",
    "etag": "\"299-5BcI6rDpOl1maJxNrDT7q5w3X6s\"",
    "mtime": "2024-07-14T13:46:20.462Z",
    "size": 665,
    "path": "../public/_nuxt/_slug_.aJ5G--M4.css"
  },
  "/api/_content/cache.1720964739686.json": {
    "type": "application/json",
    "etag": "\"4d-w2qCtw46kEVV84NmrrMrgL6heLo\"",
    "mtime": "2024-07-14T13:46:38.311Z",
    "size": 77,
    "path": "../public/api/_content/cache.1720964739686.json"
  },
  "/_nuxt/builds/latest.json": {
    "type": "application/json",
    "etag": "\"47-G5PB/m8uvrl3j7DV0ZOlP2sETCk\"",
    "mtime": "2024-07-14T13:46:38.415Z",
    "size": 71,
    "path": "../public/_nuxt/builds/latest.json"
  },
  "/api/_content/navigation/i5pZc4XEtQ.1720964739686.json": {
    "type": "application/json",
    "etag": "\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\"",
    "mtime": "2024-07-14T13:46:38.404Z",
    "size": 2,
    "path": "../public/api/_content/navigation/i5pZc4XEtQ.1720964739686.json"
  },
  "/_nuxt/builds/meta/f936fbc2-ca3f-4f86-aa67-f7336cd3aa22.json": {
    "type": "application/json",
    "etag": "\"a1-THZi79h93rmg+h+yUtcwho/6884\"",
    "mtime": "2024-07-14T13:46:38.415Z",
    "size": 161,
    "path": "../public/_nuxt/builds/meta/f936fbc2-ca3f-4f86-aa67-f7336cd3aa22.json"
  }
};

const _DRIVE_LETTER_START_RE = /^[A-Za-z]:\//;
function normalizeWindowsPath(input = "") {
  if (!input) {
    return input;
  }
  return input.replace(/\\/g, "/").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());
}
const _IS_ABSOLUTE_RE = /^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/;
const _DRIVE_LETTER_RE = /^[A-Za-z]:$/;
function cwd() {
  if (typeof process !== "undefined" && typeof process.cwd === "function") {
    return process.cwd().replace(/\\/g, "/");
  }
  return "/";
}
const resolve = function(...arguments_) {
  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));
  let resolvedPath = "";
  let resolvedAbsolute = false;
  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {
    const path = index >= 0 ? arguments_[index] : cwd();
    if (!path || path.length === 0) {
      continue;
    }
    resolvedPath = `${path}/${resolvedPath}`;
    resolvedAbsolute = isAbsolute(path);
  }
  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);
  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {
    return `/${resolvedPath}`;
  }
  return resolvedPath.length > 0 ? resolvedPath : ".";
};
function normalizeString(path, allowAboveRoot) {
  let res = "";
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let char = null;
  for (let index = 0; index <= path.length; ++index) {
    if (index < path.length) {
      char = path[index];
    } else if (char === "/") {
      break;
    } else {
      char = "/";
    }
    if (char === "/") {
      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== "." || res[res.length - 2] !== ".") {
          if (res.length > 2) {
            const lastSlashIndex = res.lastIndexOf("/");
            if (lastSlashIndex === -1) {
              res = "";
              lastSegmentLength = 0;
            } else {
              res = res.slice(0, lastSlashIndex);
              lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
            }
            lastSlash = index;
            dots = 0;
            continue;
          } else if (res.length > 0) {
            res = "";
            lastSegmentLength = 0;
            lastSlash = index;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          res += res.length > 0 ? "/.." : "..";
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0) {
          res += `/${path.slice(lastSlash + 1, index)}`;
        } else {
          res = path.slice(lastSlash + 1, index);
        }
        lastSegmentLength = index - lastSlash - 1;
      }
      lastSlash = index;
      dots = 0;
    } else if (char === "." && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}
const isAbsolute = function(p) {
  return _IS_ABSOLUTE_RE.test(p);
};
const _EXTNAME_RE = /.(\.[^./]+)$/;
const extname = function(p) {
  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));
  return match && match[1] || "";
};
const dirname = function(p) {
  const segments = normalizeWindowsPath(p).replace(/\/$/, "").split("/").slice(0, -1);
  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {
    segments[0] += "/";
  }
  return segments.join("/") || (isAbsolute(p) ? "/" : ".");
};

function readAsset (id) {
  const serverDir = dirname(fileURLToPath(globalThis._importMeta_.url));
  return promises$1.readFile(resolve(serverDir, assets[id].path))
}

const publicAssetBases = {"/_nuxt/builds/meta/":{"maxAge":31536000},"/_nuxt/builds/":{"maxAge":1},"/_fonts/":{"maxAge":31536000},"/_nuxt/":{"maxAge":31536000}};

function isPublicAssetURL(id = '') {
  if (assets[id]) {
    return true
  }
  for (const base in publicAssetBases) {
    if (id.startsWith(base)) { return true }
  }
  return false
}

function getAsset (id) {
  return assets[id]
}

const METHODS = /* @__PURE__ */ new Set(["HEAD", "GET"]);
const EncodingMap = { gzip: ".gz", br: ".br" };
const _f4b49z = eventHandler((event) => {
  if (event.method && !METHODS.has(event.method)) {
    return;
  }
  let id = decodePath(
    withLeadingSlash(withoutTrailingSlash(parseURL(event.path).pathname))
  );
  let asset;
  const encodingHeader = String(
    getRequestHeader(event, "accept-encoding") || ""
  );
  const encodings = [
    ...encodingHeader.split(",").map((e) => EncodingMap[e.trim()]).filter(Boolean).sort(),
    ""
  ];
  if (encodings.length > 1) {
    setResponseHeader(event, "Vary", "Accept-Encoding");
  }
  for (const encoding of encodings) {
    for (const _id of [id + encoding, joinURL(id, "index.html" + encoding)]) {
      const _asset = getAsset(_id);
      if (_asset) {
        asset = _asset;
        id = _id;
        break;
      }
    }
  }
  if (!asset) {
    if (isPublicAssetURL(id)) {
      removeResponseHeader(event, "Cache-Control");
      throw createError$1({
        statusMessage: "Cannot find static asset " + id,
        statusCode: 404
      });
    }
    return;
  }
  const ifNotMatch = getRequestHeader(event, "if-none-match") === asset.etag;
  if (ifNotMatch) {
    setResponseStatus(event, 304, "Not Modified");
    return "";
  }
  const ifModifiedSinceH = getRequestHeader(event, "if-modified-since");
  const mtimeDate = new Date(asset.mtime);
  if (ifModifiedSinceH && asset.mtime && new Date(ifModifiedSinceH) >= mtimeDate) {
    setResponseStatus(event, 304, "Not Modified");
    return "";
  }
  if (asset.type && !getResponseHeader(event, "Content-Type")) {
    setResponseHeader(event, "Content-Type", asset.type);
  }
  if (asset.etag && !getResponseHeader(event, "ETag")) {
    setResponseHeader(event, "ETag", asset.etag);
  }
  if (asset.mtime && !getResponseHeader(event, "Last-Modified")) {
    setResponseHeader(event, "Last-Modified", mtimeDate.toUTCString());
  }
  if (asset.encoding && !getResponseHeader(event, "Content-Encoding")) {
    setResponseHeader(event, "Content-Encoding", asset.encoding);
  }
  if (asset.size > 0 && !getResponseHeader(event, "Content-Length")) {
    setResponseHeader(event, "Content-Length", asset.size);
  }
  return readAsset(id);
});

let configs;
function getMdcConfigs () {
if (!configs) {
  configs = Promise.all([
  ]);
}
return configs
}

const mdcConfigs = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getMdcConfigs: getMdcConfigs
});

function createShikiHighlighter({
  langs = [],
  themes = [],
  bundledLangs = {},
  bundledThemes = {},
  getMdcConfigs,
  options: shikiOptions
} = {}) {
  let shiki;
  let configs;
  async function _getShiki() {
    const shiki2 = await createHighlighterCore({
      langs,
      themes,
      loadWasm: () => import('./_/onig.mjs')
    });
    for await (const config of await getConfigs()) {
      await config.shiki?.setup?.(shiki2);
    }
    return shiki2;
  }
  async function getShiki() {
    if (!shiki) {
      shiki = _getShiki();
    }
    return shiki;
  }
  async function getConfigs() {
    if (!configs) {
      configs = Promise.resolve(getMdcConfigs?.() || []);
    }
    return configs;
  }
  const baseTransformers = [
    transformerNotationDiff(),
    transformerNotationFocus(),
    transformerNotationHighlight(),
    transformerNotationErrorLevel()
  ];
  const highlighter = async (code, lang, theme, options = {}) => {
    const shiki2 = await getShiki();
    const codeToHastOptions = {
      defaultColor: false,
      meta: {
        __raw: options.meta
      }
    };
    if (lang === "ts-type" || lang === "typescript-type") {
      lang = "typescript";
      codeToHastOptions.grammarContextCode = "let a:";
    } else if (lang === "vue-html" || lang === "vue-template") {
      lang = "vue";
      codeToHastOptions.grammarContextCode = "<template>";
    }
    const themesObject = typeof theme === "string" ? { default: theme } : theme || {};
    const loadedThemes = shiki2.getLoadedThemes();
    const loadedLanguages = shiki2.getLoadedLanguages();
    if (typeof lang === "string" && !loadedLanguages.includes(lang) && !isSpecialLang(lang)) {
      if (bundledLangs[lang]) {
        await shiki2.loadLanguage(bundledLangs[lang]);
      } else {
        lang = "text";
      }
    }
    for (const [color, theme2] of Object.entries(themesObject)) {
      if (typeof theme2 === "string" && !loadedThemes.includes(theme2) && !isSpecialTheme(theme2)) {
        if (bundledThemes[theme2]) {
          await shiki2.loadTheme(bundledThemes[theme2]);
        } else {
          themesObject[color] = "none";
        }
      }
    }
    const transformers = [
      ...baseTransformers
    ];
    for (const config of await getConfigs()) {
      const newTransformers = typeof config.shiki?.transformers === "function" ? await config.shiki?.transformers(code, lang, theme, options) : config.shiki?.transformers || [];
      transformers.push(...newTransformers);
    }
    const root = shiki2.codeToHast(code.trimEnd(), {
      lang,
      ...codeToHastOptions,
      themes: themesObject,
      transformers: [
        ...transformers,
        {
          name: "mdc:highlight",
          line(node, line) {
            if (options.highlights?.includes(line))
              addClassToHast(node, "highlight");
            node.properties.line = line;
          }
        },
        {
          name: "mdc:newline",
          line(node) {
            if (code?.includes("\n")) {
              if (node.children.length === 0 || node.children.length === 1 && node.children[0].type === "element" && node.children[0].children.length === 1 && node.children[0].children[0].type === "text" && node.children[0].children[0].value === "") {
                node.children = [{
                  type: "element",
                  tagName: "span",
                  properties: {
                    emptyLinePlaceholder: true
                  },
                  children: [{ type: "text", value: "\n" }]
                }];
                return;
              }
              const last = node.children.at(-1);
              if (last?.type === "element" && last.tagName === "span") {
                const text = last.children.at(-1);
                if (text?.type === "text")
                  text.value += "\n";
              }
            }
          }
        }
      ]
    });
    const preEl = root.children[0];
    const codeEl = preEl.children[0];
    const wrapperStyle = shikiOptions?.wrapperStyle;
    preEl.properties.style = wrapperStyle ? typeof wrapperStyle === "string" ? wrapperStyle : preEl.properties.style : "";
    const styles = [];
    Object.keys(themesObject).forEach((color) => {
      const colorScheme = color !== "default" ? `.${color}` : "";
      styles.push(
        wrapperStyle ? `${colorScheme} .shiki,` : "",
        `html .${color} .shiki span {`,
        `color: var(--shiki-${color});`,
        `background: var(--shiki-${color}-bg);`,
        `font-style: var(--shiki-${color}-font-style);`,
        `font-weight: var(--shiki-${color}-font-weight);`,
        `text-decoration: var(--shiki-${color}-text-decoration);`,
        "}"
      );
      styles.push(
        `html${colorScheme} .shiki span {`,
        `color: var(--shiki-${color});`,
        `background: var(--shiki-${color}-bg);`,
        `font-style: var(--shiki-${color}-font-style);`,
        `font-weight: var(--shiki-${color}-font-weight);`,
        `text-decoration: var(--shiki-${color}-text-decoration);`,
        "}"
      );
    });
    return {
      tree: codeEl.children,
      className: Array.isArray(preEl.properties.class) ? preEl.properties.class.join(" ") : preEl.properties.class,
      inlineStyle: preEl.properties.style,
      style: styles.join("")
    };
  };
  return highlighter;
}

const bundledLangs = {
"javascript": () => import('shiki/langs/javascript.mjs'),
"js": () => import('shiki/langs/javascript.mjs'),
"jsx": () => import('shiki/langs/jsx.mjs'),
"json": () => import('shiki/langs/json.mjs'),
"typescript": () => import('shiki/langs/typescript.mjs'),
"ts": () => import('shiki/langs/typescript.mjs'),
"tsx": () => import('shiki/langs/tsx.mjs'),
"vue": () => import('shiki/langs/vue.mjs'),
"css": () => import('shiki/langs/css.mjs'),
"html": () => import('shiki/langs/html.mjs'),
"shellscript": () => import('shiki/langs/shellscript.mjs'),
"bash": () => import('shiki/langs/shellscript.mjs'),
"sh": () => import('shiki/langs/shellscript.mjs'),
"shell": () => import('shiki/langs/shellscript.mjs'),
"zsh": () => import('shiki/langs/shellscript.mjs'),
"markdown": () => import('shiki/langs/markdown.mjs'),
"md": () => import('shiki/langs/markdown.mjs'),
"mdc": () => import('shiki/langs/mdc.mjs'),
"yaml": () => import('shiki/langs/yaml.mjs'),
"yml": () => import('shiki/langs/yaml.mjs'),
"diff": () => import('shiki/langs/diff.mjs'),
"ini": () => import('shiki/langs/ini.mjs'),
"properties": () => import('shiki/langs/ini.mjs'),
};
const bundledThemes = {
"material-theme-lighter": () => import('shiki/themes/material-theme-lighter.mjs').then(r => r.default),
"material-theme": () => import('shiki/themes/material-theme.mjs').then(r => r.default),
"material-theme-palenight": () => import('shiki/themes/material-theme-palenight.mjs').then(r => r.default),
};
const options = {"theme":{"light":"material-theme-lighter","default":"material-theme","dark":"material-theme-palenight"}};
const highlighter = createShikiHighlighter({ bundledLangs, bundledThemes, options, getMdcConfigs });

const mdcHighlighter = /*#__PURE__*/Object.freeze({
  __proto__: null,
  createShikiHighlighter: createShikiHighlighter,
  default: highlighter
});

const _YpqKlk = eventHandler(async (event) => {
  const { code, lang, theme: themeString, options: optionsStr } = getQuery(event);
  const theme = JSON.parse(themeString);
  const options = optionsStr ? JSON.parse(optionsStr) : {};
  return await highlighter(code, lang, theme, options);
});

const components = {
  "Callout": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
    "pascalName": "Callout",
    "kebabName": "callout",
    "chunkName": "components/callout",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1600,
                1652
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "color",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1656,
                1746
              ]
            }
          ],
          "schema": "string",
          "default": "\"primary\""
        },
        {
          "name": "to",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1750,
                1800
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "target",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1804,
                1858
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "ui",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1953,
                2046
              ]
            }
          ],
          "schema": "any",
          "default": "{}"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: { unwrap: string; }) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: { unwrap: string; }): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1600,
                1652
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "color",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1656,
                1746
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "to",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1750,
                1800
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "target",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1804,
                1858
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1862,
                1949
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "ui",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Callout.vue",
              "range": [
                1953,
                2046
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "Card": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
    "pascalName": "Card",
    "kebabName": "card",
    "chunkName": "components/card",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1663,
                1715
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "color",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1719,
                1809
              ]
            }
          ],
          "schema": "string",
          "default": "\"primary\""
        },
        {
          "name": "to",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1813,
                1863
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "target",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1867,
                1921
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "title",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1925,
                1978
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "ui",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                2073,
                2166
              ]
            }
          ],
          "schema": "any",
          "default": "{}"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: { unwrap: string; }) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: { unwrap: string; }): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1663,
                1715
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "color",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1719,
                1809
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "to",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1813,
                1863
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "target",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1867,
                1921
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "title",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1925,
                1978
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                1982,
                2069
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "ui",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue",
              "range": [
                2073,
                2166
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "CardGroup": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CardGroup.vue",
    "pascalName": "CardGroup",
    "kebabName": "card-group",
    "chunkName": "components/card-group",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CardGroup.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CardGroup.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CardGroup.vue",
              "range": [
                282,
                369
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "CodeGroup": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue",
    "pascalName": "CodeGroup",
    "kebabName": "code-group",
    "chunkName": "components/code-group",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue",
              "range": [
                1228,
                1315
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "selectedIndex",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue",
              "range": [
                1487,
                1500
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "Collapsible": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
    "pascalName": "Collapsible",
    "kebabName": "collapsible",
    "chunkName": "components/collapsible",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "name",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1085,
                1140
              ]
            }
          ],
          "schema": "string",
          "default": "\"properties\""
        },
        {
          "name": "openText",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1144,
                1197
              ]
            }
          ],
          "schema": "string",
          "default": "\"Show\""
        },
        {
          "name": "closeText",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1201,
                1255
              ]
            }
          ],
          "schema": "string",
          "default": "\"Hide\""
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ unwrap: string; }",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{ unwrap: string; }",
            "schema": {
              "unwrap": {
                "name": "unwrap",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: { unwrap: string; }): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: { unwrap: string; }) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: { unwrap: string; }): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1085,
                1140
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "openText",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1144,
                1197
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "closeText",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Collapsible.vue",
              "range": [
                1201,
                1255
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "Field": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
    "pascalName": "Field",
    "kebabName": "field",
    "chunkName": "components/field",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "name",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                953,
                1001
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                953,
                1001
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "default",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1181,
                1236
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1068,
                1120
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "description",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1005,
                1064
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "ui",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "{}",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1331,
                1418
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          },
          "default": "{}"
        },
        {
          "name": "required",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1124,
                1177
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "default",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1181,
                1236
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                953,
                1001
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1240,
                1327
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1068,
                1120
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1124,
                1177
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "description",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1005,
                1064
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "ui",
          "type": "{}",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Field.vue",
              "range": [
                1331,
                1418
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ]
    }
  },
  "FieldGroup": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/FieldGroup.vue",
    "pascalName": "FieldGroup",
    "kebabName": "field-group",
    "chunkName": "components/field-group",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/FieldGroup.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/FieldGroup.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/FieldGroup.vue",
              "range": [
                380,
                467
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "Shortcut": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
    "pascalName": "Shortcut",
    "kebabName": "shortcut",
    "chunkName": "components/shortcut",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
              "range": [
                285,
                334
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
              "range": [
                285,
                334
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "value",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
              "range": [
                285,
                334
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Shortcut.vue",
              "range": [
                338,
                425
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "Tabs": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
    "pascalName": "Tabs",
    "kebabName": "tabs",
    "chunkName": "components/tabs",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "selectedIndex",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
              "range": [
                1382,
                1435
              ]
            }
          ],
          "schema": "number",
          "default": "0"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
              "range": [
                1382,
                1435
              ]
            }
          ],
          "schema": "number"
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Tabs.vue",
              "range": [
                1439,
                1526
              ]
            }
          ],
          "schema": "any"
        }
      ]
    }
  },
  "ProseCode": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
    "pascalName": "ProseCode",
    "kebabName": "prose-code",
    "chunkName": "components/prose-code",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "code",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                78,
                126
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                78,
                126
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                130,
                182
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "language",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                186,
                242
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "filename",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                305,
                361
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "highlights",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number[]",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                365,
                444
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          },
          "default": "undefined"
        },
        {
          "name": "meta",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                448,
                500
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "hideHeader",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                246,
                301
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "code",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                78,
                126
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                130,
                182
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "language",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                186,
                242
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "hideHeader",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                246,
                301
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "filename",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                305,
                361
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "highlights",
          "type": "number[]",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                365,
                444
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          }
        },
        {
          "name": "meta",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCode.vue",
              "range": [
                448,
                500
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseCodeButton": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
    "pascalName": "ProseCodeButton",
    "kebabName": "prose-code-button",
    "chunkName": "components/prose-code-button",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "code",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
              "range": [
                55,
                103
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
              "range": [
                55,
                103
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "code",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeButton.vue",
              "range": [
                55,
                103
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseCodeIcon": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
    "pascalName": "ProseCodeIcon",
    "kebabName": "prose-code-icon",
    "chunkName": "components/prose-code-icon",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
              "range": [
                55,
                107
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        },
        {
          "name": "filename",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
              "range": [
                111,
                167
              ]
            }
          ],
          "schema": "string",
          "default": "undefined"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
              "range": [
                55,
                107
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "filename",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseCodeIcon.vue",
              "range": [
                111,
                167
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH1": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
    "pascalName": "ProseH1",
    "kebabName": "prose-h1",
    "chunkName": "components/prose-h1",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
              "range": [
                414,
                460
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH1.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH2": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
    "pascalName": "ProseH2",
    "kebabName": "prose-h2",
    "chunkName": "components/prose-h2",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
              "range": [
                414,
                460
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH2.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH3": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
    "pascalName": "ProseH3",
    "kebabName": "prose-h3",
    "chunkName": "components/prose-h3",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
              "range": [
                414,
                460
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH3.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH4": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
    "pascalName": "ProseH4",
    "kebabName": "prose-h4",
    "chunkName": "components/prose-h4",
    "shortPath": "../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
              "range": [
                414,
                460
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/prose/ProseH4.vue",
              "range": [
                414,
                460
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ContentDoc": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "pascalName": "ContentDoc",
    "kebabName": "content-doc",
    "chunkName": "components/content-doc",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "path",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2492,
                2505
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2510,
                2521
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "tag",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2545,
                2557
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "head",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2526,
                2540
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2562,
                2579
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ doc: ParsedContent; refresh: () => Promise<void>; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2678,
                2819
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ doc: ParsedContent; refresh: () => Promise<void>; }",
            "schema": {
              "doc": {
                "name": "doc",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ParsedContent",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2715,
                      2734
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "ParsedContent",
                  "schema": {
                    "excerpt": {
                      "name": "excerpt",
                      "global": false,
                      "description": "Excerpt",
                      "tags": [],
                      "required": false,
                      "type": "MarkdownRoot",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2604,
                            2627
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "object",
                        "type": "MarkdownRoot",
                        "schema": {
                          "type": {
                            "name": "type",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "\"root\"",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1645,
                                  1658
                                ]
                              }
                            ],
                            "schema": "\"root\""
                          },
                          "children": {
                            "name": "children",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "MarkdownNode[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1663,
                                  1688
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "array",
                              "type": "MarkdownNode[]",
                              "schema": {
                                "0": {
                                  "kind": "object",
                                  "type": "MarkdownNode",
                                  "schema": {
                                    "type": {
                                      "name": "type",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1401,
                                            1414
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "tag": {
                                      "name": "tag",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1419,
                                            1432
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "value": {
                                      "name": "value",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1437,
                                            1452
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "props": {
                                      "name": "props",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "Record<string, any>",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1457,
                                            1485
                                          ]
                                        }
                                      ],
                                      "schema": "Record<string, any>"
                                    },
                                    "content": {
                                      "name": "content",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "any",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1490,
                                            1504
                                          ]
                                        }
                                      ],
                                      "schema": "any"
                                    },
                                    "children": {
                                      "name": "children",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "MarkdownNode[]",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1509,
                                            1535
                                          ]
                                        }
                                      ],
                                      "schema": "MarkdownNode[]"
                                    },
                                    "attributes": {
                                      "name": "attributes",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "Record<string, any>",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1540,
                                            1573
                                          ]
                                        }
                                      ],
                                      "schema": "Record<string, any>"
                                    },
                                    "fmAttributes": {
                                      "name": "fmAttributes",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "Record<string, any>",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1578,
                                            1613
                                          ]
                                        }
                                      ],
                                      "schema": "Record<string, any>"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "props": {
                            "name": "props",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Record<string, any>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1693,
                                  1721
                                ]
                              }
                            ],
                            "schema": "Record<string, any>"
                          },
                          "toc": {
                            "name": "toc",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Toc",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1726,
                                  1736
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "object",
                              "type": "Toc",
                              "schema": {
                                "title": {
                                  "name": "title",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "string",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        1289,
                                        1303
                                      ]
                                    }
                                  ],
                                  "schema": "string"
                                },
                                "depth": {
                                  "name": "depth",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "number",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        1308,
                                        1322
                                      ]
                                    }
                                  ],
                                  "schema": "number"
                                },
                                "searchDepth": {
                                  "name": "searchDepth",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "number",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        1327,
                                        1347
                                      ]
                                    }
                                  ],
                                  "schema": "number"
                                },
                                "links": {
                                  "name": "links",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "TocLink[]",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                      "range": [
                                        1352,
                                        1369
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "array",
                                    "type": "TocLink[]",
                                    "schema": {
                                      "0": {
                                        "kind": "object",
                                        "type": "TocLink",
                                        "schema": {
                                          "id": {
                                            "name": "id",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                "range": [
                                                  1192,
                                                  1203
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "text": {
                                            "name": "text",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "string",
                                            "declarations": [
                                              {
                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                "range": [
                                                  1208,
                                                  1221
                                                ]
                                              }
                                            ],
                                            "schema": "string"
                                          },
                                          "depth": {
                                            "name": "depth",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": true,
                                            "type": "number",
                                            "declarations": [
                                              {
                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                "range": [
                                                  1226,
                                                  1240
                                                ]
                                              }
                                            ],
                                            "schema": "number"
                                          },
                                          "children": {
                                            "name": "children",
                                            "global": false,
                                            "description": "",
                                            "tags": [],
                                            "required": false,
                                            "type": "TocLink[]",
                                            "declarations": [
                                              {
                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                "range": [
                                                  1245,
                                                  1266
                                                ]
                                              }
                                            ],
                                            "schema": "TocLink[]"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "body": {
                      "name": "body",
                      "global": false,
                      "description": "Content body",
                      "tags": [],
                      "required": true,
                      "type": "MarkdownRoot",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2668,
                            2694
                          ]
                        }
                      ],
                      "schema": "MarkdownRoot"
                    },
                    "layout": {
                      "name": "layout",
                      "global": false,
                      "description": "Layout",
                      "tags": [],
                      "required": false,
                      "type": "LayoutKey",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            2471,
                            2490
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "LayoutKey",
                        "schema": {
                          "0": "\"default\"",
                          "1": "\"auth\""
                        }
                      }
                    },
                    "_id": {
                      "name": "_id",
                      "global": false,
                      "description": "Content id",
                      "tags": [],
                      "required": true,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            393,
                            405
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_source": {
                      "name": "_source",
                      "global": false,
                      "description": "Content source",
                      "tags": [],
                      "required": false,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            448,
                            465
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_path": {
                      "name": "_path",
                      "global": false,
                      "description": "Content path, this path is source agnostic and it the content my live in any source",
                      "tags": [],
                      "required": false,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            577,
                            592
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "title": {
                      "name": "title",
                      "global": false,
                      "description": "Content title",
                      "tags": [],
                      "required": false,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            634,
                            649
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_draft": {
                      "name": "_draft",
                      "global": false,
                      "description": "Content draft status",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            698,
                            715
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "boolean",
                        "schema": {
                          "0": "false",
                          "1": "true"
                        }
                      }
                    },
                    "_partial": {
                      "name": "_partial",
                      "global": false,
                      "description": "Content partial status",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            766,
                            785
                          ]
                        }
                      ],
                      "schema": "boolean"
                    },
                    "_locale": {
                      "name": "_locale",
                      "global": false,
                      "description": "Content locale",
                      "tags": [],
                      "required": false,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            828,
                            845
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_type": {
                      "name": "_type",
                      "global": false,
                      "description": "File type of the content, i.e `markdown`",
                      "tags": [],
                      "required": false,
                      "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            914,
                            959
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                        "schema": {
                          "0": "\"markdown\"",
                          "1": "\"yaml\"",
                          "2": "\"json\"",
                          "3": "\"csv\""
                        }
                      }
                    },
                    "_file": {
                      "name": "_file",
                      "global": false,
                      "description": "Path to the file relative to the content directory",
                      "tags": [],
                      "required": false,
                      "type": "string",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1038,
                            1053
                          ]
                        }
                      ],
                      "schema": "string"
                    },
                    "_extension": {
                      "name": "_extension",
                      "global": false,
                      "description": "Extension of the file",
                      "tags": [],
                      "required": false,
                      "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1103,
                            1165
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "enum",
                        "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                        "schema": {
                          "0": "\"yaml\"",
                          "1": "\"json\"",
                          "2": "\"csv\"",
                          "3": "\"md\"",
                          "4": "\"yml\"",
                          "5": "\"json5\""
                        }
                      }
                    }
                  }
                }
              },
              "refresh": {
                "name": "refresh",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "() => Promise<void>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2751,
                      2780
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(): Promise<void>"
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: (context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2656,
                2830
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: (context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(context: { doc: ParsedContent; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
                    "range": [
                      2678,
                      2819
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(context: { doc: ParsedContent; refresh: () => Promise<void>; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "tag",
          "type": "string",
          "description": "The tag to use for the renderer element if it is used.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1564,
                1660
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Whether or not to render the excerpt.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1748,
                1825
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "path",
          "type": "string",
          "description": "The path of the content to load from content source.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                1973,
                2073
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "query",
          "type": "undefined",
          "description": "A query builder params object to be passed to <ContentQuery /> component.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2175,
                2287
              ]
            }
          ],
          "schema": "undefined"
        },
        {
          "name": "head",
          "type": "boolean",
          "description": "Whether or not to map the document data to the `head` property.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue.d.ts",
              "range": [
                2379,
                2480
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "ContentList": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "pascalName": "ContentList",
    "kebabName": "content-list",
    "chunkName": "components/content-list",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "path",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1275,
                1288
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1293,
                1304
              ]
            }
          ],
          "schema": "any"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ list: ParsedContent[]; refresh: () => Promise<void>; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1404,
                1548
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ list: ParsedContent[]; refresh: () => Promise<void>; }",
            "schema": {
              "list": {
                "name": "list",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ParsedContent[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1441,
                      1463
                    ]
                  }
                ],
                "schema": {
                  "kind": "array",
                  "type": "ParsedContent[]",
                  "schema": {
                    "0": {
                      "kind": "object",
                      "type": "ParsedContent",
                      "schema": {
                        "excerpt": {
                          "name": "excerpt",
                          "global": false,
                          "description": "Excerpt",
                          "tags": [],
                          "required": false,
                          "type": "MarkdownRoot",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2604,
                                2627
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "MarkdownRoot",
                            "schema": {
                              "type": {
                                "name": "type",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "\"root\"",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1645,
                                      1658
                                    ]
                                  }
                                ],
                                "schema": "\"root\""
                              },
                              "children": {
                                "name": "children",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "MarkdownNode[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1663,
                                      1688
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "array",
                                  "type": "MarkdownNode[]",
                                  "schema": {
                                    "0": {
                                      "kind": "object",
                                      "type": "MarkdownNode",
                                      "schema": {
                                        "type": {
                                          "name": "type",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": true,
                                          "type": "string",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1401,
                                                1414
                                              ]
                                            }
                                          ],
                                          "schema": "string"
                                        },
                                        "tag": {
                                          "name": "tag",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "string",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1419,
                                                1432
                                              ]
                                            }
                                          ],
                                          "schema": "string"
                                        },
                                        "value": {
                                          "name": "value",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "string",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1437,
                                                1452
                                              ]
                                            }
                                          ],
                                          "schema": "string"
                                        },
                                        "props": {
                                          "name": "props",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any>",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1457,
                                                1485
                                              ]
                                            }
                                          ],
                                          "schema": "Record<string, any>"
                                        },
                                        "content": {
                                          "name": "content",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "any",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1490,
                                                1504
                                              ]
                                            }
                                          ],
                                          "schema": "any"
                                        },
                                        "children": {
                                          "name": "children",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "MarkdownNode[]",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1509,
                                                1535
                                              ]
                                            }
                                          ],
                                          "schema": "MarkdownNode[]"
                                        },
                                        "attributes": {
                                          "name": "attributes",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any>",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1540,
                                                1573
                                              ]
                                            }
                                          ],
                                          "schema": "Record<string, any>"
                                        },
                                        "fmAttributes": {
                                          "name": "fmAttributes",
                                          "global": false,
                                          "description": "",
                                          "tags": [],
                                          "required": false,
                                          "type": "Record<string, any>",
                                          "declarations": [
                                            {
                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                              "range": [
                                                1578,
                                                1613
                                              ]
                                            }
                                          ],
                                          "schema": "Record<string, any>"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "props": {
                                "name": "props",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1693,
                                      1721
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              },
                              "toc": {
                                "name": "toc",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Toc",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1726,
                                      1736
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "object",
                                  "type": "Toc",
                                  "schema": {
                                    "title": {
                                      "name": "title",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1289,
                                            1303
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "depth": {
                                      "name": "depth",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "number",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1308,
                                            1322
                                          ]
                                        }
                                      ],
                                      "schema": "number"
                                    },
                                    "searchDepth": {
                                      "name": "searchDepth",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "number",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1327,
                                            1347
                                          ]
                                        }
                                      ],
                                      "schema": "number"
                                    },
                                    "links": {
                                      "name": "links",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "TocLink[]",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1352,
                                            1369
                                          ]
                                        }
                                      ],
                                      "schema": {
                                        "kind": "array",
                                        "type": "TocLink[]",
                                        "schema": {
                                          "0": {
                                            "kind": "object",
                                            "type": "TocLink",
                                            "schema": {
                                              "id": {
                                                "name": "id",
                                                "global": false,
                                                "description": "",
                                                "tags": [],
                                                "required": true,
                                                "type": "string",
                                                "declarations": [
                                                  {
                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                    "range": [
                                                      1192,
                                                      1203
                                                    ]
                                                  }
                                                ],
                                                "schema": "string"
                                              },
                                              "text": {
                                                "name": "text",
                                                "global": false,
                                                "description": "",
                                                "tags": [],
                                                "required": true,
                                                "type": "string",
                                                "declarations": [
                                                  {
                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                    "range": [
                                                      1208,
                                                      1221
                                                    ]
                                                  }
                                                ],
                                                "schema": "string"
                                              },
                                              "depth": {
                                                "name": "depth",
                                                "global": false,
                                                "description": "",
                                                "tags": [],
                                                "required": true,
                                                "type": "number",
                                                "declarations": [
                                                  {
                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                    "range": [
                                                      1226,
                                                      1240
                                                    ]
                                                  }
                                                ],
                                                "schema": "number"
                                              },
                                              "children": {
                                                "name": "children",
                                                "global": false,
                                                "description": "",
                                                "tags": [],
                                                "required": false,
                                                "type": "TocLink[]",
                                                "declarations": [
                                                  {
                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                    "range": [
                                                      1245,
                                                      1266
                                                    ]
                                                  }
                                                ],
                                                "schema": "TocLink[]"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "body": {
                          "name": "body",
                          "global": false,
                          "description": "Content body",
                          "tags": [],
                          "required": true,
                          "type": "MarkdownRoot",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2668,
                                2694
                              ]
                            }
                          ],
                          "schema": "MarkdownRoot"
                        },
                        "layout": {
                          "name": "layout",
                          "global": false,
                          "description": "Layout",
                          "tags": [],
                          "required": false,
                          "type": "LayoutKey",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                2471,
                                2490
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "LayoutKey",
                            "schema": {
                              "0": "\"default\"",
                              "1": "\"auth\""
                            }
                          }
                        },
                        "_id": {
                          "name": "_id",
                          "global": false,
                          "description": "Content id",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                393,
                                405
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_source": {
                          "name": "_source",
                          "global": false,
                          "description": "Content source",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                448,
                                465
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_path": {
                          "name": "_path",
                          "global": false,
                          "description": "Content path, this path is source agnostic and it the content my live in any source",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                577,
                                592
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "title": {
                          "name": "title",
                          "global": false,
                          "description": "Content title",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                634,
                                649
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_draft": {
                          "name": "_draft",
                          "global": false,
                          "description": "Content draft status",
                          "tags": [],
                          "required": false,
                          "type": "boolean",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                698,
                                715
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "boolean",
                            "schema": {
                              "0": "false",
                              "1": "true"
                            }
                          }
                        },
                        "_partial": {
                          "name": "_partial",
                          "global": false,
                          "description": "Content partial status",
                          "tags": [],
                          "required": false,
                          "type": "boolean",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                766,
                                785
                              ]
                            }
                          ],
                          "schema": "boolean"
                        },
                        "_locale": {
                          "name": "_locale",
                          "global": false,
                          "description": "Content locale",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                828,
                                845
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_type": {
                          "name": "_type",
                          "global": false,
                          "description": "File type of the content, i.e `markdown`",
                          "tags": [],
                          "required": false,
                          "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                914,
                                959
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                            "schema": {
                              "0": "\"markdown\"",
                              "1": "\"yaml\"",
                              "2": "\"json\"",
                              "3": "\"csv\""
                            }
                          }
                        },
                        "_file": {
                          "name": "_file",
                          "global": false,
                          "description": "Path to the file relative to the content directory",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1038,
                                1053
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_extension": {
                          "name": "_extension",
                          "global": false,
                          "description": "Extension of the file",
                          "tags": [],
                          "required": false,
                          "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                1103,
                                1165
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                            "schema": {
                              "0": "\"yaml\"",
                              "1": "\"json\"",
                              "2": "\"csv\"",
                              "3": "\"md\"",
                              "4": "\"yml\"",
                              "5": "\"json5\""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "refresh": {
                "name": "refresh",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "() => Promise<void>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1480,
                      1509
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(): Promise<void>"
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: (context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1382,
                1559
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: (context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(context: { list: ParsedContent[]; refresh: () => Promise<void>; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
                    "range": [
                      1404,
                      1548
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(context: { list: ParsedContent[]; refresh: () => Promise<void>; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "path",
          "type": "string",
          "description": "The path of the content to load from content source.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                949,
                1049
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "query",
          "type": "undefined",
          "description": "A query builder params object to be passed to <ContentQuery /> component.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentList.vue.d.ts",
              "range": [
                1151,
                1263
              ]
            }
          ],
          "schema": "undefined"
        }
      ]
    }
  },
  "ContentNavigation": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "pascalName": "ContentNavigation",
    "kebabName": "content-navigation",
    "chunkName": "components/content-navigation",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "query",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                852,
                863
              ]
            }
          ],
          "schema": "any"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{ navigation: NavItem[]; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                969,
                1074
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{ navigation: NavItem[]; }",
            "schema": {
              "navigation": {
                "name": "navigation",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "NavItem[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
                    "range": [
                      1013,
                      1035
                    ]
                  }
                ],
                "schema": {
                  "kind": "array",
                  "type": "NavItem[]",
                  "schema": {
                    "0": {
                      "kind": "object",
                      "type": "NavItem",
                      "schema": {
                        "title": {
                          "name": "title",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11336,
                                11350
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_path": {
                          "name": "_path",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": true,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11355,
                                11369
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_id": {
                          "name": "_id",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11374,
                                11387
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "_draft": {
                          "name": "_draft",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11392,
                                11409
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "boolean",
                            "schema": {
                              "0": "false",
                              "1": "true"
                            }
                          }
                        },
                        "children": {
                          "name": "children",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "NavItem[]",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                              "range": [
                                11414,
                                11435
                              ]
                            }
                          ],
                          "schema": "NavItem[]"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default: ({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                947,
                1085
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default: ({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { ...; }>[]; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "({ navigation }: { navigation: NavItem[]; }) => VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
                    "range": [
                      969,
                      1074
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "({ navigation }: { navigation: NavItem[]; }): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "query",
          "type": "undefined",
          "description": "A query to be passed to `fetchContentNavigation()`.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                713,
                840
              ]
            }
          ],
          "schema": "undefined"
        },
        {
          "name": "navigation",
          "type": "NavItem[]",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue.d.ts",
              "range": [
                410,
                458
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NavItem[]",
            "schema": {
              "0": {
                "kind": "object",
                "type": "NavItem",
                "schema": {
                  "title": {
                    "name": "title",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          11336,
                          11350
                        ]
                      }
                    ],
                    "schema": "string"
                  },
                  "_path": {
                    "name": "_path",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          11355,
                          11369
                        ]
                      }
                    ],
                    "schema": "string"
                  },
                  "_id": {
                    "name": "_id",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "string",
                    "declarations": [
                      {
                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          11374,
                          11387
                        ]
                      }
                    ],
                    "schema": "string"
                  },
                  "_draft": {
                    "name": "_draft",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean",
                    "declarations": [
                      {
                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          11392,
                          11409
                        ]
                      }
                    ],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean",
                      "schema": {
                        "0": "false",
                        "1": "true"
                      }
                    }
                  },
                  "children": {
                    "name": "children",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "NavItem[]",
                    "declarations": [
                      {
                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                        "range": [
                          11414,
                          11435
                        ]
                      }
                    ],
                    "schema": "NavItem[]"
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "ContentQuery": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "pascalName": "ContentQuery",
    "kebabName": "content-query",
    "chunkName": "components/content-query",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue",
    "meta": {
      "type": 0,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ContentRenderer": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "pascalName": "ContentRenderer",
    "kebabName": "content-renderer",
    "chunkName": "components/content-renderer",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1234,
                1261
              ]
            }
          ],
          "schema": "Record<string, any>",
          "default": "{}"
        },
        {
          "name": "tag",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1266,
                1278
              ]
            }
          ],
          "schema": "string",
          "default": "\"div\""
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1283,
                1300
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "value",
          "type": "Record<string, any>",
          "description": "The document to render.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                781,
                881
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "tag",
          "type": "string",
          "description": "The tag to use for the renderer element if it is used.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                1151,
                1222
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Whether or not to render the excerpt.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue.d.ts",
              "range": [
                969,
                1046
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "ContentRendererMarkdown": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "pascalName": "ContentRendererMarkdown",
    "kebabName": "content-renderer-markdown",
    "chunkName": "components/content-renderer-markdown",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "Content to render",
          "tags": [],
          "required": true,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "components",
          "global": false,
          "description": "The map of custom components to use for rendering.",
          "tags": [],
          "required": false,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                675,
                734
              ]
            }
          ],
          "schema": "Record<string, any>",
          "default": "{}"
        },
        {
          "name": "data",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Record<string, any>",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                739,
                792
              ]
            }
          ],
          "schema": "Record<string, any>",
          "default": "{}"
        },
        {
          "name": "tag",
          "global": false,
          "description": "Root tag to use for rendering",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                556,
                603
              ]
            }
          ],
          "schema": "string",
          "default": "\"div\""
        },
        {
          "name": "excerpt",
          "global": false,
          "description": "Render only the excerpt",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                453,
                505
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "value",
          "type": "Record<string, any>",
          "description": "Content to render",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                359,
                408
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "components",
          "type": "Record<string, any>",
          "description": "The map of custom components to use for rendering.",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                675,
                734
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "data",
          "type": "Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                739,
                792
              ]
            }
          ],
          "schema": "Record<string, any>"
        },
        {
          "name": "tag",
          "type": "string",
          "description": "Root tag to use for rendering",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                556,
                603
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "excerpt",
          "type": "boolean",
          "description": "Render only the excerpt",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue",
              "range": [
                453,
                505
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        }
      ]
    }
  },
  "ContentSlot": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "pascalName": "ContentSlot",
    "kebabName": "content-slot",
    "chunkName": "components/content-slot",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "use",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Function",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                881,
                895
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Function",
            "schema": {}
          },
          "default": "void 0"
        },
        {
          "name": "unwrap",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                900,
                925
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "use",
          "type": "Function",
          "description": "A slot name or function",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                606,
                682
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Function",
            "schema": {}
          }
        },
        {
          "name": "unwrap",
          "type": "string | boolean",
          "description": "Tags to unwrap separated by spaces\nExample: 'ul li'",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue.d.ts",
              "range": [
                769,
                869
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          }
        }
      ]
    }
  },
  "DocumentDrivenEmpty": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "pascalName": "DocumentDrivenEmpty",
    "kebabName": "document-driven-empty",
    "chunkName": "components/document-driven-empty",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "value",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "ParsedContent",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "ParsedContent",
            "schema": {
              "excerpt": {
                "name": "excerpt",
                "global": false,
                "description": "Excerpt",
                "tags": [],
                "required": false,
                "type": "MarkdownRoot",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2604,
                      2627
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "MarkdownRoot",
                  "schema": {
                    "type": {
                      "name": "type",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "\"root\"",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1645,
                            1658
                          ]
                        }
                      ],
                      "schema": "\"root\""
                    },
                    "children": {
                      "name": "children",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "MarkdownNode[]",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1663,
                            1688
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "array",
                        "type": "MarkdownNode[]",
                        "schema": {
                          "0": {
                            "kind": "object",
                            "type": "MarkdownNode",
                            "schema": {
                              "type": {
                                "name": "type",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1401,
                                      1414
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "tag": {
                                "name": "tag",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1419,
                                      1432
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "value": {
                                "name": "value",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1437,
                                      1452
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "props": {
                                "name": "props",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1457,
                                      1485
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              },
                              "content": {
                                "name": "content",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1490,
                                      1504
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "children": {
                                "name": "children",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "MarkdownNode[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1509,
                                      1535
                                    ]
                                  }
                                ],
                                "schema": "MarkdownNode[]"
                              },
                              "attributes": {
                                "name": "attributes",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1540,
                                      1573
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              },
                              "fmAttributes": {
                                "name": "fmAttributes",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1578,
                                      1613
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              }
                            }
                          }
                        }
                      }
                    },
                    "props": {
                      "name": "props",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "Record<string, any>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1693,
                            1721
                          ]
                        }
                      ],
                      "schema": "Record<string, any>"
                    },
                    "toc": {
                      "name": "toc",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "Toc",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1726,
                            1736
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "object",
                        "type": "Toc",
                        "schema": {
                          "title": {
                            "name": "title",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "string",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1289,
                                  1303
                                ]
                              }
                            ],
                            "schema": "string"
                          },
                          "depth": {
                            "name": "depth",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "number",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1308,
                                  1322
                                ]
                              }
                            ],
                            "schema": "number"
                          },
                          "searchDepth": {
                            "name": "searchDepth",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "number",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1327,
                                  1347
                                ]
                              }
                            ],
                            "schema": "number"
                          },
                          "links": {
                            "name": "links",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "TocLink[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1352,
                                  1369
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "array",
                              "type": "TocLink[]",
                              "schema": {
                                "0": {
                                  "kind": "object",
                                  "type": "TocLink",
                                  "schema": {
                                    "id": {
                                      "name": "id",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1192,
                                            1203
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "text": {
                                      "name": "text",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1208,
                                            1221
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "depth": {
                                      "name": "depth",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "number",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1226,
                                            1240
                                          ]
                                        }
                                      ],
                                      "schema": "number"
                                    },
                                    "children": {
                                      "name": "children",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "TocLink[]",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1245,
                                            1266
                                          ]
                                        }
                                      ],
                                      "schema": "TocLink[]"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "body": {
                "name": "body",
                "global": false,
                "description": "Content body",
                "tags": [],
                "required": true,
                "type": "MarkdownRoot",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2668,
                      2694
                    ]
                  }
                ],
                "schema": "MarkdownRoot"
              },
              "layout": {
                "name": "layout",
                "global": false,
                "description": "Layout",
                "tags": [],
                "required": false,
                "type": "LayoutKey",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2471,
                      2490
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "LayoutKey",
                  "schema": {
                    "0": "\"default\"",
                    "1": "\"auth\""
                  }
                }
              },
              "_id": {
                "name": "_id",
                "global": false,
                "description": "Content id",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      393,
                      405
                    ]
                  }
                ],
                "schema": "string"
              },
              "_source": {
                "name": "_source",
                "global": false,
                "description": "Content source",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      448,
                      465
                    ]
                  }
                ],
                "schema": "string"
              },
              "_path": {
                "name": "_path",
                "global": false,
                "description": "Content path, this path is source agnostic and it the content my live in any source",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      577,
                      592
                    ]
                  }
                ],
                "schema": "string"
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "Content title",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      634,
                      649
                    ]
                  }
                ],
                "schema": "string"
              },
              "_draft": {
                "name": "_draft",
                "global": false,
                "description": "Content draft status",
                "tags": [],
                "required": false,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      698,
                      715
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "boolean",
                  "schema": {
                    "0": "false",
                    "1": "true"
                  }
                }
              },
              "_partial": {
                "name": "_partial",
                "global": false,
                "description": "Content partial status",
                "tags": [],
                "required": false,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      766,
                      785
                    ]
                  }
                ],
                "schema": "boolean"
              },
              "_locale": {
                "name": "_locale",
                "global": false,
                "description": "Content locale",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      828,
                      845
                    ]
                  }
                ],
                "schema": "string"
              },
              "_type": {
                "name": "_type",
                "global": false,
                "description": "File type of the content, i.e `markdown`",
                "tags": [],
                "required": false,
                "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      914,
                      959
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                  "schema": {
                    "0": "\"markdown\"",
                    "1": "\"yaml\"",
                    "2": "\"json\"",
                    "3": "\"csv\""
                  }
                }
              },
              "_file": {
                "name": "_file",
                "global": false,
                "description": "Path to the file relative to the content directory",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1038,
                      1053
                    ]
                  }
                ],
                "schema": "string"
              },
              "_extension": {
                "name": "_extension",
                "global": false,
                "description": "Extension of the file",
                "tags": [],
                "required": false,
                "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1103,
                      1165
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                  "schema": {
                    "0": "\"yaml\"",
                    "1": "\"json\"",
                    "2": "\"csv\"",
                    "3": "\"md\"",
                    "4": "\"yml\"",
                    "5": "\"json5\""
                  }
                }
              }
            }
          }
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "value",
          "type": "ParsedContent",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenEmpty.vue.d.ts",
              "range": [
                475,
                553
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "ParsedContent",
            "schema": {
              "excerpt": {
                "name": "excerpt",
                "global": false,
                "description": "Excerpt",
                "tags": [],
                "required": false,
                "type": "MarkdownRoot",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2604,
                      2627
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "MarkdownRoot",
                  "schema": {
                    "type": {
                      "name": "type",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "\"root\"",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1645,
                            1658
                          ]
                        }
                      ],
                      "schema": "\"root\""
                    },
                    "children": {
                      "name": "children",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "MarkdownNode[]",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1663,
                            1688
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "array",
                        "type": "MarkdownNode[]",
                        "schema": {
                          "0": {
                            "kind": "object",
                            "type": "MarkdownNode",
                            "schema": {
                              "type": {
                                "name": "type",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": true,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1401,
                                      1414
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "tag": {
                                "name": "tag",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1419,
                                      1432
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "value": {
                                "name": "value",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1437,
                                      1452
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "props": {
                                "name": "props",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1457,
                                      1485
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              },
                              "content": {
                                "name": "content",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1490,
                                      1504
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "children": {
                                "name": "children",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "MarkdownNode[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1509,
                                      1535
                                    ]
                                  }
                                ],
                                "schema": "MarkdownNode[]"
                              },
                              "attributes": {
                                "name": "attributes",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1540,
                                      1573
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              },
                              "fmAttributes": {
                                "name": "fmAttributes",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                    "range": [
                                      1578,
                                      1613
                                    ]
                                  }
                                ],
                                "schema": "Record<string, any>"
                              }
                            }
                          }
                        }
                      }
                    },
                    "props": {
                      "name": "props",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "Record<string, any>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1693,
                            1721
                          ]
                        }
                      ],
                      "schema": "Record<string, any>"
                    },
                    "toc": {
                      "name": "toc",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "Toc",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                          "range": [
                            1726,
                            1736
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "object",
                        "type": "Toc",
                        "schema": {
                          "title": {
                            "name": "title",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "string",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1289,
                                  1303
                                ]
                              }
                            ],
                            "schema": "string"
                          },
                          "depth": {
                            "name": "depth",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "number",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1308,
                                  1322
                                ]
                              }
                            ],
                            "schema": "number"
                          },
                          "searchDepth": {
                            "name": "searchDepth",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "number",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1327,
                                  1347
                                ]
                              }
                            ],
                            "schema": "number"
                          },
                          "links": {
                            "name": "links",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "TocLink[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                "range": [
                                  1352,
                                  1369
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "array",
                              "type": "TocLink[]",
                              "schema": {
                                "0": {
                                  "kind": "object",
                                  "type": "TocLink",
                                  "schema": {
                                    "id": {
                                      "name": "id",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1192,
                                            1203
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "text": {
                                      "name": "text",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "string",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1208,
                                            1221
                                          ]
                                        }
                                      ],
                                      "schema": "string"
                                    },
                                    "depth": {
                                      "name": "depth",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": true,
                                      "type": "number",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1226,
                                            1240
                                          ]
                                        }
                                      ],
                                      "schema": "number"
                                    },
                                    "children": {
                                      "name": "children",
                                      "global": false,
                                      "description": "",
                                      "tags": [],
                                      "required": false,
                                      "type": "TocLink[]",
                                      "declarations": [
                                        {
                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                          "range": [
                                            1245,
                                            1266
                                          ]
                                        }
                                      ],
                                      "schema": "TocLink[]"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "body": {
                "name": "body",
                "global": false,
                "description": "Content body",
                "tags": [],
                "required": true,
                "type": "MarkdownRoot",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2668,
                      2694
                    ]
                  }
                ],
                "schema": "MarkdownRoot"
              },
              "layout": {
                "name": "layout",
                "global": false,
                "description": "Layout",
                "tags": [],
                "required": false,
                "type": "LayoutKey",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      2471,
                      2490
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "LayoutKey",
                  "schema": {
                    "0": "\"default\"",
                    "1": "\"auth\""
                  }
                }
              },
              "_id": {
                "name": "_id",
                "global": false,
                "description": "Content id",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      393,
                      405
                    ]
                  }
                ],
                "schema": "string"
              },
              "_source": {
                "name": "_source",
                "global": false,
                "description": "Content source",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      448,
                      465
                    ]
                  }
                ],
                "schema": "string"
              },
              "_path": {
                "name": "_path",
                "global": false,
                "description": "Content path, this path is source agnostic and it the content my live in any source",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      577,
                      592
                    ]
                  }
                ],
                "schema": "string"
              },
              "title": {
                "name": "title",
                "global": false,
                "description": "Content title",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      634,
                      649
                    ]
                  }
                ],
                "schema": "string"
              },
              "_draft": {
                "name": "_draft",
                "global": false,
                "description": "Content draft status",
                "tags": [],
                "required": false,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      698,
                      715
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "boolean",
                  "schema": {
                    "0": "false",
                    "1": "true"
                  }
                }
              },
              "_partial": {
                "name": "_partial",
                "global": false,
                "description": "Content partial status",
                "tags": [],
                "required": false,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      766,
                      785
                    ]
                  }
                ],
                "schema": "boolean"
              },
              "_locale": {
                "name": "_locale",
                "global": false,
                "description": "Content locale",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      828,
                      845
                    ]
                  }
                ],
                "schema": "string"
              },
              "_type": {
                "name": "_type",
                "global": false,
                "description": "File type of the content, i.e `markdown`",
                "tags": [],
                "required": false,
                "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      914,
                      959
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"markdown\" | \"yaml\" | \"json\" | \"csv\"",
                  "schema": {
                    "0": "\"markdown\"",
                    "1": "\"yaml\"",
                    "2": "\"json\"",
                    "3": "\"csv\""
                  }
                }
              },
              "_file": {
                "name": "_file",
                "global": false,
                "description": "Path to the file relative to the content directory",
                "tags": [],
                "required": false,
                "type": "string",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1038,
                      1053
                    ]
                  }
                ],
                "schema": "string"
              },
              "_extension": {
                "name": "_extension",
                "global": false,
                "description": "Extension of the file",
                "tags": [],
                "required": false,
                "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                    "range": [
                      1103,
                      1165
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "\"yaml\" | \"json\" | \"csv\" | \"md\" | \"yml\" | \"json5\"",
                  "schema": {
                    "0": "\"yaml\"",
                    "1": "\"json\"",
                    "2": "\"csv\"",
                    "3": "\"md\"",
                    "4": "\"yml\"",
                    "5": "\"json5\""
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "DocumentDrivenNotFound": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenNotFound.vue",
    "pascalName": "DocumentDrivenNotFound",
    "kebabName": "document-driven-not-found",
    "chunkName": "components/document-driven-not-found",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenNotFound.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/DocumentDrivenNotFound.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "Markdown": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "pascalName": "Markdown",
    "kebabName": "markdown",
    "chunkName": "components/markdown",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "use",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "Function",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                953,
                967
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Function",
            "schema": {}
          }
        },
        {
          "name": "unwrap",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                972,
                997
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          }
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "use",
          "type": "Function",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                760,
                836
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Function",
            "schema": {}
          }
        },
        {
          "name": "unwrap",
          "type": "string | boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                841,
                941
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | boolean",
            "schema": {
              "0": "string",
              "1": "false",
              "2": "true"
            }
          }
        },
        {
          "name": "fallbackSlot",
          "type": "Slot<any>",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                94,
                144
              ]
            }
          ],
          "schema": {
            "kind": "event",
            "type": "(...args: any[]): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
            "schema": {
              "0": "any"
            }
          }
        },
        {
          "name": "tags",
          "type": "string[]",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                149,
                191
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "string[]",
            "schema": {
              "0": "string"
            }
          }
        },
        {
          "name": "between",
          "type": "Slot<any>",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                196,
                241
              ]
            }
          ],
          "schema": {
            "kind": "event",
            "type": "(...args: any[]): VNode<RendererNode, RendererElement, { [key: string]: any; }>[]",
            "schema": {
              "0": "any"
            }
          }
        },
        {
          "name": "parent",
          "type": "ComponentInternalInstance",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Markdown.vue.d.ts",
              "range": [
                246,
                301
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "ComponentInternalInstance",
            "schema": {
              "uid": {
                "name": "uid",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "number",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58491,
                      58503
                    ]
                  }
                ],
                "schema": "number"
              },
              "type": {
                "name": "type",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ConcreteComponent<{}, any, any, ComputedOptions, MethodOptions, {}, any>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58508,
                      58532
                    ]
                  }
                ],
                "schema": {
                  "kind": "enum",
                  "type": "ConcreteComponent<{}, any, any, ComputedOptions, MethodOptions, {}, any>",
                  "schema": {
                    "0": {
                      "kind": "object",
                      "type": "ComponentOptions<{}, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                      "schema": {
                        "setup": {
                          "name": "setup",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "(this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30406,
                                30632
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }): any",
                            "schema": {}
                          }
                        },
                        "name": {
                          "name": "name",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30637,
                                30651
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "template": {
                          "name": "template",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "string | object",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30656,
                                30683
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "string | object",
                            "schema": {
                              "0": "string",
                              "1": "object"
                            }
                          }
                        },
                        "render": {
                          "name": "render",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Function",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30688,
                                30706
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "Function",
                            "schema": {}
                          }
                        },
                        "components": {
                          "name": "components",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30711,
                                30750
                              ]
                            }
                          ],
                          "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                        },
                        "directives": {
                          "name": "directives",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Record<string, Directive<any, any>>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30755,
                                30794
                              ]
                            }
                          ],
                          "schema": "Record<string, Directive<any, any>>"
                        },
                        "inheritAttrs": {
                          "name": "inheritAttrs",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "boolean",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30799,
                                30822
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "boolean",
                            "schema": {
                              "0": "false",
                              "1": "true"
                            }
                          }
                        },
                        "emits": {
                          "name": "emits",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "any",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30827,
                                30863
                              ]
                            }
                          ],
                          "schema": "any"
                        },
                        "slots": {
                          "name": "slots",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "{}",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30868,
                                30878
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "{}",
                            "schema": {}
                          }
                        },
                        "expose": {
                          "name": "expose",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "string[]",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30883,
                                30901
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "string[]",
                            "schema": {
                              "0": "string"
                            }
                          }
                        },
                        "serverPrefetch": {
                          "name": "serverPrefetch",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void | Promise<any>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30906,
                                30945
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void | Promise<any>"
                          }
                        },
                        "compilerOptions": {
                          "name": "compilerOptions",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "RuntimeCompilerOptions",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30950,
                                30991
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "RuntimeCompilerOptions",
                            "schema": {
                              "isCustomElement": {
                                "name": "isCustomElement",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "(tag: string) => boolean",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31274,
                                      31317
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "event",
                                  "type": "(tag: string): boolean",
                                  "schema": {}
                                }
                              },
                              "whitespace": {
                                "name": "whitespace",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "\"preserve\" | \"condense\"",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31322,
                                      31359
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "\"preserve\" | \"condense\"",
                                  "schema": {
                                    "0": "\"preserve\"",
                                    "1": "\"condense\""
                                  }
                                }
                              },
                              "comments": {
                                "name": "comments",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31364,
                                      31383
                                    ]
                                  }
                                ],
                                "schema": "boolean"
                              },
                              "delimiters": {
                                "name": "delimiters",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "[string, string]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31388,
                                      31418
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "array",
                                  "type": "[string, string]",
                                  "schema": {
                                    "0": "string",
                                    "1": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "call": {
                          "name": "call",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "(this: unknown, ...args: unknown[]) => never",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                30996,
                                31048
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(this: unknown, ...args: unknown[]): never",
                            "schema": {
                              "0": "unknown"
                            }
                          }
                        },
                        "___isFragment": {
                          "name": "___isFragment",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "never",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                31053,
                                31074
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "never",
                            "schema": {}
                          }
                        },
                        "___isTeleport": {
                          "name": "___isTeleport",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "never",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                31079,
                                31100
                              ]
                            }
                          ],
                          "schema": "never"
                        },
                        "___isSuspense": {
                          "name": "___isSuspense",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "never",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                31105,
                                31126
                              ]
                            }
                          ],
                          "schema": "never"
                        },
                        "___defaults": {
                          "name": "___defaults",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "any",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                31131,
                                31153
                              ]
                            }
                          ],
                          "schema": "any"
                        },
                        "compatConfig": {
                          "name": "compatConfig",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "CompatConfig",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                35716,
                                35744
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "CompatConfig",
                            "schema": {
                              "GLOBAL_MOUNT": {
                                "name": "GLOBAL_MOUNT",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": {
                                  "kind": "enum",
                                  "type": "boolean | \"suppress-warning\"",
                                  "schema": {
                                    "0": "false",
                                    "1": "true",
                                    "2": "\"suppress-warning\""
                                  }
                                }
                              },
                              "GLOBAL_MOUNT_CONTAINER": {
                                "name": "GLOBAL_MOUNT_CONTAINER",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_EXTEND": {
                                "name": "GLOBAL_EXTEND",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_PROTOTYPE": {
                                "name": "GLOBAL_PROTOTYPE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_SET": {
                                "name": "GLOBAL_SET",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_DELETE": {
                                "name": "GLOBAL_DELETE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_OBSERVABLE": {
                                "name": "GLOBAL_OBSERVABLE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "GLOBAL_PRIVATE_UTIL": {
                                "name": "GLOBAL_PRIVATE_UTIL",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_SILENT": {
                                "name": "CONFIG_SILENT",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_DEVTOOLS": {
                                "name": "CONFIG_DEVTOOLS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_KEY_CODES": {
                                "name": "CONFIG_KEY_CODES",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_PRODUCTION_TIP": {
                                "name": "CONFIG_PRODUCTION_TIP",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_IGNORED_ELEMENTS": {
                                "name": "CONFIG_IGNORED_ELEMENTS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_WHITESPACE": {
                                "name": "CONFIG_WHITESPACE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CONFIG_OPTION_MERGE_STRATS": {
                                "name": "CONFIG_OPTION_MERGE_STRATS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_SET": {
                                "name": "INSTANCE_SET",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_DELETE": {
                                "name": "INSTANCE_DELETE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_DESTROY": {
                                "name": "INSTANCE_DESTROY",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_EVENT_EMITTER": {
                                "name": "INSTANCE_EVENT_EMITTER",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_EVENT_HOOKS": {
                                "name": "INSTANCE_EVENT_HOOKS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_CHILDREN": {
                                "name": "INSTANCE_CHILDREN",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_LISTENERS": {
                                "name": "INSTANCE_LISTENERS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_SCOPED_SLOTS": {
                                "name": "INSTANCE_SCOPED_SLOTS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "INSTANCE_ATTRS_CLASS_STYLE": {
                                "name": "INSTANCE_ATTRS_CLASS_STYLE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "OPTIONS_DATA_FN": {
                                "name": "OPTIONS_DATA_FN",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "OPTIONS_DATA_MERGE": {
                                "name": "OPTIONS_DATA_MERGE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "OPTIONS_BEFORE_DESTROY": {
                                "name": "OPTIONS_BEFORE_DESTROY",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "OPTIONS_DESTROYED": {
                                "name": "OPTIONS_DESTROYED",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "WATCH_ARRAY": {
                                "name": "WATCH_ARRAY",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "PROPS_DEFAULT_THIS": {
                                "name": "PROPS_DEFAULT_THIS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "V_ON_KEYCODE_MODIFIER": {
                                "name": "V_ON_KEYCODE_MODIFIER",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "CUSTOM_DIR": {
                                "name": "CUSTOM_DIR",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "ATTR_FALSE_VALUE": {
                                "name": "ATTR_FALSE_VALUE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "ATTR_ENUMERATED_COERCION": {
                                "name": "ATTR_ENUMERATED_COERCION",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "TRANSITION_CLASSES": {
                                "name": "TRANSITION_CLASSES",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "TRANSITION_GROUP_ROOT": {
                                "name": "TRANSITION_GROUP_ROOT",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "COMPONENT_ASYNC": {
                                "name": "COMPONENT_ASYNC",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "COMPONENT_FUNCTIONAL": {
                                "name": "COMPONENT_FUNCTIONAL",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "COMPONENT_V_MODEL": {
                                "name": "COMPONENT_V_MODEL",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "RENDER_FUNCTION": {
                                "name": "RENDER_FUNCTION",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "FILTERS": {
                                "name": "FILTERS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "PRIVATE_APIS": {
                                "name": "PRIVATE_APIS",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean | \"suppress-warning\"",
                                "declarations": [],
                                "schema": "boolean | \"suppress-warning\""
                              },
                              "MODE": {
                                "name": "MODE",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>) => 2 | 3)",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      29447,
                                      29498
                                    ]
                                  }
                                ],
                                "schema": {
                                  "kind": "enum",
                                  "type": "2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>) => 2 | 3)",
                                  "schema": {
                                    "0": "2",
                                    "1": "3",
                                    "2": {
                                      "kind": "event",
                                      "type": "(comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>): 2 | 3",
                                      "schema": []
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "name": "data",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                35773,
                                35958
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>): any",
                            "schema": {}
                          }
                        },
                        "computed": {
                          "name": "computed",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "ComputedOptions",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                35963,
                                35976
                              ]
                            }
                          ],
                          "schema": "ComputedOptions"
                        },
                        "methods": {
                          "name": "methods",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "MethodOptions",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                35981,
                                35993
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "object",
                            "type": "MethodOptions",
                            "schema": {}
                          }
                        },
                        "watch": {
                          "name": "watch",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "ComponentWatchOptions",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                35998,
                                36028
                              ]
                            }
                          ],
                          "schema": "ComponentWatchOptions"
                        },
                        "provide": {
                          "name": "provide",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "ComponentProvideOptions",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36033,
                                36067
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "ComponentProvideOptions",
                            "schema": {
                              "0": "Function",
                              "1": "ObjectProvideOptions"
                            }
                          }
                        },
                        "inject": {
                          "name": "inject",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "{} | string[]",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36072,
                                36090
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "{} | string[]",
                            "schema": {
                              "0": "{}",
                              "1": "string[]"
                            }
                          }
                        },
                        "filters": {
                          "name": "filters",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "Record<string, Function>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36095,
                                36130
                              ]
                            }
                          ],
                          "schema": "Record<string, Function>"
                        },
                        "mixins": {
                          "name": "mixins",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "any[]",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36135,
                                36152
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "array",
                            "type": "any[]",
                            "schema": {
                              "0": "any"
                            }
                          }
                        },
                        "extends": {
                          "name": "extends",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "any",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36157,
                                36175
                              ]
                            }
                          ],
                          "schema": "any"
                        },
                        "beforeCreate": {
                          "name": "beforeCreate",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36180,
                                36202
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "created": {
                          "name": "created",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36207,
                                36224
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "beforeMount": {
                          "name": "beforeMount",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36229,
                                36250
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "mounted": {
                          "name": "mounted",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36255,
                                36272
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "beforeUpdate": {
                          "name": "beforeUpdate",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36277,
                                36299
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "updated": {
                          "name": "updated",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36304,
                                36321
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "activated": {
                          "name": "activated",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36326,
                                36345
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "deactivated": {
                          "name": "deactivated",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36350,
                                36371
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "beforeDestroy": {
                          "name": "beforeDestroy",
                          "global": false,
                          "description": "",
                          "tags": [
                            {
                              "name": "deprecated",
                              "text": "use `beforeUnmount` instead"
                            }
                          ],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36427,
                                36450
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "beforeUnmount": {
                          "name": "beforeUnmount",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36455,
                                36478
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "destroyed": {
                          "name": "destroyed",
                          "global": false,
                          "description": "",
                          "tags": [
                            {
                              "name": "deprecated",
                              "text": "use `unmounted` instead"
                            }
                          ],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36530,
                                36549
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "unmounted": {
                          "name": "unmounted",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "() => void",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36554,
                                36573
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(): void"
                          }
                        },
                        "renderTracked": {
                          "name": "renderTracked",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "DebuggerHook",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36578,
                                36607
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(e: DebuggerEvent): void",
                            "schema": {}
                          }
                        },
                        "renderTriggered": {
                          "name": "renderTriggered",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "DebuggerHook",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36612,
                                36643
                              ]
                            }
                          ],
                          "schema": "DebuggerHook"
                        },
                        "errorCaptured": {
                          "name": "errorCaptured",
                          "global": false,
                          "description": "",
                          "tags": [],
                          "required": false,
                          "type": "ErrorCapturedHook<unknown>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36648,
                                36682
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, info: string): boolean | void",
                            "schema": {}
                          }
                        },
                        "delimiters": {
                          "name": "delimiters",
                          "global": false,
                          "description": "runtime compile only",
                          "tags": [
                            {
                              "name": "deprecated",
                              "text": "use `compilerOptions.delimiters` instead."
                            }
                          ],
                          "required": false,
                          "type": "[string, string]",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                36792,
                                36822
                              ]
                            }
                          ],
                          "schema": "[string, string]"
                        },
                        "___differentiator": {
                          "name": "___differentiator",
                          "global": false,
                          "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                          "tags": [],
                          "required": false,
                          "type": "string | number | symbol",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                37132,
                                37179
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "enum",
                            "type": "string | number | symbol",
                            "schema": {
                              "0": "string",
                              "1": "number",
                              "2": "symbol"
                            }
                          }
                        },
                        "___isBuiltIn": {
                          "name": "___isBuiltIn",
                          "global": false,
                          "description": "Compat build only, for bailing out of certain compatibility behavior",
                          "tags": [],
                          "required": false,
                          "type": "boolean",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                56084,
                                56106
                              ]
                            }
                          ],
                          "schema": "boolean"
                        },
                        "___file": {
                          "name": "___file",
                          "global": false,
                          "description": "This one should be exposed so that devtools can make use of it",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                56197,
                                56213
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "___name": {
                          "name": "___name",
                          "global": false,
                          "description": "name inferred from filename",
                          "tags": [],
                          "required": false,
                          "type": "string",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                              "range": [
                                56269,
                                56285
                              ]
                            }
                          ],
                          "schema": "string"
                        },
                        "beforeRouteEnter": {
                          "name": "beforeRouteEnter",
                          "global": false,
                          "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                          "tags": [
                            {
                              "name": "param",
                              "text": "to - RouteLocationRaw we are navigating to"
                            },
                            {
                              "name": "param",
                              "text": "from - RouteLocationRaw we are navigating from"
                            },
                            {
                              "name": "param",
                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                            }
                          ],
                          "required": false,
                          "type": "NavigationGuardWithThis<undefined>",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                              "range": [
                                60091,
                                60218
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                            "schema": {}
                          }
                        },
                        "beforeRouteUpdate": {
                          "name": "beforeRouteUpdate",
                          "global": false,
                          "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                          "tags": [
                            {
                              "name": "param",
                              "text": "to - RouteLocationRaw we are navigating to"
                            },
                            {
                              "name": "param",
                              "text": "from - RouteLocationRaw we are navigating from"
                            },
                            {
                              "name": "param",
                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                            }
                          ],
                          "required": false,
                          "type": "NavigationGuard",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                              "range": [
                                60665,
                                60775
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                            "schema": {}
                          }
                        },
                        "beforeRouteLeave": {
                          "name": "beforeRouteLeave",
                          "global": false,
                          "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                          "tags": [
                            {
                              "name": "param",
                              "text": "to - RouteLocationRaw we are navigating to"
                            },
                            {
                              "name": "param",
                              "text": "from - RouteLocationRaw we are navigating from"
                            },
                            {
                              "name": "param",
                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                            }
                          ],
                          "required": false,
                          "type": "NavigationGuard",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                              "range": [
                                61140,
                                61248
                              ]
                            }
                          ],
                          "schema": "NavigationGuard"
                        },
                        "head": {
                          "name": "head",
                          "global": false,
                          "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                          "tags": [],
                          "required": false,
                          "type": "(nuxtApp: NuxtApp) => UseHeadInput",
                          "declarations": [
                            {
                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                              "range": [
                                1615,
                                1652
                              ]
                            }
                          ],
                          "schema": {
                            "kind": "event",
                            "type": "(nuxtApp: NuxtApp): UseHeadInput",
                            "schema": {}
                          }
                        }
                      }
                    },
                    "1": {
                      "kind": "event",
                      "type": "(props: {}, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed) => void; }, \"expose\">): any",
                      "schema": []
                    }
                  }
                }
              },
              "parent": {
                "name": "parent",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ComponentInternalInstance",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58537,
                      58578
                    ]
                  }
                ],
                "schema": "ComponentInternalInstance"
              },
              "root": {
                "name": "root",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ComponentInternalInstance",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58583,
                      58615
                    ]
                  }
                ],
                "schema": "ComponentInternalInstance"
              },
              "appContext": {
                "name": "appContext",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "AppContext",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58620,
                      58643
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "AppContext",
                  "schema": {
                    "app": {
                      "name": "app",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "App<any>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45790,
                            45799
                          ]
                        }
                      ],
                      "schema": "App<any>"
                    },
                    "config": {
                      "name": "config",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "AppConfig",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45804,
                            45822
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "object",
                        "type": "AppConfig",
                        "schema": {
                          "isNativeTag": {
                            "name": "isNativeTag",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "(tag: string) => boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  44906,
                                  44953
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "event",
                              "type": "(tag: string): boolean",
                              "schema": {}
                            }
                          },
                          "performance": {
                            "name": "performance",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  44958,
                                  44979
                                ]
                              }
                            ],
                            "schema": "boolean"
                          },
                          "optionMergeStrategies": {
                            "name": "optionMergeStrategies",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "Record<string, OptionMergeFunction>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  44984,
                                  45043
                                ]
                              }
                            ],
                            "schema": "Record<string, OptionMergeFunction>"
                          },
                          "globalProperties": {
                            "name": "globalProperties",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": true,
                            "type": "ComponentCustomProperties & Record<string, any>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45048,
                                  45114
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "object",
                              "type": "ComponentCustomProperties & Record<string, any>",
                              "schema": {
                                "$route": {
                                  "name": "$route",
                                  "global": false,
                                  "description": "Normalized current location. See {@link RouteLocationNormalizedLoaded}.",
                                  "tags": [],
                                  "required": true,
                                  "type": "RouteLocationNormalizedLoadedGeneric",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                      "range": [
                                        61400,
                                        61501
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "object",
                                    "type": "RouteLocationNormalizedLoadedGeneric",
                                    "schema": {
                                      "matched": {
                                        "name": "matched",
                                        "global": false,
                                        "description": "Array of {@link RouteLocationMatched} containing only plain components (any\r\nlazy-loaded components have been loaded and were replaced inside the\r\n`components` object) so it can be directly used to display routes. It\r\ncannot contain redirect records either. **This property is non-enumerable**.",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouteLocationMatched[]",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              24447,
                                              24479
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "array",
                                          "type": "RouteLocationMatched[]",
                                          "schema": {
                                            "0": {
                                              "kind": "object",
                                              "type": "RouteLocationMatched",
                                              "schema": {
                                                "components": {
                                                  "name": "components",
                                                  "global": false,
                                                  "description": "{@inheritDoc RouteRecordMultipleViews.components}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "Record<string, RouteComponent>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        22402,
                                                        22464
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Record<string, RouteComponent>"
                                                },
                                                "path": {
                                                  "name": "path",
                                                  "global": false,
                                                  "description": "{@inheritDoc _RouteRecordBase.path}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "string",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42194,
                                                        42225
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "string"
                                                },
                                                "redirect": {
                                                  "name": "redirect",
                                                  "global": false,
                                                  "description": "{@inheritDoc _RouteRecordBase.redirect}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteRecordRedirectOption",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42297,
                                                        42348
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "enum",
                                                    "type": "RouteRecordRedirectOption",
                                                    "schema": {
                                                      "0": "string",
                                                      "1": {
                                                        "kind": "object",
                                                        "type": "RouteLocationAsRelativeGeneric",
                                                        "schema": {
                                                          "name": {
                                                            "name": "name",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "RouteRecordNameGeneric",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  19163,
                                                                  19193
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "enum",
                                                              "type": "RouteRecordNameGeneric",
                                                              "schema": {
                                                                "0": "string",
                                                                "1": "symbol"
                                                              }
                                                            }
                                                          },
                                                          "params": {
                                                            "name": "params",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "RouteParamsRawGeneric",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  19199,
                                                                  19230
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "RouteParamsRawGeneric"
                                                          },
                                                          "path": {
                                                            "name": "path",
                                                            "global": false,
                                                            "description": "A relative path to the current location. This property should be removed",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "undefined",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  19335,
                                                                  19352
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "undefined"
                                                          },
                                                          "query": {
                                                            "name": "query",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "LocationQueryRaw",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  31106,
                                                                  31131
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "LocationQueryRaw"
                                                          },
                                                          "hash": {
                                                            "name": "hash",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "string",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  31137,
                                                                  31151
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string"
                                                          },
                                                          "replace": {
                                                            "name": "replace",
                                                            "global": false,
                                                            "description": "Replace the entry in the history instead of pushing a new entry",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26174,
                                                                  26192
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean"
                                                          },
                                                          "force": {
                                                            "name": "force",
                                                            "global": false,
                                                            "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26402,
                                                                  26418
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean"
                                                          },
                                                          "state": {
                                                            "name": "state",
                                                            "global": false,
                                                            "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "HistoryState",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26667,
                                                                  26688
                                                                ]
                                                              }
                                                            ],
                                                            "schema": {
                                                              "kind": "object",
                                                              "type": "HistoryState",
                                                              "schema": {}
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "2": {
                                                        "kind": "object",
                                                        "type": "RouteLocationAsPathGeneric",
                                                        "schema": {
                                                          "path": {
                                                            "name": "path",
                                                            "global": false,
                                                            "description": "Percentage encoded pathname section of the URL.",
                                                            "tags": [],
                                                            "required": true,
                                                            "type": "string",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  17916,
                                                                  17929
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string"
                                                          },
                                                          "query": {
                                                            "name": "query",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "LocationQueryRaw",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  31106,
                                                                  31131
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "LocationQueryRaw"
                                                          },
                                                          "hash": {
                                                            "name": "hash",
                                                            "global": false,
                                                            "description": "",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "string",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  31137,
                                                                  31151
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "string"
                                                          },
                                                          "replace": {
                                                            "name": "replace",
                                                            "global": false,
                                                            "description": "Replace the entry in the history instead of pushing a new entry",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26174,
                                                                  26192
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean"
                                                          },
                                                          "force": {
                                                            "name": "force",
                                                            "global": false,
                                                            "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "boolean",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26402,
                                                                  26418
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "boolean"
                                                          },
                                                          "state": {
                                                            "name": "state",
                                                            "global": false,
                                                            "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                                                            "tags": [],
                                                            "required": false,
                                                            "type": "HistoryState",
                                                            "declarations": [
                                                              {
                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                "range": [
                                                                  26667,
                                                                  26688
                                                                ]
                                                              }
                                                            ],
                                                            "schema": "HistoryState"
                                                          }
                                                        }
                                                      },
                                                      "3": {
                                                        "kind": "event",
                                                        "type": "(to: RouteLocationGeneric): string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric",
                                                        "schema": []
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "global": false,
                                                  "description": "{@inheritDoc _RouteRecordBase.name}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteRecordNameGeneric",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42416,
                                                        42447
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "RouteRecordNameGeneric"
                                                },
                                                "children": {
                                                  "name": "children",
                                                  "global": false,
                                                  "description": "Nested route records.",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteRecordRaw[]",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42653,
                                                        42680
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "array",
                                                    "type": "RouteRecordRaw[]",
                                                    "schema": {
                                                      "0": {
                                                        "kind": "enum",
                                                        "type": "RouteRecordRaw",
                                                        "schema": [
                                                          {
                                                            "kind": "object",
                                                            "type": "RouteRecordSingleView",
                                                            "schema": {
                                                              "component": {
                                                                "name": "component",
                                                                "global": false,
                                                                "description": "Component to display when the URL matches this route.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RawRouteComponent",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45288,
                                                                      45317
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "RawRouteComponent",
                                                                  "schema": {
                                                                    "0": {
                                                                      "kind": "object",
                                                                      "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                                                      "schema": {
                                                                        "setup": {
                                                                          "name": "setup",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30406,
                                                                                30632
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "event",
                                                                            "type": "(this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }): any",
                                                                            "schema": {}
                                                                          }
                                                                        },
                                                                        "name": {
                                                                          "name": "name",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30637,
                                                                                30651
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "template": {
                                                                          "name": "template",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | object",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30656,
                                                                                30683
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string | object"
                                                                        },
                                                                        "render": {
                                                                          "name": "render",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Function",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30688,
                                                                                30706
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Function"
                                                                        },
                                                                        "components": {
                                                                          "name": "components",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30711,
                                                                                30750
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                                                                        },
                                                                        "directives": {
                                                                          "name": "directives",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Directive<any, any>>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30755,
                                                                                30794
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Directive<any, any>>"
                                                                        },
                                                                        "inheritAttrs": {
                                                                          "name": "inheritAttrs",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "boolean",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30799,
                                                                                30822
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "boolean"
                                                                        },
                                                                        "emits": {
                                                                          "name": "emits",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "any",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30827,
                                                                                30863
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "any"
                                                                        },
                                                                        "slots": {
                                                                          "name": "slots",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "{}",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30868,
                                                                                30878
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "{}"
                                                                        },
                                                                        "expose": {
                                                                          "name": "expose",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30883,
                                                                                30901
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string[]"
                                                                        },
                                                                        "serverPrefetch": {
                                                                          "name": "serverPrefetch",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void | Promise<any>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30906,
                                                                                30945
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void | Promise<any>"
                                                                        },
                                                                        "compilerOptions": {
                                                                          "name": "compilerOptions",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "RuntimeCompilerOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30950,
                                                                                30991
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "RuntimeCompilerOptions"
                                                                        },
                                                                        "call": {
                                                                          "name": "call",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: unknown, ...args: unknown[]) => never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30996,
                                                                                31048
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "(this: unknown, ...args: unknown[]) => never"
                                                                        },
                                                                        "___isFragment": {
                                                                          "name": "___isFragment",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31053,
                                                                                31074
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isTeleport": {
                                                                          "name": "___isTeleport",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31079,
                                                                                31100
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isSuspense": {
                                                                          "name": "___isSuspense",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31105,
                                                                                31126
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___defaults": {
                                                                          "name": "___defaults",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "any",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31131,
                                                                                31153
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "any"
                                                                        },
                                                                        "compatConfig": {
                                                                          "name": "compatConfig",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "CompatConfig",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35716,
                                                                                35744
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "CompatConfig"
                                                                        },
                                                                        "data": {
                                                                          "name": "data",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: any, vm: any) => any",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35773,
                                                                                35958
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "event",
                                                                            "type": "(this: any, vm: any): any",
                                                                            "schema": {}
                                                                          }
                                                                        },
                                                                        "computed": {
                                                                          "name": "computed",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComputedOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35963,
                                                                                35976
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComputedOptions"
                                                                        },
                                                                        "methods": {
                                                                          "name": "methods",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "MethodOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35981,
                                                                                35993
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "MethodOptions"
                                                                        },
                                                                        "watch": {
                                                                          "name": "watch",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentWatchOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35998,
                                                                                36028
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComponentWatchOptions"
                                                                        },
                                                                        "provide": {
                                                                          "name": "provide",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentProvideOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36033,
                                                                                36067
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComponentProvideOptions"
                                                                        },
                                                                        "inject": {
                                                                          "name": "inject",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "{} | string[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36072,
                                                                                36090
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "{} | string[]"
                                                                        },
                                                                        "filters": {
                                                                          "name": "filters",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Function>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36095,
                                                                                36130
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Function>"
                                                                        },
                                                                        "mixins": {
                                                                          "name": "mixins",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "any[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36135,
                                                                                36152
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "any[]"
                                                                        },
                                                                        "extends": {
                                                                          "name": "extends",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "any",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36157,
                                                                                36175
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "any"
                                                                        },
                                                                        "beforeCreate": {
                                                                          "name": "beforeCreate",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36180,
                                                                                36202
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "created": {
                                                                          "name": "created",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36207,
                                                                                36224
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeMount": {
                                                                          "name": "beforeMount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36229,
                                                                                36250
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "mounted": {
                                                                          "name": "mounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36255,
                                                                                36272
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeUpdate": {
                                                                          "name": "beforeUpdate",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36277,
                                                                                36299
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "updated": {
                                                                          "name": "updated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36304,
                                                                                36321
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "activated": {
                                                                          "name": "activated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36326,
                                                                                36345
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "deactivated": {
                                                                          "name": "deactivated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36350,
                                                                                36371
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeDestroy": {
                                                                          "name": "beforeDestroy",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `beforeUnmount` instead"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36427,
                                                                                36450
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeUnmount": {
                                                                          "name": "beforeUnmount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36455,
                                                                                36478
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "destroyed": {
                                                                          "name": "destroyed",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `unmounted` instead"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36530,
                                                                                36549
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "unmounted": {
                                                                          "name": "unmounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36554,
                                                                                36573
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "renderTracked": {
                                                                          "name": "renderTracked",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "DebuggerHook",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36578,
                                                                                36607
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "DebuggerHook"
                                                                        },
                                                                        "renderTriggered": {
                                                                          "name": "renderTriggered",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "DebuggerHook",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36612,
                                                                                36643
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "DebuggerHook"
                                                                        },
                                                                        "errorCaptured": {
                                                                          "name": "errorCaptured",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ErrorCapturedHook<unknown>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36648,
                                                                                36682
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ErrorCapturedHook<unknown>"
                                                                        },
                                                                        "delimiters": {
                                                                          "name": "delimiters",
                                                                          "global": false,
                                                                          "description": "runtime compile only",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `compilerOptions.delimiters` instead."
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "[string, string]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36792,
                                                                                36822
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "[string, string]"
                                                                        },
                                                                        "___differentiator": {
                                                                          "name": "___differentiator",
                                                                          "global": false,
                                                                          "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | number | symbol",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                37132,
                                                                                37179
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string | number | symbol"
                                                                        },
                                                                        "___isBuiltIn": {
                                                                          "name": "___isBuiltIn",
                                                                          "global": false,
                                                                          "description": "Compat build only, for bailing out of certain compatibility behavior",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "boolean",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56084,
                                                                                56106
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "boolean"
                                                                        },
                                                                        "___file": {
                                                                          "name": "___file",
                                                                          "global": false,
                                                                          "description": "This one should be exposed so that devtools can make use of it",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56197,
                                                                                56213
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "___name": {
                                                                          "name": "___name",
                                                                          "global": false,
                                                                          "description": "name inferred from filename",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56269,
                                                                                56285
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "beforeRouteEnter": {
                                                                          "name": "beforeRouteEnter",
                                                                          "global": false,
                                                                          "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuardWithThis<undefined>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                60091,
                                                                                60218
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuardWithThis<undefined>"
                                                                        },
                                                                        "beforeRouteUpdate": {
                                                                          "name": "beforeRouteUpdate",
                                                                          "global": false,
                                                                          "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuard",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                60665,
                                                                                60775
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuard"
                                                                        },
                                                                        "beforeRouteLeave": {
                                                                          "name": "beforeRouteLeave",
                                                                          "global": false,
                                                                          "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuard",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                61140,
                                                                                61248
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuard"
                                                                        },
                                                                        "head": {
                                                                          "name": "head",
                                                                          "global": false,
                                                                          "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(nuxtApp: NuxtApp) => UseHeadInput",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                                                                              "range": [
                                                                                1615,
                                                                                1652
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "(nuxtApp: NuxtApp) => UseHeadInput"
                                                                        }
                                                                      }
                                                                    },
                                                                    "1": {
                                                                      "kind": "event",
                                                                      "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed) => void; }, \"expose\">): any",
                                                                      "schema": []
                                                                    },
                                                                    "2": {
                                                                      "kind": "object",
                                                                      "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                                                                      "schema": {
                                                                        "___isFragment": {
                                                                          "name": "___isFragment",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6515,
                                                                                6536
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isTeleport": {
                                                                          "name": "___isTeleport",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6541,
                                                                                6562
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isSuspense": {
                                                                          "name": "___isSuspense",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6567,
                                                                                6588
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        }
                                                                      }
                                                                    },
                                                                    "3": {
                                                                      "kind": "object",
                                                                      "type": "DefineComponent",
                                                                      "schema": {
                                                                        "___isFragment": {
                                                                          "name": "___isFragment",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6515,
                                                                                6536
                                                                              ]
                                                                            },
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31053,
                                                                                31074
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isTeleport": {
                                                                          "name": "___isTeleport",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6541,
                                                                                6562
                                                                              ]
                                                                            },
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31079,
                                                                                31100
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "___isSuspense": {
                                                                          "name": "___isSuspense",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                6567,
                                                                                6588
                                                                              ]
                                                                            },
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31105,
                                                                                31126
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "never"
                                                                        },
                                                                        "setup": {
                                                                          "name": "setup",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: void, props: LooseRequired<Readonly<ExtractPropTypes<{}>> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30406,
                                                                                30632
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "event",
                                                                            "type": "(this: void, props: LooseRequired<Readonly<ExtractPropTypes<{}>> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",
                                                                            "schema": {}
                                                                          }
                                                                        },
                                                                        "name": {
                                                                          "name": "name",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30637,
                                                                                30651
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "template": {
                                                                          "name": "template",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | object",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30656,
                                                                                30683
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string | object"
                                                                        },
                                                                        "render": {
                                                                          "name": "render",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Function",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30688,
                                                                                30706
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Function"
                                                                        },
                                                                        "components": {
                                                                          "name": "components",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30711,
                                                                                30750
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                                                                        },
                                                                        "directives": {
                                                                          "name": "directives",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Directive<any, any>>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30755,
                                                                                30794
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Directive<any, any>>"
                                                                        },
                                                                        "inheritAttrs": {
                                                                          "name": "inheritAttrs",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "boolean",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30799,
                                                                                30822
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "boolean"
                                                                        },
                                                                        "emits": {
                                                                          "name": "emits",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ThisType<void> | (string[] & ThisType<void>)",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30827,
                                                                                30863
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "ThisType<void> | (string[] & ThisType<void>)",
                                                                            "schema": {
                                                                              "0": "ThisType<void>",
                                                                              "1": {
                                                                                "kind": "array",
                                                                                "type": "string[] & ThisType<void>",
                                                                                "schema": []
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "slots": {
                                                                          "name": "slots",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "{}",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30868,
                                                                                30878
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "{}"
                                                                        },
                                                                        "expose": {
                                                                          "name": "expose",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30883,
                                                                                30901
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string[]"
                                                                        },
                                                                        "serverPrefetch": {
                                                                          "name": "serverPrefetch",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void | Promise<any>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30906,
                                                                                30945
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void | Promise<any>"
                                                                        },
                                                                        "compilerOptions": {
                                                                          "name": "compilerOptions",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "RuntimeCompilerOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30950,
                                                                                30991
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "RuntimeCompilerOptions"
                                                                        },
                                                                        "call": {
                                                                          "name": "call",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: unknown, ...args: unknown[]) => never",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                30996,
                                                                                31048
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "(this: unknown, ...args: unknown[]) => never"
                                                                        },
                                                                        "___defaults": {
                                                                          "name": "___defaults",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "{}",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                31131,
                                                                                31153
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "{}"
                                                                        },
                                                                        "compatConfig": {
                                                                          "name": "compatConfig",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "CompatConfig",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35716,
                                                                                35744
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "CompatConfig"
                                                                        },
                                                                        "data": {
                                                                          "name": "data",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<Readonly<ExtractPropTypes<{}>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., {}>) => {}",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35773,
                                                                                35958
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "event",
                                                                            "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<Readonly<ExtractPropTypes<{}>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., {}>): {}",
                                                                            "schema": {}
                                                                          }
                                                                        },
                                                                        "computed": {
                                                                          "name": "computed",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComputedOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35963,
                                                                                35976
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComputedOptions"
                                                                        },
                                                                        "methods": {
                                                                          "name": "methods",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "MethodOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35981,
                                                                                35993
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "MethodOptions"
                                                                        },
                                                                        "watch": {
                                                                          "name": "watch",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentWatchOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                35998,
                                                                                36028
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComponentWatchOptions"
                                                                        },
                                                                        "provide": {
                                                                          "name": "provide",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentProvideOptions",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36033,
                                                                                36067
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComponentProvideOptions"
                                                                        },
                                                                        "inject": {
                                                                          "name": "inject",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "{} | string[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36072,
                                                                                36090
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "{} | string[]"
                                                                        },
                                                                        "filters": {
                                                                          "name": "filters",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "Record<string, Function>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36095,
                                                                                36130
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "Record<string, Function>"
                                                                        },
                                                                        "mixins": {
                                                                          "name": "mixins",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentOptionsMixin[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36135,
                                                                                36152
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "array",
                                                                            "type": "ComponentOptionsMixin[]",
                                                                            "schema": {
                                                                              "0": "ComponentOptionsMixin"
                                                                            }
                                                                          }
                                                                        },
                                                                        "extends": {
                                                                          "name": "extends",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ComponentOptionsMixin",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36157,
                                                                                36175
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ComponentOptionsMixin"
                                                                        },
                                                                        "beforeCreate": {
                                                                          "name": "beforeCreate",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36180,
                                                                                36202
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "created": {
                                                                          "name": "created",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36207,
                                                                                36224
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeMount": {
                                                                          "name": "beforeMount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36229,
                                                                                36250
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "mounted": {
                                                                          "name": "mounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36255,
                                                                                36272
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeUpdate": {
                                                                          "name": "beforeUpdate",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36277,
                                                                                36299
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "updated": {
                                                                          "name": "updated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36304,
                                                                                36321
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "activated": {
                                                                          "name": "activated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36326,
                                                                                36345
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "deactivated": {
                                                                          "name": "deactivated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36350,
                                                                                36371
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeDestroy": {
                                                                          "name": "beforeDestroy",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `beforeUnmount` instead"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36427,
                                                                                36450
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "beforeUnmount": {
                                                                          "name": "beforeUnmount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36455,
                                                                                36478
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "destroyed": {
                                                                          "name": "destroyed",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `unmounted` instead"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36530,
                                                                                36549
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "unmounted": {
                                                                          "name": "unmounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "() => void",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36554,
                                                                                36573
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "() => void"
                                                                        },
                                                                        "renderTracked": {
                                                                          "name": "renderTracked",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "DebuggerHook",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36578,
                                                                                36607
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "DebuggerHook"
                                                                        },
                                                                        "renderTriggered": {
                                                                          "name": "renderTriggered",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "DebuggerHook",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36612,
                                                                                36643
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "DebuggerHook"
                                                                        },
                                                                        "errorCaptured": {
                                                                          "name": "errorCaptured",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "ErrorCapturedHook<unknown>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36648,
                                                                                36682
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "ErrorCapturedHook<unknown>"
                                                                        },
                                                                        "delimiters": {
                                                                          "name": "delimiters",
                                                                          "global": false,
                                                                          "description": "runtime compile only",
                                                                          "tags": [
                                                                            {
                                                                              "name": "deprecated",
                                                                              "text": "use `compilerOptions.delimiters` instead."
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "[string, string]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                36792,
                                                                                36822
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "[string, string]"
                                                                        },
                                                                        "___differentiator": {
                                                                          "name": "___differentiator",
                                                                          "global": false,
                                                                          "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string | number",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                37132,
                                                                                37179
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "string | number",
                                                                            "schema": {
                                                                              "0": "string",
                                                                              "1": "number"
                                                                            }
                                                                          }
                                                                        },
                                                                        "___isBuiltIn": {
                                                                          "name": "___isBuiltIn",
                                                                          "global": false,
                                                                          "description": "Compat build only, for bailing out of certain compatibility behavior",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "boolean",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56084,
                                                                                56106
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "boolean"
                                                                        },
                                                                        "___file": {
                                                                          "name": "___file",
                                                                          "global": false,
                                                                          "description": "This one should be exposed so that devtools can make use of it",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56197,
                                                                                56213
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "___name": {
                                                                          "name": "___name",
                                                                          "global": false,
                                                                          "description": "name inferred from filename",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                56269,
                                                                                56285
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "beforeRouteEnter": {
                                                                          "name": "beforeRouteEnter",
                                                                          "global": false,
                                                                          "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuardWithThis<undefined>",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                60091,
                                                                                60218
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuardWithThis<undefined>"
                                                                        },
                                                                        "beforeRouteUpdate": {
                                                                          "name": "beforeRouteUpdate",
                                                                          "global": false,
                                                                          "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuard",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                60665,
                                                                                60775
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuard"
                                                                        },
                                                                        "beforeRouteLeave": {
                                                                          "name": "beforeRouteLeave",
                                                                          "global": false,
                                                                          "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                                                          "tags": [
                                                                            {
                                                                              "name": "param",
                                                                              "text": "to - RouteLocationRaw we are navigating to"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "from - RouteLocationRaw we are navigating from"
                                                                            },
                                                                            {
                                                                              "name": "param",
                                                                              "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                                                            }
                                                                          ],
                                                                          "required": false,
                                                                          "type": "NavigationGuard",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                              "range": [
                                                                                61140,
                                                                                61248
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "NavigationGuard"
                                                                        },
                                                                        "head": {
                                                                          "name": "head",
                                                                          "global": false,
                                                                          "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "(nuxtApp: NuxtApp) => UseHeadInput",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                                                                              "range": [
                                                                                1615,
                                                                                1652
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "(nuxtApp: NuxtApp) => UseHeadInput"
                                                                        },
                                                                        "key": {
                                                                          "name": "key",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "PropertyKey",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49725,
                                                                                49743
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "PropertyKey",
                                                                            "schema": {
                                                                              "0": "string",
                                                                              "1": "number",
                                                                              "2": "symbol"
                                                                            }
                                                                          }
                                                                        },
                                                                        "ref": {
                                                                          "name": "ref",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeRef",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49748,
                                                                                49763
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "VNodeRef",
                                                                            "schema": {
                                                                              "0": "string",
                                                                              "1": "Ref<any>",
                                                                              "2": {
                                                                                "kind": "event",
                                                                                "type": "(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, refs: Record<...>): void",
                                                                                "schema": []
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "ref_for": {
                                                                          "name": "ref_for",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "boolean",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49768,
                                                                                49786
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "boolean"
                                                                        },
                                                                        "ref_key": {
                                                                          "name": "ref_key",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "string",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49791,
                                                                                49808
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "string"
                                                                        },
                                                                        "onVnodeBeforeMount": {
                                                                          "name": "onVnodeBeforeMount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeMountHook | VNodeMountHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49813,
                                                                                49868
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "VNodeMountHook | VNodeMountHook[]",
                                                                            "schema": {
                                                                              "0": {
                                                                                "kind": "event",
                                                                                "type": "(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>): void",
                                                                                "schema": [
                                                                                  {
                                                                                    "kind": "object",
                                                                                    "type": "RendererNode",
                                                                                    "schema": {}
                                                                                  },
                                                                                  {
                                                                                    "kind": "object",
                                                                                    "type": "RendererElement",
                                                                                    "schema": {}
                                                                                  },
                                                                                  {
                                                                                    "kind": "object",
                                                                                    "type": "{ [key: string]: any; }",
                                                                                    "schema": {}
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "1": {
                                                                                "kind": "array",
                                                                                "type": "VNodeMountHook[]",
                                                                                "schema": [
                                                                                  "VNodeMountHook"
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "onVnodeMounted": {
                                                                          "name": "onVnodeMounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeMountHook | VNodeMountHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49873,
                                                                                49924
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "VNodeMountHook | VNodeMountHook[]"
                                                                        },
                                                                        "onVnodeBeforeUpdate": {
                                                                          "name": "onVnodeBeforeUpdate",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeUpdateHook | VNodeUpdateHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49929,
                                                                                49987
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": {
                                                                            "kind": "enum",
                                                                            "type": "VNodeUpdateHook | VNodeUpdateHook[]",
                                                                            "schema": {
                                                                              "0": {
                                                                                "kind": "event",
                                                                                "type": "(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>, oldVNode: VNode<RendererNode, RendererElement, { ...; }>): void",
                                                                                "schema": [
                                                                                  "RendererNode",
                                                                                  "RendererElement",
                                                                                  "{ [key: string]: any; }"
                                                                                ]
                                                                              },
                                                                              "1": {
                                                                                "kind": "array",
                                                                                "type": "VNodeUpdateHook[]",
                                                                                "schema": [
                                                                                  "VNodeUpdateHook"
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "onVnodeUpdated": {
                                                                          "name": "onVnodeUpdated",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeUpdateHook | VNodeUpdateHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                49992,
                                                                                50045
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "VNodeUpdateHook | VNodeUpdateHook[]"
                                                                        },
                                                                        "onVnodeBeforeUnmount": {
                                                                          "name": "onVnodeBeforeUnmount",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeMountHook | VNodeMountHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                50050,
                                                                                50107
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "VNodeMountHook | VNodeMountHook[]"
                                                                        },
                                                                        "onVnodeUnmounted": {
                                                                          "name": "onVnodeUnmounted",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "VNodeMountHook | VNodeMountHook[]",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                50112,
                                                                                50165
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "VNodeMountHook | VNodeMountHook[]"
                                                                        },
                                                                        "class": {
                                                                          "name": "class",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "unknown",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                55911,
                                                                                55927
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "unknown"
                                                                        },
                                                                        "style": {
                                                                          "name": "style",
                                                                          "global": false,
                                                                          "description": "",
                                                                          "tags": [],
                                                                          "required": false,
                                                                          "type": "unknown",
                                                                          "declarations": [
                                                                            {
                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                                              "range": [
                                                                                55932,
                                                                                55948
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "schema": "unknown"
                                                                        }
                                                                      }
                                                                    },
                                                                    "4": {
                                                                      "kind": "event",
                                                                      "type": "(): Promise<RouteComponent>"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45323,
                                                                      45342
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Array of nested routes.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45348,
                                                                      45365
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45371,
                                                                      45388
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "_RouteRecordProps<string | symbol>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45499,
                                                                      45525
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "_RouteRecordProps<string | symbol>",
                                                                  "schema": {
                                                                    "0": "false",
                                                                    "1": "true",
                                                                    "2": "Record<string, any>",
                                                                    "3": {
                                                                      "kind": "event",
                                                                      "type": "(to: RouteLocationNormalizedGeneric): Record<string, any>",
                                                                      "schema": []
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                "tags": [
                                                                  {
                                                                    "name": "example",
                                                                    "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38118,
                                                                      38131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "alias": {
                                                                "name": "alias",
                                                                "global": false,
                                                                "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38645,
                                                                      38671
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "string | string[]",
                                                                  "schema": {
                                                                    "0": "string",
                                                                    "1": "string[]"
                                                                  }
                                                                }
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "Name for the route record. Must be unique.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38746,
                                                                      38776
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38934,
                                                                      39022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                  "schema": {
                                                                    "0": "NavigationGuardWithThis<undefined>",
                                                                    "1": {
                                                                      "kind": "array",
                                                                      "type": "NavigationGuardWithThis<undefined>[]",
                                                                      "schema": [
                                                                        "NavigationGuardWithThis<undefined>"
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "Arbitrary data attached to the record.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39093,
                                                                      39110
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "object",
                                                                  "type": "RouteMeta",
                                                                  "schema": {
                                                                    "colorMode": {
                                                                      "name": "colorMode",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                                          "range": [
                                                                            616,
                                                                            635
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "validate": {
                                                                      "name": "validate",
                                                                      "global": false,
                                                                      "description": "Validate whether a given route can validly be rendered with this page.\n\nReturn true if it is valid, or false if not. If another match can't be found,\nthis will mean a 404. You can also directly return an object with\nstatusCode/statusMessage to respond immediately with an error (other matches\nwill not be checked).",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "(route: RouteLocationNormalizedGeneric) => boolean | Partial<NuxtError<unknown>> | Promise<boolean | Partial<NuxtError<unknown>>>",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            710,
                                                                            826
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "event",
                                                                        "type": "(route: RouteLocationNormalizedGeneric): boolean | Partial<NuxtError<unknown>> | Promise<boolean | Partial<NuxtError<unknown>>>",
                                                                        "schema": {}
                                                                      }
                                                                    },
                                                                    "redirect": {
                                                                      "name": "redirect",
                                                                      "global": false,
                                                                      "description": "Where to redirect if the route is directly matched. The redirection happens\nbefore any navigation guard and triggers a new navigation with the new\ntarget location.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | ((to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) | { ...; } | { ...; }",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1032,
                                                                            1069
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | ((to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) | { ...; } | { ...; }",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "(to: RouteLocationGeneric) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric",
                                                                          "2": "{ name?: RouteRecordNameGeneric; params?: RouteParamsRawGeneric; path?: unknown; query?: LocationQueryRaw; hash?: string; replace?: boolean; force?: boolean; state?: HistoryState; }",
                                                                          "3": "{ path: string; query?: LocationQueryRaw; hash?: string; replace?: boolean; force?: boolean; state?: HistoryState; }"
                                                                        }
                                                                      }
                                                                    },
                                                                    "alias": {
                                                                      "name": "alias",
                                                                      "global": false,
                                                                      "description": "Aliases for the record. Allows defining extra paths that will behave like a\ncopy of the record. Allows having paths shorthands like `/users/:id` and\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | string[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1328,
                                                                            1354
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string | string[]"
                                                                    },
                                                                    "pageTransition": {
                                                                      "name": "pageTransition",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "boolean | { name?: string; type?: AnimationTypes; css?: boolean; duration?: number | { enter: number; leave: number; }; enterFromClass?: string; enterActiveClass?: string; enterToClass?: string; ... 20 more ...; onAppearCancelled?: Hook<...>; }",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1359,
                                                                            1402
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "boolean | { name?: string; type?: AnimationTypes; css?: boolean; duration?: number | { enter: number; leave: number; }; enterFromClass?: string; enterActiveClass?: string; enterToClass?: string; ... 20 more ...; onAppearCancelled?: Hook<...>; }",
                                                                        "schema": {
                                                                          "0": "false",
                                                                          "1": "true",
                                                                          "2": "{ name?: string; type?: AnimationTypes; css?: boolean; duration?: number | { enter: number; leave: number; }; enterFromClass?: string; enterActiveClass?: string; enterToClass?: string; ... 20 more ...; onAppearCancelled?: Hook<...>; }"
                                                                        }
                                                                      }
                                                                    },
                                                                    "layoutTransition": {
                                                                      "name": "layoutTransition",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "boolean | { name?: string; type?: AnimationTypes; css?: boolean; duration?: number | { enter: number; leave: number; }; enterFromClass?: string; enterActiveClass?: string; enterToClass?: string; ... 20 more ...; onAppearCancelled?: Hook<...>; }",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1407,
                                                                            1452
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "boolean | { name?: string; type?: AnimationTypes; css?: boolean; duration?: number | { enter: number; leave: number; }; enterFromClass?: string; enterActiveClass?: string; enterToClass?: string; ... 20 more ...; onAppearCancelled?: Hook<...>; }"
                                                                    },
                                                                    "key": {
                                                                      "name": "key",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | false | ((route: RouteLocationNormalizedLoadedGeneric) => string)",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1457,
                                                                            1531
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | false | ((route: RouteLocationNormalizedLoadedGeneric) => string)",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "false",
                                                                          "2": {
                                                                            "kind": "event",
                                                                            "type": "(route: RouteLocationNormalizedLoadedGeneric): string",
                                                                            "schema": []
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "keepalive": {
                                                                      "name": "keepalive",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "boolean | { include?: MatchPattern; exclude?: MatchPattern; max?: string | number; }",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1536,
                                                                            1573
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "boolean | { include?: MatchPattern; exclude?: MatchPattern; max?: string | number; }",
                                                                        "schema": {
                                                                          "0": "false",
                                                                          "1": "true",
                                                                          "2": "{ include?: MatchPattern; exclude?: MatchPattern; max?: string | number; }"
                                                                        }
                                                                      }
                                                                    },
                                                                    "name": {
                                                                      "name": "name",
                                                                      "global": false,
                                                                      "description": "You may define a name for this page's route.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1634,
                                                                            1648
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "path": {
                                                                      "name": "path",
                                                                      "global": false,
                                                                      "description": "You may define a path matcher, if you have a more complex pattern than can be expressed with the file name.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1772,
                                                                            1786
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "scrollToTop": {
                                                                      "name": "scrollToTop",
                                                                      "global": false,
                                                                      "description": "Set to `false` to avoid scrolling to top on page navigations",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "boolean | ((to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric) => boolean)",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/pages/runtime/composables.d.ts",
                                                                          "range": [
                                                                            1863,
                                                                            1973
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "boolean | ((to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric) => boolean)",
                                                                        "schema": {
                                                                          "0": "false",
                                                                          "1": "true",
                                                                          "2": {
                                                                            "kind": "event",
                                                                            "type": "(to: RouteLocationNormalizedLoadedGeneric, from: RouteLocationNormalizedLoadedGeneric): boolean",
                                                                            "schema": []
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "layout": {
                                                                      "name": "layout",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "false | LayoutKey",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/.nuxt/types/layouts.d.ts",
                                                                          "range": [
                                                                            193,
                                                                            262
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "false | LayoutKey",
                                                                        "schema": {
                                                                          "0": "false",
                                                                          "1": "\"default\"",
                                                                          "2": "\"auth\""
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "end": {
                                                                "name": "end",
                                                                "global": false,
                                                                "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`true`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16460,
                                                                      16474
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "sensitive": {
                                                                "name": "sensitive",
                                                                "global": false,
                                                                "description": "Makes the RegExp case-sensitive.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16002,
                                                                      16022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "strict": {
                                                                "name": "strict",
                                                                "global": false,
                                                                "description": "Whether to disallow a trailing slash or not.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16137,
                                                                      16154
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "kind": "object",
                                                            "type": "RouteRecordSingleViewWithChildren",
                                                            "schema": {
                                                              "component": {
                                                                "name": "component",
                                                                "global": false,
                                                                "description": "Component to display when the URL matches this route.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RawRouteComponent",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45780,
                                                                      45829
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RawRouteComponent"
                                                              },
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45835,
                                                                      45854
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Array of nested routes.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordRaw[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45860,
                                                                      45887
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRaw[]"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "_RouteRecordProps<string | symbol>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      45998,
                                                                      46024
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "_RouteRecordProps<string | symbol>"
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                "tags": [
                                                                  {
                                                                    "name": "example",
                                                                    "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38118,
                                                                      38131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordRedirectOption",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38343,
                                                                      38380
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRedirectOption"
                                                              },
                                                              "alias": {
                                                                "name": "alias",
                                                                "global": false,
                                                                "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38645,
                                                                      38671
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | string[]"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "Name for the route record. Must be unique.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38746,
                                                                      38776
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38934,
                                                                      39022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "Arbitrary data attached to the record.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39093,
                                                                      39110
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteMeta"
                                                              },
                                                              "end": {
                                                                "name": "end",
                                                                "global": false,
                                                                "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`true`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16460,
                                                                      16474
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "sensitive": {
                                                                "name": "sensitive",
                                                                "global": false,
                                                                "description": "Makes the RegExp case-sensitive.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16002,
                                                                      16022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "strict": {
                                                                "name": "strict",
                                                                "global": false,
                                                                "description": "Whether to disallow a trailing slash or not.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16137,
                                                                      16154
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "kind": "object",
                                                            "type": "RouteRecordMultipleViews",
                                                            "schema": {
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "Components to display when the URL matches this route. Allow using named views.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, RawRouteComponent>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      40321,
                                                                      40367
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, RawRouteComponent>"
                                                              },
                                                              "component": {
                                                                "name": "component",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      40373,
                                                                      40391
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Array of nested routes.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      40397,
                                                                      40414
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      40420,
                                                                      40437
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "Allow passing down params as props to the component rendered by\r\n`router-view`. Should be an object with the same keys as `components` or a\r\nboolean to be applied to every component.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | Record<string, _RouteRecordProps<string | symbol>>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      40666,
                                                                      40718
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "boolean | Record<string, _RouteRecordProps<string | symbol>>",
                                                                  "schema": {
                                                                    "0": "false",
                                                                    "1": "true",
                                                                    "2": "Record<string, _RouteRecordProps<string | symbol>>"
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                "tags": [
                                                                  {
                                                                    "name": "example",
                                                                    "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38118,
                                                                      38131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "alias": {
                                                                "name": "alias",
                                                                "global": false,
                                                                "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38645,
                                                                      38671
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | string[]"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "Name for the route record. Must be unique.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38746,
                                                                      38776
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38934,
                                                                      39022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "Arbitrary data attached to the record.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39093,
                                                                      39110
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteMeta"
                                                              },
                                                              "end": {
                                                                "name": "end",
                                                                "global": false,
                                                                "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`true`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16460,
                                                                      16474
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "sensitive": {
                                                                "name": "sensitive",
                                                                "global": false,
                                                                "description": "Makes the RegExp case-sensitive.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16002,
                                                                      16022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "strict": {
                                                                "name": "strict",
                                                                "global": false,
                                                                "description": "Whether to disallow a trailing slash or not.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16137,
                                                                      16154
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "kind": "object",
                                                            "type": "RouteRecordMultipleViewsWithChildren",
                                                            "schema": {
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "Components to display when the URL matches this route. Allow using named views.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "Record<string, RawRouteComponent>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      41030,
                                                                      41096
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, RawRouteComponent>"
                                                              },
                                                              "component": {
                                                                "name": "component",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      41102,
                                                                      41120
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Array of nested routes.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordRaw[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      41126,
                                                                      41153
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRaw[]"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "Allow passing down params as props to the component rendered by\r\n`router-view`. Should be an object with the same keys as `components` or a\r\nboolean to be applied to every component.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | Record<string, _RouteRecordProps<string | symbol>>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      41382,
                                                                      41434
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean | Record<string, _RouteRecordProps<string | symbol>>"
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                "tags": [
                                                                  {
                                                                    "name": "example",
                                                                    "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38118,
                                                                      38131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordRedirectOption",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38343,
                                                                      38380
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRedirectOption"
                                                              },
                                                              "alias": {
                                                                "name": "alias",
                                                                "global": false,
                                                                "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38645,
                                                                      38671
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | string[]"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "Name for the route record. Must be unique.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38746,
                                                                      38776
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38934,
                                                                      39022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "Arbitrary data attached to the record.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39093,
                                                                      39110
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteMeta"
                                                              },
                                                              "end": {
                                                                "name": "end",
                                                                "global": false,
                                                                "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`true`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16460,
                                                                      16474
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "sensitive": {
                                                                "name": "sensitive",
                                                                "global": false,
                                                                "description": "Makes the RegExp case-sensitive.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16002,
                                                                      16022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "strict": {
                                                                "name": "strict",
                                                                "global": false,
                                                                "description": "Whether to disallow a trailing slash or not.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16137,
                                                                      16154
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "kind": "object",
                                                            "type": "RouteRecordRedirect",
                                                            "schema": {
                                                              "redirect": {
                                                                "name": "redirect",
                                                                "global": false,
                                                                "description": "Where to redirect if the route is directly matched. The redirection happens\r\nbefore any navigation guard and triggers a new navigation with the new\r\ntarget location.",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "RouteRecordRedirectOption",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      44794,
                                                                      44830
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRedirectOption"
                                                              },
                                                              "component": {
                                                                "name": "component",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      44836,
                                                                      44854
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "components": {
                                                                "name": "components",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      44860,
                                                                      44879
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "props": {
                                                                "name": "props",
                                                                "global": false,
                                                                "description": "Allow passing down params as props to the component rendered by `router-view`.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "never",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      44885,
                                                                      44899
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "never"
                                                              },
                                                              "path": {
                                                                "name": "path",
                                                                "global": false,
                                                                "description": "Path of the record. Should start with `/` unless the record is the child of\r\nanother record.",
                                                                "tags": [
                                                                  {
                                                                    "name": "example",
                                                                    "text": "`/users/:id` matches `/users/1` as well as `/users/posva`."
                                                                  }
                                                                ],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38118,
                                                                      38131
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              },
                                                              "alias": {
                                                                "name": "alias",
                                                                "global": false,
                                                                "description": "Aliases for the record. Allows defining extra paths that will behave like a\r\ncopy of the record. Allows having paths shorthands like `/users/:id` and\r\n`/u/:id`. All `alias` and `path` values must share the same params.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "string | string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38645,
                                                                      38671
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string | string[]"
                                                              },
                                                              "name": {
                                                                "name": "name",
                                                                "global": false,
                                                                "description": "Name for the route record. Must be unique.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordNameGeneric",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38746,
                                                                      38776
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordNameGeneric"
                                                              },
                                                              "beforeEnter": {
                                                                "name": "beforeEnter",
                                                                "global": false,
                                                                "description": "Before Enter guard specific to this record. Note `beforeEnter` has no\r\neffect if the record has a `redirect` property.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      38934,
                                                                      39022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                              },
                                                              "meta": {
                                                                "name": "meta",
                                                                "global": false,
                                                                "description": "Arbitrary data attached to the record.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteMeta",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39093,
                                                                      39110
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteMeta"
                                                              },
                                                              "children": {
                                                                "name": "children",
                                                                "global": false,
                                                                "description": "Array of nested routes.",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "RouteRecordRaw[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      39166,
                                                                      39194
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "RouteRecordRaw[]"
                                                              },
                                                              "end": {
                                                                "name": "end",
                                                                "global": false,
                                                                "description": "Should the RegExp match until the end by appending a `$` to it.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`true`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16460,
                                                                      16474
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "sensitive": {
                                                                "name": "sensitive",
                                                                "global": false,
                                                                "description": "Makes the RegExp case-sensitive.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16002,
                                                                      16022
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "strict": {
                                                                "name": "strict",
                                                                "global": false,
                                                                "description": "Whether to disallow a trailing slash or not.",
                                                                "tags": [
                                                                  {
                                                                    "name": "defaultValue",
                                                                    "text": "`false`"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                                    "range": [
                                                                      16137,
                                                                      16154
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                "meta": {
                                                  "name": "meta",
                                                  "global": false,
                                                  "description": "{@inheritDoc _RouteRecordBase.meta}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteMeta",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42748,
                                                        42794
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "RouteMeta"
                                                },
                                                "props": {
                                                  "name": "props",
                                                  "global": false,
                                                  "description": "{@inheritDoc RouteRecordMultipleViews.props}",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "Record<string, _RouteRecordProps<string | symbol>>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42871,
                                                        42912
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Record<string, _RouteRecordProps<string | symbol>>"
                                                },
                                                "beforeEnter": {
                                                  "name": "beforeEnter",
                                                  "global": false,
                                                  "description": "Registered beforeEnter guards",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        42974,
                                                        43019
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                },
                                                "leaveGuards": {
                                                  "name": "leaveGuards",
                                                  "global": false,
                                                  "description": "Registered leave guards",
                                                  "tags": [
                                                    {
                                                      "name": "internal"
                                                    }
                                                  ],
                                                  "required": true,
                                                  "type": "Set<NavigationGuard>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        43101,
                                                        43135
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Set<NavigationGuard>"
                                                },
                                                "updateGuards": {
                                                  "name": "updateGuards",
                                                  "global": false,
                                                  "description": "Registered update guards",
                                                  "tags": [
                                                    {
                                                      "name": "internal"
                                                    }
                                                  ],
                                                  "required": true,
                                                  "type": "Set<NavigationGuard>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        43218,
                                                        43253
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Set<NavigationGuard>"
                                                },
                                                "enterCallbacks": {
                                                  "name": "enterCallbacks",
                                                  "global": false,
                                                  "description": "Registered beforeRouteEnter callbacks passed to `next` or returned in guards",
                                                  "tags": [
                                                    {
                                                      "name": "internal"
                                                    }
                                                  ],
                                                  "required": true,
                                                  "type": "Record<string, NavigationGuardNextCallback[]>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        43388,
                                                        43450
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Record<string, NavigationGuardNextCallback[]>"
                                                },
                                                "instances": {
                                                  "name": "instances",
                                                  "global": false,
                                                  "description": "Mounted route component instances\r\nHaving the instances on the record mean beforeRouteUpdate and\r\nbeforeRouteLeave guards can only be invoked with the latest mounted app\r\ninstance if there are multiple application instances rendering the same\r\nview, basically duplicating the content on the page, which shouldn't happen\r\nin practice. It will work if multiple apps are rendering different named\r\nviews.",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "Record<string, ComponentPublicInstance>",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        43926,
                                                        43996
                                                      ]
                                                    }
                                                  ],
                                                  "schema": "Record<string, ComponentPublicInstance>"
                                                },
                                                "aliasOf": {
                                                  "name": "aliasOf",
                                                  "global": false,
                                                  "description": "Defines if this record is the alias of another one. This property is\r\n`undefined` if the record is the original one.",
                                                  "tags": [],
                                                  "required": true,
                                                  "type": "RouteRecordNormalized",
                                                  "declarations": [
                                                    {
                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                      "range": [
                                                        44152,
                                                        44195
                                                      ]
                                                    }
                                                  ],
                                                  "schema": {
                                                    "kind": "object",
                                                    "type": "RouteRecordNormalized",
                                                    "schema": {
                                                      "path": {
                                                        "name": "path",
                                                        "global": false,
                                                        "description": "{@inheritDoc _RouteRecordBase.path}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42194,
                                                              42225
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "redirect": {
                                                        "name": "redirect",
                                                        "global": false,
                                                        "description": "{@inheritDoc _RouteRecordBase.redirect}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "RouteRecordRedirectOption",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42297,
                                                              42348
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "RouteRecordRedirectOption"
                                                      },
                                                      "name": {
                                                        "name": "name",
                                                        "global": false,
                                                        "description": "{@inheritDoc _RouteRecordBase.name}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "RouteRecordNameGeneric",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42416,
                                                              42447
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "RouteRecordNameGeneric"
                                                      },
                                                      "components": {
                                                        "name": "components",
                                                        "global": false,
                                                        "description": "{@inheritDoc RouteRecordMultipleViews.components}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "Record<string, RawRouteComponent>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42529,
                                                              42599
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Record<string, RawRouteComponent>"
                                                      },
                                                      "children": {
                                                        "name": "children",
                                                        "global": false,
                                                        "description": "Nested route records.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "RouteRecordRaw[]",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42653,
                                                              42680
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "RouteRecordRaw[]"
                                                      },
                                                      "meta": {
                                                        "name": "meta",
                                                        "global": false,
                                                        "description": "{@inheritDoc _RouteRecordBase.meta}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "RouteMeta",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42748,
                                                              42794
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "RouteMeta"
                                                      },
                                                      "props": {
                                                        "name": "props",
                                                        "global": false,
                                                        "description": "{@inheritDoc RouteRecordMultipleViews.props}",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "Record<string, _RouteRecordProps<string | symbol>>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42871,
                                                              42912
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Record<string, _RouteRecordProps<string | symbol>>"
                                                      },
                                                      "beforeEnter": {
                                                        "name": "beforeEnter",
                                                        "global": false,
                                                        "description": "Registered beforeEnter guards",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              42974,
                                                              43019
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "NavigationGuardWithThis<undefined> | NavigationGuardWithThis<undefined>[]"
                                                      },
                                                      "leaveGuards": {
                                                        "name": "leaveGuards",
                                                        "global": false,
                                                        "description": "Registered leave guards",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "Set<NavigationGuard>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              43101,
                                                              43135
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Set<NavigationGuard>"
                                                      },
                                                      "updateGuards": {
                                                        "name": "updateGuards",
                                                        "global": false,
                                                        "description": "Registered update guards",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "Set<NavigationGuard>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              43218,
                                                              43253
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Set<NavigationGuard>"
                                                      },
                                                      "enterCallbacks": {
                                                        "name": "enterCallbacks",
                                                        "global": false,
                                                        "description": "Registered beforeRouteEnter callbacks passed to `next` or returned in guards",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "Record<string, NavigationGuardNextCallback[]>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              43388,
                                                              43450
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Record<string, NavigationGuardNextCallback[]>"
                                                      },
                                                      "instances": {
                                                        "name": "instances",
                                                        "global": false,
                                                        "description": "Mounted route component instances\r\nHaving the instances on the record mean beforeRouteUpdate and\r\nbeforeRouteLeave guards can only be invoked with the latest mounted app\r\ninstance if there are multiple application instances rendering the same\r\nview, basically duplicating the content on the page, which shouldn't happen\r\nin practice. It will work if multiple apps are rendering different named\r\nviews.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "Record<string, ComponentPublicInstance>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              43926,
                                                              43996
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Record<string, ComponentPublicInstance>"
                                                      },
                                                      "aliasOf": {
                                                        "name": "aliasOf",
                                                        "global": false,
                                                        "description": "Defines if this record is the alias of another one. This property is\r\n`undefined` if the record is the original one.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "RouteRecordNormalized",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                            "range": [
                                                              44152,
                                                              44195
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "RouteRecordNormalized"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "name": {
                                        "name": "name",
                                        "global": false,
                                        "description": "Name of the matched record",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouteRecordNameGeneric",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              23275,
                                              23304
                                            ]
                                          }
                                        ],
                                        "schema": "RouteRecordNameGeneric"
                                      },
                                      "params": {
                                        "name": "params",
                                        "global": false,
                                        "description": "Object of decoded params extracted from the `path`.",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouteParamsGeneric",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              23310,
                                              23337
                                            ]
                                          }
                                        ],
                                        "schema": "RouteParamsGeneric"
                                      },
                                      "fullPath": {
                                        "name": "fullPath",
                                        "global": false,
                                        "description": "The whole location including the `search` and `hash`. This string is\r\npercentage encoded.",
                                        "tags": [],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              21202,
                                              21219
                                            ]
                                          }
                                        ],
                                        "schema": "string"
                                      },
                                      "query": {
                                        "name": "query",
                                        "global": false,
                                        "description": "Object representation of the `search` property of the current location.",
                                        "tags": [],
                                        "required": true,
                                        "type": "LocationQuery",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              21323,
                                              21344
                                            ]
                                          }
                                        ],
                                        "schema": "LocationQuery"
                                      },
                                      "hash": {
                                        "name": "hash",
                                        "global": false,
                                        "description": "Hash of the current location. If present, starts with a `#`.",
                                        "tags": [],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              21437,
                                              21450
                                            ]
                                          }
                                        ],
                                        "schema": "string"
                                      },
                                      "redirectedFrom": {
                                        "name": "redirectedFrom",
                                        "global": false,
                                        "description": "Contains the location we were initially trying to access before ending up\r\non the current location.",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouteLocationGeneric",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              21589,
                                              21631
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "RouteLocationGeneric",
                                          "schema": {
                                            "matched": {
                                              "name": "matched",
                                              "global": false,
                                              "description": "Array of {@link RouteRecord} containing components as they were\r\npassed when adding records. It can also contain redirect records. This\r\ncan't be used directly. **This property is non-enumerable**.",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteRecordNormalized[]",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    22061,
                                                    22084
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "array",
                                                "type": "RouteRecordNormalized[]",
                                                "schema": {
                                                  "0": "RouteRecordNormalized"
                                                }
                                              }
                                            },
                                            "fullPath": {
                                              "name": "fullPath",
                                              "global": false,
                                              "description": "The whole location including the `search` and `hash`. This string is\r\npercentage encoded.",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    21202,
                                                    21219
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "query": {
                                              "name": "query",
                                              "global": false,
                                              "description": "Object representation of the `search` property of the current location.",
                                              "tags": [],
                                              "required": true,
                                              "type": "LocationQuery",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    21323,
                                                    21344
                                                  ]
                                                }
                                              ],
                                              "schema": "LocationQuery"
                                            },
                                            "hash": {
                                              "name": "hash",
                                              "global": false,
                                              "description": "Hash of the current location. If present, starts with a `#`.",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    21437,
                                                    21450
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "redirectedFrom": {
                                              "name": "redirectedFrom",
                                              "global": false,
                                              "description": "Contains the location we were initially trying to access before ending up\r\non the current location.",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteLocationGeneric",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    21589,
                                                    21631
                                                  ]
                                                }
                                              ],
                                              "schema": "RouteLocationGeneric"
                                            },
                                            "name": {
                                              "name": "name",
                                              "global": false,
                                              "description": "Name of the matched record",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteRecordNameGeneric",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    8062,
                                                    8110
                                                  ]
                                                }
                                              ],
                                              "schema": "RouteRecordNameGeneric"
                                            },
                                            "meta": {
                                              "name": "meta",
                                              "global": false,
                                              "description": "Merged `meta` properties from all the matched route records.",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteMeta",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    8407,
                                                    8423
                                                  ]
                                                }
                                              ],
                                              "schema": "RouteMeta"
                                            },
                                            "path": {
                                              "name": "path",
                                              "global": false,
                                              "description": "Percentage encoded pathname section of the URL.",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    8190,
                                                    8203
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "params": {
                                              "name": "params",
                                              "global": false,
                                              "description": "Object of decoded params extracted from the `path`.",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteParamsGeneric",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    8287,
                                                    8314
                                                  ]
                                                }
                                              ],
                                              "schema": "RouteParamsGeneric"
                                            }
                                          }
                                        }
                                      },
                                      "meta": {
                                        "name": "meta",
                                        "global": false,
                                        "description": "Merged `meta` properties from all the matched route records.",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouteMeta",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              8407,
                                              8423
                                            ]
                                          }
                                        ],
                                        "schema": "RouteMeta"
                                      },
                                      "path": {
                                        "name": "path",
                                        "global": false,
                                        "description": "Percentage encoded pathname section of the URL.",
                                        "tags": [],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              8190,
                                              8203
                                            ]
                                          }
                                        ],
                                        "schema": "string"
                                      }
                                    }
                                  }
                                },
                                "$router": {
                                  "name": "$router",
                                  "global": false,
                                  "description": "{@link Router} instance used by the application.",
                                  "tags": [],
                                  "required": true,
                                  "type": "Router",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                      "range": [
                                        61578,
                                        61646
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "object",
                                    "type": "Router",
                                    "schema": {
                                      "currentRoute": {
                                        "name": "currentRoute",
                                        "global": false,
                                        "description": "Current {@link RouteLocationNormalized}",
                                        "tags": [],
                                        "required": true,
                                        "type": "Ref<RouteLocationNormalizedLoadedGeneric>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              31330,
                                              31388
                                            ]
                                          }
                                        ],
                                        "schema": "Ref<RouteLocationNormalizedLoadedGeneric>"
                                      },
                                      "options": {
                                        "name": "options",
                                        "global": false,
                                        "description": "Original options object passed to create the Router",
                                        "tags": [],
                                        "required": true,
                                        "type": "RouterOptions",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              31472,
                                              31504
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "RouterOptions",
                                          "schema": {
                                            "history": {
                                              "name": "history",
                                              "global": false,
                                              "description": "History implementation used by the router. Most web applications should use\r\n`createWebHistory` but it requires the server to be properly configured.\r\nYou can also use a _hash_ based history with `createWebHashHistory` that\r\ndoes not require any configuration on the server but isn't handled at all\r\nby search engines and does poorly on SEO.",
                                              "tags": [
                                                {
                                                  "name": "example",
                                                  "text": "```js\r\ncreateRouter({\r\n  history: createWebHistory(),\r\n  // other options...\r\n})\r\n```"
                                                }
                                              ],
                                              "required": true,
                                              "type": "RouterHistory",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    52147,
                                                    52170
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "RouterHistory",
                                                "schema": {
                                                  "base": {
                                                    "name": "base",
                                                    "global": false,
                                                    "description": "Base path that is prepended to every url. This allows hosting an SPA at a\r\nsub-folder of a domain like `example.com/sub-folder` by having a `base` of\r\n`/sub-folder`",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          46423,
                                                          46445
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "location": {
                                                    "name": "location",
                                                    "global": false,
                                                    "description": "Current History location",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          46502,
                                                          46537
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "state": {
                                                    "name": "state",
                                                    "global": false,
                                                    "description": "Current History state",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "HistoryState",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          46591,
                                                          46620
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "HistoryState"
                                                  },
                                                  "push": {
                                                    "name": "push",
                                                    "global": false,
                                                    "description": "Navigates to a location. In the case of an HTML5 History implementation,\r\nthis will call `history.pushState` to effectively change the URL.",
                                                    "tags": [
                                                      {
                                                        "name": "param",
                                                        "text": "to - location to push"
                                                      },
                                                      {
                                                        "name": "param",
                                                        "text": "data - optional {@link HistoryState} to be associated with the\r\nnavigation entry"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "(to: string, data?: HistoryState) => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          46947,
                                                          47000
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(to: string, data?: HistoryState): void",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "replace": {
                                                    "name": "replace",
                                                    "global": false,
                                                    "description": "Same as {@link RouterHistory.push} but performs a `history.replaceState`\r\ninstead of `history.pushState`",
                                                    "tags": [
                                                      {
                                                        "name": "param",
                                                        "text": "to - location to set"
                                                      },
                                                      {
                                                        "name": "param",
                                                        "text": "data - optional {@link HistoryState} to be associated with the\r\nnavigation entry"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "(to: string, data?: HistoryState) => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          47291,
                                                          47347
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(to: string, data?: HistoryState): void",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "go": {
                                                    "name": "go",
                                                    "global": false,
                                                    "description": "Traverses history in a given direction.",
                                                    "tags": [
                                                      {
                                                        "name": "example",
                                                        "text": "```js\r\nmyHistory.go(-1) // equivalent to window.history.back()\r\nmyHistory.go(1) // equivalent to window.history.forward()\r\n```"
                                                      },
                                                      {
                                                        "name": "param",
                                                        "text": "delta - distance to travel. If delta is \\< 0, it will go back,\r\nif it's \\> 0, it will go forward by that amount of entries."
                                                      },
                                                      {
                                                        "name": "param",
                                                        "text": "triggerListeners - whether this should trigger listeners attached to\r\nthe history"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "(delta: number, triggerListeners?: boolean) => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          47858,
                                                          47910
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(delta: number, triggerListeners?: boolean): void",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "listen": {
                                                    "name": "listen",
                                                    "global": false,
                                                    "description": "Attach a listener to the History implementation that is triggered when the\r\nnavigation is triggered from outside (like the Browser back and forward\r\nbuttons) or when passing `true` to {@link RouterHistory.back } and\r\n{@link RouterHistory.forward }",
                                                    "tags": [
                                                      {
                                                        "name": "param",
                                                        "text": "callback - listener to attach"
                                                      },
                                                      {
                                                        "name": "returns",
                                                        "text": "a callback to remove the listener"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "(callback: NavigationCallback) => () => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          48313,
                                                          48362
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(callback: NavigationCallback): () => void",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "createHref": {
                                                    "name": "createHref",
                                                    "global": false,
                                                    "description": "Generates the corresponding href to be used in an anchor tag.",
                                                    "tags": [
                                                      {
                                                        "name": "param",
                                                        "text": "location - history location that should create an href"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "(location: string) => string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          48534,
                                                          48580
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(location: string): string",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "destroy": {
                                                    "name": "destroy",
                                                    "global": false,
                                                    "description": "Clears any event listener attached by the history implementation.",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "() => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                        "range": [
                                                          48678,
                                                          48694
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(): void"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "routes": {
                                              "name": "routes",
                                              "global": false,
                                              "description": "Initial list of routes that should be added to the router.",
                                              "tags": [],
                                              "required": true,
                                              "type": "readonly RouteRecordRaw[]",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    52261,
                                                    52296
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "array",
                                                "type": "readonly RouteRecordRaw[]",
                                                "schema": {
                                                  "0": "RouteRecordRaw"
                                                }
                                              }
                                            },
                                            "scrollBehavior": {
                                              "name": "scrollBehavior",
                                              "global": false,
                                              "description": "Function to control scrolling when navigating between pages. Can return a\r\nPromise to delay scrolling. Check {@link ScrollBehavior}.",
                                              "tags": [
                                                {
                                                  "name": "example",
                                                  "text": "```js\r\nfunction scrollBehavior(to, from, savedPosition) {\r\n  // `to` and `from` are both route locations\r\n  // `savedPosition` can be null if there isn't one\r\n}\r\n```"
                                                }
                                              ],
                                              "required": false,
                                              "type": "RouterScrollBehavior",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    52702,
                                                    52740
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, savedPosition: _ScrollPositionNormalized): Awaitable<...>",
                                                "schema": {}
                                              }
                                            },
                                            "parseQuery": {
                                              "name": "parseQuery",
                                              "global": false,
                                              "description": "Custom implementation to parse a query. See its counterpart,\r\n{@link RouterOptions.stringifyQuery}.",
                                              "tags": [
                                                {
                                                  "name": "example",
                                                  "text": "Let's say you want to use the [qs package](https://github.com/ljharb/qs)\r\nto parse queries, you can provide both `parseQuery` and `stringifyQuery`:\r\n```js\r\nimport qs from 'qs'\r\n\r\ncreateRouter({\r\n  // other options...\r\n  parseQuery: qs.parse,\r\n  stringifyQuery: qs.stringify,\r\n})\r\n```"
                                                }
                                              ],
                                              "required": false,
                                              "type": "(search: string) => LocationQuery",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    53265,
                                                    53296
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(search: string): LocationQuery",
                                                "schema": {}
                                              }
                                            },
                                            "stringifyQuery": {
                                              "name": "stringifyQuery",
                                              "global": false,
                                              "description": "Custom implementation to stringify a query object. Should not prepend a leading `?`.\r\n{@link RouterOptions.parseQueryparseQuery} counterpart to handle query parsing.",
                                              "tags": [],
                                              "required": false,
                                              "type": "(query: LocationQueryRaw) => string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    53504,
                                                    53543
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(query: LocationQueryRaw): string",
                                                "schema": {}
                                              }
                                            },
                                            "linkActiveClass": {
                                              "name": "linkActiveClass",
                                              "global": false,
                                              "description": "Default class applied to active {@link RouterLink}. If none is provided,\r\n`router-link-active` will be applied.",
                                              "tags": [],
                                              "required": false,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    53694,
                                                    53719
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "linkExactActiveClass": {
                                              "name": "linkExactActiveClass",
                                              "global": false,
                                              "description": "Default class applied to exact active {@link RouterLink}. If none is provided,\r\n`router-link-exact-active` will be applied.",
                                              "tags": [],
                                              "required": false,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    53882,
                                                    53912
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "end": {
                                              "name": "end",
                                              "global": false,
                                              "description": "Should the RegExp match until the end by appending a `$` to it.",
                                              "tags": [
                                                {
                                                  "name": "defaultValue",
                                                  "text": "`true`"
                                                }
                                              ],
                                              "required": false,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    16460,
                                                    16474
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "sensitive": {
                                              "name": "sensitive",
                                              "global": false,
                                              "description": "Makes the RegExp case-sensitive.",
                                              "tags": [
                                                {
                                                  "name": "defaultValue",
                                                  "text": "`false`"
                                                }
                                              ],
                                              "required": false,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    16002,
                                                    16022
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "strict": {
                                              "name": "strict",
                                              "global": false,
                                              "description": "Whether to disallow a trailing slash or not.",
                                              "tags": [
                                                {
                                                  "name": "defaultValue",
                                                  "text": "`false`"
                                                }
                                              ],
                                              "required": false,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                                  "range": [
                                                    16137,
                                                    16154
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            }
                                          }
                                        }
                                      },
                                      "listening": {
                                        "name": "listening",
                                        "global": false,
                                        "description": "Allows turning off the listening of history events. This is a low level api for micro-frontend.",
                                        "tags": [],
                                        "required": true,
                                        "type": "boolean",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              31632,
                                              31651
                                            ]
                                          }
                                        ],
                                        "schema": "boolean"
                                      },
                                      "addRoute": {
                                        "name": "addRoute",
                                        "global": false,
                                        "description": "Add a new {@link RouteRecordRawroute record} as the child of an existing route.\nAdd a new {@link RouteRecordRawroute record} to the router.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "parentName - Parent Route Record where `route` should be appended at"
                                          },
                                          {
                                            "name": "param",
                                            "text": "route - Route Record to add"
                                          },
                                          {
                                            "name": "param",
                                            "text": "route - Route Record to add"
                                          }
                                        ],
                                        "required": true,
                                        "type": "{ (parentName: NonNullable<RouteRecordNameGeneric>, route: RouteRecordRaw): () => void; (route: RouteRecordRaw): () => void; }",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              31901,
                                              31994
                                            ]
                                          },
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              32140,
                                              32184
                                            ]
                                          }
                                        ],
                                        "schema": "{ (parentName: NonNullable<RouteRecordNameGeneric>, route: RouteRecordRaw): () => void; (route: RouteRecordRaw): () => void; }"
                                      },
                                      "removeRoute": {
                                        "name": "removeRoute",
                                        "global": false,
                                        "description": "Remove an existing route by its name.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "name - Name of the route to remove"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(name: NonNullable<RouteRecordNameGeneric>) => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              32312,
                                              32373
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(name: NonNullable<RouteRecordNameGeneric>): void",
                                          "schema": {}
                                        }
                                      },
                                      "hasRoute": {
                                        "name": "hasRoute",
                                        "global": false,
                                        "description": "Checks if a route with a given name exists",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "name - Name of the route to check"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(name: NonNullable<RouteRecordNameGeneric>) => boolean",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              32505,
                                              32566
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(name: NonNullable<RouteRecordNameGeneric>): boolean",
                                          "schema": {}
                                        }
                                      },
                                      "getRoutes": {
                                        "name": "getRoutes",
                                        "global": false,
                                        "description": "Get a full list of all the {@link RouteRecordroute records}.",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => RouteRecordNormalized[]",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              32662,
                                              32689
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): RouteRecordNormalized[]"
                                        }
                                      },
                                      "clearRoutes": {
                                        "name": "clearRoutes",
                                        "global": false,
                                        "description": "Delete all routes from the router matcher.",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              32764,
                                              32784
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): void"
                                        }
                                      },
                                      "resolve": {
                                        "name": "resolve",
                                        "global": false,
                                        "description": "Returns the {@link RouteLocationnormalized version} of a\r\n{@link RouteLocationRawroute location}. Also includes an `href` property\r\nthat includes any existing `base`. By default, the `currentLocation` used is\r\n`router.currentRoute` and should only be overridden in advanced use cases.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "to - Raw route location to resolve"
                                          },
                                          {
                                            "name": "param",
                                            "text": "currentLocation - Optional current location to resolve against"
                                          }
                                        ],
                                        "required": true,
                                        "type": "{ <Name extends keyof RouteMap = string | symbol>(to: RouteLocationAsRelativeTyped<RouteMapGeneric, Name>, currentLocation?: RouteLocationNormalizedLoadedGeneric): RouteLocationResolvedGeneric; (to: string | ... 1 more ... | RouteLocationAsPathGeneric, currentLocation?: RouteLocationNormalizedLoadedGeneric): RouteLo...",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              33264,
                                              33446
                                            ]
                                          },
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              33452,
                                              33607
                                            ]
                                          }
                                        ],
                                        "schema": "{ <Name extends keyof RouteMap = string | symbol>(to: RouteLocationAsRelativeTyped<RouteMapGeneric, Name>, currentLocation?: RouteLocationNormalizedLoadedGeneric): RouteLocationResolvedGeneric; (to: string | ... 1 more ... | RouteLocationAsPathGeneric, currentLocation?: RouteLocationNormalizedLoadedGeneric): RouteLo..."
                                      },
                                      "push": {
                                        "name": "push",
                                        "global": false,
                                        "description": "Programmatically navigate to a new URL by pushing an entry in the history\r\nstack.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "to - Route location to navigate to"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) => Promise<void | NavigationFailure>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              33786,
                                              33860
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric): Promise<void | NavigationFailure>",
                                          "schema": {}
                                        }
                                      },
                                      "replace": {
                                        "name": "replace",
                                        "global": false,
                                        "description": "Programmatically navigate to a new URL by replacing the current entry in\r\nthe history stack.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "to - Route location to navigate to"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric) => Promise<void | NavigationFailure>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              34050,
                                              34127
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(to: string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric): Promise<void | NavigationFailure>",
                                          "schema": {}
                                        }
                                      },
                                      "back": {
                                        "name": "back",
                                        "global": false,
                                        "description": "Go back in history if possible by calling `history.back()`. Equivalent to\r\n`router.go(-1)`.",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              34258,
                                              34291
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): void"
                                        }
                                      },
                                      "forward": {
                                        "name": "forward",
                                        "global": false,
                                        "description": "Go forward in history if possible by calling `history.forward()`.\r\nEquivalent to `router.go(1)`.",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              34427,
                                              34463
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): void"
                                        }
                                      },
                                      "go": {
                                        "name": "go",
                                        "global": false,
                                        "description": "Allows you to move forward or backward through the history. Calls\r\n`history.go()`.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "delta - The position in the history to which you want to move,\r\nrelative to the current page"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(delta: number) => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              34708,
                                              34732
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(delta: number): void",
                                          "schema": {}
                                        }
                                      },
                                      "beforeEach": {
                                        "name": "beforeEach",
                                        "global": false,
                                        "description": "Add a navigation guard that executes before any navigation. Returns a\r\nfunction that removes the registered guard.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "guard - navigation guard to add"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(guard: NavigationGuardWithThis<undefined>) => () => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              34941,
                                              35007
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(guard: NavigationGuardWithThis<undefined>): () => void",
                                          "schema": {
                                            "0": "undefined"
                                          }
                                        }
                                      },
                                      "beforeResolve": {
                                        "name": "beforeResolve",
                                        "global": false,
                                        "description": "Add a navigation guard that executes before navigation is about to be\r\nresolved. At this state all component have been fetched and other\r\nnavigation guards have been successful. Returns a function that removes the\r\nregistered guard.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "guard - navigation guard to add"
                                          },
                                          {
                                            "name": "returns",
                                            "text": "a function that removes the registered guard"
                                          },
                                          {
                                            "name": "example",
                                            "text": "```js\r\nrouter.beforeResolve(to => {\r\n  if (to.meta.requiresAuth && !isAuthenticated) return false\r\n})\r\n```"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(guard: NavigationGuardWithThis<undefined>) => () => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              35586,
                                              35655
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(guard: NavigationGuardWithThis<undefined>): () => void",
                                          "schema": {
                                            "0": "undefined"
                                          }
                                        }
                                      },
                                      "afterEach": {
                                        "name": "afterEach",
                                        "global": false,
                                        "description": "Add a navigation hook that is executed after every navigation. Returns a\r\nfunction that removes the registered hook.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "guard - navigation hook to add"
                                          },
                                          {
                                            "name": "returns",
                                            "text": "a function that removes the registered hook"
                                          },
                                          {
                                            "name": "example",
                                            "text": "```js\r\nrouter.afterEach((to, from, failure) => {\r\n  if (isNavigationFailure(failure)) {\r\n    console.log('failed navigation', failure)\r\n  }\r\n})\r\n```"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(guard: NavigationHookAfter) => () => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              36150,
                                              36200
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(guard: NavigationHookAfter): () => void",
                                          "schema": {}
                                        }
                                      },
                                      "onError": {
                                        "name": "onError",
                                        "global": false,
                                        "description": "Adds an error handler that is called every time a non caught error happens\r\nduring navigation. This includes errors thrown synchronously and\r\nasynchronously, errors returned or passed to `next` in any navigation\r\nguard, and errors occurred when trying to resolve an async component that\r\nis required to render a route.",
                                        "tags": [
                                          {
                                            "name": "param",
                                            "text": "handler - error handler to register"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(handler: _ErrorListener) => () => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              36638,
                                              36683
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(handler: _ErrorListener): () => void",
                                          "schema": {}
                                        }
                                      },
                                      "isReady": {
                                        "name": "isReady",
                                        "global": false,
                                        "description": "Returns a Promise that resolves when the router has completed the initial\r\nnavigation, which means it has resolved all async enter hooks and async\r\ncomponents that are associated with the initial route. If the initial\r\nnavigation already happened, the promise resolves immediately.\r\n\r\nThis is useful in server-side rendering to ensure consistent output on both\r\nthe server and the client. Note that on server side, you need to manually\r\npush the initial location while on client side, the router automatically\r\npicks it up from the URL.",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => Promise<void>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              37307,
                                              37332
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): Promise<void>"
                                        }
                                      },
                                      "install": {
                                        "name": "install",
                                        "global": false,
                                        "description": "Called automatically by `app.use(router)`. Should not be called manually by\r\nthe user. This will trigger the initial navigation when on client side.",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          },
                                          {
                                            "name": "param",
                                            "text": "app - Application that uses the router"
                                          }
                                        ],
                                        "required": true,
                                        "type": "(app: App<any>) => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                            "range": [
                                              37600,
                                              37624
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(app: App<any>): void",
                                          "schema": {
                                            "0": "any"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "$nuxt": {
                                  "name": "$nuxt",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "NuxtApp",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                                      "range": [
                                        1298,
                                        1312
                                      ]
                                    }
                                  ],
                                  "schema": {
                                    "kind": "object",
                                    "type": "NuxtApp",
                                    "schema": {
                                      "_name": {
                                        "name": "_name",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4060,
                                              4074
                                            ]
                                          }
                                        ],
                                        "schema": "string"
                                      },
                                      "vueApp": {
                                        "name": "vueApp",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "App<Element>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4079,
                                              4100
                                            ]
                                          }
                                        ],
                                        "schema": "App<Element>"
                                      },
                                      "globalName": {
                                        "name": "globalName",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4105,
                                              4124
                                            ]
                                          }
                                        ],
                                        "schema": "string"
                                      },
                                      "versions": {
                                        "name": "versions",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "Record<string, string>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4129,
                                              4162
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, string>"
                                      },
                                      "hooks": {
                                        "name": "hooks",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4167,
                                              4201
                                            ]
                                          }
                                        ],
                                        "schema": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>"
                                      },
                                      "hook": {
                                        "name": "hook",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; }) => () => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4206,
                                              4238
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; }): () => void",
                                          "schema": {}
                                        }
                                      },
                                      "callHook": {
                                        "name": "callHook",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4243,
                                              4283
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>): Promise<...>",
                                          "schema": {}
                                        }
                                      },
                                      "runWithContext": {
                                        "name": "runWithContext",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4288,
                                              4384
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "<T extends () => any>(fn: T): ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                          "schema": {}
                                        }
                                      },
                                      "_id": {
                                        "name": "_id",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "number",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4438,
                                              4451
                                            ]
                                          }
                                        ],
                                        "schema": "number"
                                      },
                                      "_scope": {
                                        "name": "_scope",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "EffectScope",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4477,
                                              4497
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "EffectScope",
                                          "schema": {
                                            "detached": {
                                              "name": "detached",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                  "range": [
                                                    585,
                                                    603
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "active": {
                                              "name": "active",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                  "range": [
                                                    645,
                                                    667
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "run": {
                                              "name": "run",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "<T>(fn: () => T) => T",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                  "range": [
                                                    672,
                                                    707
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "<T>(fn: () => T): T",
                                                "schema": {}
                                              }
                                            },
                                            "stop": {
                                              "name": "stop",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(fromParent?: boolean) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/reactivity/dist/reactivity.d.ts",
                                                  "range": [
                                                    712,
                                                    745
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(fromParent?: boolean): void",
                                                "schema": {}
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_asyncDataPromises": {
                                        "name": "_asyncDataPromises",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "Record<string, Promise<any>>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4523,
                                              4584
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, Promise<any>>"
                                      },
                                      "_asyncData": {
                                        "name": "_asyncData",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; }>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4610,
                                              4876
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; }>"
                                      },
                                      "_loadingIndicator": {
                                        "name": "_loadingIndicator",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "LoadingIndicator",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4902,
                                              4939
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "LoadingIndicator",
                                          "schema": {
                                            "_cleanup": {
                                              "name": "_cleanup",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "() => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    617,
                                                    638
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(): void"
                                              }
                                            },
                                            "progress": {
                                              "name": "progress",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Ref<number>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    643,
                                                    665
                                                  ]
                                                }
                                              ],
                                              "schema": "Ref<number>"
                                            },
                                            "isLoading": {
                                              "name": "isLoading",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Ref<boolean>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    670,
                                                    694
                                                  ]
                                                }
                                              ],
                                              "schema": "Ref<boolean>"
                                            },
                                            "error": {
                                              "name": "error",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Ref<boolean>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    699,
                                                    719
                                                  ]
                                                }
                                              ],
                                              "schema": "Ref<boolean>"
                                            },
                                            "start": {
                                              "name": "start",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "() => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    724,
                                                    742
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(): void"
                                              }
                                            },
                                            "set": {
                                              "name": "set",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(value: number) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    747,
                                                    776
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(value: number): void",
                                                "schema": {}
                                              }
                                            },
                                            "finish": {
                                              "name": "finish",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(opts?: { force?: boolean; error?: boolean; }) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    781,
                                                    864
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(opts?: { force?: boolean; error?: boolean; }): void",
                                                "schema": {}
                                              }
                                            },
                                            "clear": {
                                              "name": "clear",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "() => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts",
                                                  "range": [
                                                    869,
                                                    887
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(): void"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_loadingIndicatorDeps": {
                                        "name": "_loadingIndicatorDeps",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "number",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              4965,
                                              4996
                                            ]
                                          }
                                        ],
                                        "schema": "number"
                                      },
                                      "_middleware": {
                                        "name": "_middleware",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5022,
                                              5126
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                          "schema": {
                                            "global": {
                                              "name": "global",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "RouteMiddleware[]",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    5045,
                                                    5071
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "array",
                                                "type": "RouteMiddleware[]",
                                                "schema": {
                                                  "0": {
                                                    "kind": "event",
                                                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedGeneric): _Awaitable<NavigationGuardReturn>",
                                                    "schema": []
                                                  }
                                                }
                                              }
                                            },
                                            "named": {
                                              "name": "named",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Record<string, RouteMiddleware>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    5080,
                                                    5119
                                                  ]
                                                }
                                              ],
                                              "schema": "Record<string, RouteMiddleware>"
                                            }
                                          }
                                        }
                                      },
                                      "_once": {
                                        "name": "_once",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "{ [key: string]: Promise<any>; }",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5152,
                                              5204
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "{ [key: string]: Promise<any>; }",
                                          "schema": {}
                                        }
                                      },
                                      "_observer": {
                                        "name": "_observer",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "{ observe: (element: Element, callback: () => void) => () => void; }",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5230,
                                              5323
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "{ observe: (element: Element, callback: () => void) => () => void; }",
                                          "schema": {
                                            "observe": {
                                              "name": "observe",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(element: Element, callback: () => void) => () => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    5252,
                                                    5316
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(element: Element, callback: () => void): () => void",
                                                "schema": {}
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_payloadCache": {
                                        "name": "_payloadCache",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "Record<string, Record<string, any> | Promise<Record<string, any>>>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5349,
                                              5439
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, Record<string, any> | Promise<Record<string, any>>>"
                                      },
                                      "_appConfig": {
                                        "name": "_appConfig",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "AppConfig",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5465,
                                              5487
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "AppConfig",
                                          "schema": {}
                                        }
                                      },
                                      "_route": {
                                        "name": "_route",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "RouteLocationNormalizedLoadedGeneric",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5513,
                                              5551
                                            ]
                                          }
                                        ],
                                        "schema": "RouteLocationNormalizedLoadedGeneric"
                                      },
                                      "_islandPromises": {
                                        "name": "_islandPromises",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "Record<string, Promise<any>>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5577,
                                              5624
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, Promise<any>>"
                                      },
                                      "_payloadRevivers": {
                                        "name": "_payloadRevivers",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": true,
                                        "type": "Record<string, (data: any) => any>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5650,
                                              5703
                                            ]
                                          }
                                        ],
                                        "schema": "Record<string, (data: any) => any>"
                                      },
                                      "_routeAnnouncer": {
                                        "name": "_routeAnnouncer",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "RouteAnnouncer",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5729,
                                              5762
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "RouteAnnouncer",
                                          "schema": {
                                            "message": {
                                              "name": "message",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Ref<string>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    224,
                                                    245
                                                  ]
                                                }
                                              ],
                                              "schema": "Ref<string>"
                                            },
                                            "politeness": {
                                              "name": "politeness",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Ref<Politeness>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    250,
                                                    278
                                                  ]
                                                }
                                              ],
                                              "schema": "Ref<Politeness>"
                                            },
                                            "set": {
                                              "name": "set",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(message: string, politeness: Politeness) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    283,
                                                    338
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(message: string, politeness: Politeness): void",
                                                "schema": {}
                                              }
                                            },
                                            "polite": {
                                              "name": "polite",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(message: string) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    343,
                                                    377
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(message: string): void",
                                                "schema": {}
                                              }
                                            },
                                            "assertive": {
                                              "name": "assertive",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "(message: string) => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    382,
                                                    419
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(message: string): void",
                                                "schema": {}
                                              }
                                            },
                                            "_cleanup": {
                                              "name": "_cleanup",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "() => void",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/composables/route-announcer.d.ts",
                                                  "range": [
                                                    424,
                                                    445
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(): void"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "_routeAnnouncerDeps": {
                                        "name": "_routeAnnouncerDeps",
                                        "global": false,
                                        "description": "",
                                        "tags": [
                                          {
                                            "name": "internal"
                                          }
                                        ],
                                        "required": false,
                                        "type": "number",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5788,
                                              5817
                                            ]
                                          }
                                        ],
                                        "schema": "number"
                                      },
                                      "$config": {
                                        "name": "$config",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "RuntimeConfig",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5822,
                                              5845
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "RuntimeConfig",
                                          "schema": {
                                            "app": {
                                              "name": "app",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "NitroRuntimeConfigApp",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/schema/dist/index.d.ts",
                                                  "range": [
                                                    85099,
                                                    85126
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "NitroRuntimeConfigApp",
                                                "schema": {
                                                  "baseURL": {
                                                    "name": "baseURL",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                        "range": [
                                                          23038,
                                                          23054
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "nitro": {
                                              "name": "nitro",
                                              "global": false,
                                              "description": "Only available on the server.",
                                              "tags": [],
                                              "required": false,
                                              "type": "{ envPrefix?: string; envExpansion?: boolean; routeRules?: { [path: string]: NitroRouteConfig; }; }",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/schema/dist/index.d.ts",
                                                  "range": [
                                                    85172,
                                                    85208
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "{ envPrefix?: string; envExpansion?: boolean; routeRules?: { [path: string]: NitroRouteConfig; }; }",
                                                "schema": {
                                                  "envPrefix": {
                                                    "name": "envPrefix",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                        "range": [
                                                          23165,
                                                          23184
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "envExpansion": {
                                                    "name": "envExpansion",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "boolean",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                        "range": [
                                                          23193,
                                                          23216
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "boolean"
                                                  },
                                                  "routeRules": {
                                                    "name": "routeRules",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "{ [path: string]: NitroRouteConfig; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nitropack/dist/shared/nitro.18796496.d.ts",
                                                        "range": [
                                                          23225,
                                                          23296
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "object",
                                                      "type": "{ [path: string]: NitroRouteConfig; }",
                                                      "schema": {}
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "public": {
                                              "name": "public",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "PublicRuntimeConfig",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/schema/dist/index.d.ts",
                                                  "range": [
                                                    85213,
                                                    85241
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "PublicRuntimeConfig",
                                                "schema": {
                                                  "content": {
                                                    "name": "content",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "ModulePublicRuntimeConfig",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                        "range": [
                                                          29754,
                                                          29789
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "object",
                                                      "type": "ModulePublicRuntimeConfig",
                                                      "schema": {
                                                        "experimental": {
                                                          "name": "experimental",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "{ stripQueryParameters: boolean; clientDB: boolean; advanceQuery: boolean; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                28757,
                                                                28876
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "object",
                                                            "type": "{ stripQueryParameters: boolean; clientDB: boolean; advanceQuery: boolean; }",
                                                            "schema": {
                                                              "stripQueryParameters": {
                                                                "name": "stripQueryParameters",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      28781,
                                                                      28811
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "clientDB": {
                                                                "name": "clientDB",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      28820,
                                                                      28838
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "advanceQuery": {
                                                                "name": "advanceQuery",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      28847,
                                                                      28869
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "api": {
                                                          "name": "api",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "{ baseURL: string; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                28881,
                                                                28919
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "object",
                                                            "type": "{ baseURL: string; }",
                                                            "schema": {
                                                              "baseURL": {
                                                                "name": "baseURL",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "string",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      28896,
                                                                      28912
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "host": {
                                                          "name": "host",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "string",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                28924,
                                                                28949
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string"
                                                        },
                                                        "trailingSlash": {
                                                          "name": "trailingSlash",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "boolean",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                28954,
                                                                28977
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "boolean"
                                                        },
                                                        "integrity": {
                                                          "name": "integrity",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "number",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                28982,
                                                                29012
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "number"
                                                        },
                                                        "respectPathCase": {
                                                          "name": "respectPathCase",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "boolean",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29017,
                                                                29042
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "boolean"
                                                        },
                                                        "defaultLocale": {
                                                          "name": "defaultLocale",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "string",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29047,
                                                                29093
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string"
                                                        },
                                                        "locales": {
                                                          "name": "locales",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "string[]",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29098,
                                                                29132
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string[]"
                                                        },
                                                        "tags": {
                                                          "name": "tags",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Record<string, string>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29137,
                                                                29166
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Record<string, string>"
                                                        },
                                                        "base": {
                                                          "name": "base",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "string",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29171,
                                                                29184
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string"
                                                        },
                                                        "wsUrl": {
                                                          "name": "wsUrl",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "string",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29189,
                                                                29204
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string"
                                                        },
                                                        "highlight": {
                                                          "name": "highlight",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "false | { theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; }; preload?: (BundledLanguage | LanguageRegistration)[]; langs?: (BundledLanguage | LanguageRegistration)[]; themes?: (BundledTheme | ThemeRegistrationAny)[]; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29209,
                                                                29247
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "enum",
                                                            "type": "false | { theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; }; preload?: (BundledLanguage | LanguageRegistration)[]; langs?: (BundledLanguage | LanguageRegistration)[]; themes?: (BundledTheme | ThemeRegistrationAny)[]; }",
                                                            "schema": {
                                                              "0": "false",
                                                              "1": {
                                                                "kind": "object",
                                                                "type": "{ theme?: BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; }; preload?: (BundledLanguage | LanguageRegistration)[]; langs?: (BundledLanguage | LanguageRegistration)[]; themes?: (BundledTheme | ThemeRegistrationAny)[]; }",
                                                                "schema": {
                                                                  "theme": {
                                                                    "name": "theme",
                                                                    "global": false,
                                                                    "description": "Default theme that will be used for highlighting code blocks.",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; }",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          15234,
                                                                          15347
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "enum",
                                                                      "type": "BundledTheme | { [theme: string]: BundledTheme; default: BundledTheme; }",
                                                                      "schema": {
                                                                        "0": "\"andromeeda\"",
                                                                        "1": "\"aurora-x\"",
                                                                        "2": "\"ayu-dark\"",
                                                                        "3": "\"catppuccin-frappe\"",
                                                                        "4": "\"catppuccin-latte\"",
                                                                        "5": "\"catppuccin-macchiato\"",
                                                                        "6": "\"catppuccin-mocha\"",
                                                                        "7": "\"dark-plus\"",
                                                                        "8": "\"dracula\"",
                                                                        "9": "\"dracula-soft\"",
                                                                        "10": "\"github-dark\"",
                                                                        "11": "\"github-dark-default\"",
                                                                        "12": "\"github-dark-dimmed\"",
                                                                        "13": "\"github-light\"",
                                                                        "14": "\"github-light-default\"",
                                                                        "15": "\"houston\"",
                                                                        "16": "\"laserwave\"",
                                                                        "17": "\"light-plus\"",
                                                                        "18": "\"material-theme\"",
                                                                        "19": "\"material-theme-darker\"",
                                                                        "20": "\"material-theme-lighter\"",
                                                                        "21": "\"material-theme-ocean\"",
                                                                        "22": "\"material-theme-palenight\"",
                                                                        "23": "\"min-dark\"",
                                                                        "24": "\"min-light\"",
                                                                        "25": "\"monokai\"",
                                                                        "26": "\"night-owl\"",
                                                                        "27": "\"nord\"",
                                                                        "28": "\"one-dark-pro\"",
                                                                        "29": "\"one-light\"",
                                                                        "30": "\"poimandres\"",
                                                                        "31": "\"red\"",
                                                                        "32": "\"rose-pine\"",
                                                                        "33": "\"rose-pine-dawn\"",
                                                                        "34": "\"rose-pine-moon\"",
                                                                        "35": "\"slack-dark\"",
                                                                        "36": "\"slack-ochin\"",
                                                                        "37": "\"snazzy-light\"",
                                                                        "38": "\"solarized-dark\"",
                                                                        "39": "\"solarized-light\"",
                                                                        "40": "\"synthwave-84\"",
                                                                        "41": "\"tokyo-night\"",
                                                                        "42": "\"vesper\"",
                                                                        "43": "\"vitesse-black\"",
                                                                        "44": "\"vitesse-dark\"",
                                                                        "45": "\"vitesse-light\"",
                                                                        "46": {
                                                                          "kind": "object",
                                                                          "type": "{ [theme: string]: BundledTheme; default: BundledTheme; }",
                                                                          "schema": {
                                                                            "default": {
                                                                              "name": "default",
                                                                              "global": false,
                                                                              "description": "",
                                                                              "tags": [],
                                                                              "required": true,
                                                                              "type": "BundledTheme",
                                                                              "declarations": [
                                                                                {
                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                                  "range": [
                                                                                    15271,
                                                                                    15293
                                                                                  ]
                                                                                }
                                                                              ],
                                                                              "schema": {
                                                                                "kind": "enum",
                                                                                "type": "BundledTheme",
                                                                                "schema": {
                                                                                  "0": "\"andromeeda\"",
                                                                                  "1": "\"aurora-x\"",
                                                                                  "2": "\"ayu-dark\"",
                                                                                  "3": "\"catppuccin-frappe\"",
                                                                                  "4": "\"catppuccin-latte\"",
                                                                                  "5": "\"catppuccin-macchiato\"",
                                                                                  "6": "\"catppuccin-mocha\"",
                                                                                  "7": "\"dark-plus\"",
                                                                                  "8": "\"dracula\"",
                                                                                  "9": "\"dracula-soft\"",
                                                                                  "10": "\"github-dark\"",
                                                                                  "11": "\"github-dark-default\"",
                                                                                  "12": "\"github-dark-dimmed\"",
                                                                                  "13": "\"github-light\"",
                                                                                  "14": "\"github-light-default\"",
                                                                                  "15": "\"houston\"",
                                                                                  "16": "\"laserwave\"",
                                                                                  "17": "\"light-plus\"",
                                                                                  "18": "\"material-theme\"",
                                                                                  "19": "\"material-theme-darker\"",
                                                                                  "20": "\"material-theme-lighter\"",
                                                                                  "21": "\"material-theme-ocean\"",
                                                                                  "22": "\"material-theme-palenight\"",
                                                                                  "23": "\"min-dark\"",
                                                                                  "24": "\"min-light\"",
                                                                                  "25": "\"monokai\"",
                                                                                  "26": "\"night-owl\"",
                                                                                  "27": "\"nord\"",
                                                                                  "28": "\"one-dark-pro\"",
                                                                                  "29": "\"one-light\"",
                                                                                  "30": "\"poimandres\"",
                                                                                  "31": "\"red\"",
                                                                                  "32": "\"rose-pine\"",
                                                                                  "33": "\"rose-pine-dawn\"",
                                                                                  "34": "\"rose-pine-moon\"",
                                                                                  "35": "\"slack-dark\"",
                                                                                  "36": "\"slack-ochin\"",
                                                                                  "37": "\"snazzy-light\"",
                                                                                  "38": "\"solarized-dark\"",
                                                                                  "39": "\"solarized-light\"",
                                                                                  "40": "\"synthwave-84\"",
                                                                                  "41": "\"tokyo-night\"",
                                                                                  "42": "\"vesper\"",
                                                                                  "43": "\"vitesse-black\"",
                                                                                  "44": "\"vitesse-dark\"",
                                                                                  "45": "\"vitesse-light\""
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "preload": {
                                                                    "name": "preload",
                                                                    "global": false,
                                                                    "description": "Preloaded languages that will be available for highlighting code blocks.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "deprecated",
                                                                        "text": "Use `langs` instead"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "(BundledLanguage | LanguageRegistration)[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          15518,
                                                                          15571
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "array",
                                                                      "type": "(BundledLanguage | LanguageRegistration)[]",
                                                                      "schema": {
                                                                        "0": {
                                                                          "kind": "enum",
                                                                          "type": "BundledLanguage | LanguageRegistration",
                                                                          "schema": [
                                                                            "\"vue\"",
                                                                            "\"markdown\"",
                                                                            "\"yaml\"",
                                                                            "\"json\"",
                                                                            "\"csv\"",
                                                                            "\"md\"",
                                                                            "\"yml\"",
                                                                            "\"json5\"",
                                                                            "\"css\"",
                                                                            "\"go\"",
                                                                            "\"abap\"",
                                                                            "\"actionscript-3\"",
                                                                            "\"ada\"",
                                                                            "\"adoc\"",
                                                                            "\"angular-html\"",
                                                                            "\"angular-ts\"",
                                                                            "\"apache\"",
                                                                            "\"apex\"",
                                                                            "\"apl\"",
                                                                            "\"applescript\"",
                                                                            "\"ara\"",
                                                                            "\"asciidoc\"",
                                                                            "\"asm\"",
                                                                            "\"astro\"",
                                                                            "\"awk\"",
                                                                            "\"ballerina\"",
                                                                            "\"bash\"",
                                                                            "\"bat\"",
                                                                            "\"batch\"",
                                                                            "\"be\"",
                                                                            "\"beancount\"",
                                                                            "\"berry\"",
                                                                            "\"bibtex\"",
                                                                            "\"bicep\"",
                                                                            "\"blade\"",
                                                                            "\"c\"",
                                                                            "\"c#\"",
                                                                            "\"c++\"",
                                                                            "\"cadence\"",
                                                                            "\"cdc\"",
                                                                            "\"clarity\"",
                                                                            "\"clj\"",
                                                                            "\"clojure\"",
                                                                            "\"closure-templates\"",
                                                                            "\"cmake\"",
                                                                            "\"cmd\"",
                                                                            "\"cobol\"",
                                                                            "\"codeowners\"",
                                                                            "\"codeql\"",
                                                                            "\"coffee\"",
                                                                            "\"coffeescript\"",
                                                                            "\"common-lisp\"",
                                                                            "\"console\"",
                                                                            "\"cpp\"",
                                                                            "\"cql\"",
                                                                            "\"crystal\"",
                                                                            "\"cs\"",
                                                                            "\"csharp\"",
                                                                            "\"cue\"",
                                                                            "\"cypher\"",
                                                                            "\"d\"",
                                                                            "\"dart\"",
                                                                            "\"dax\"",
                                                                            "\"desktop\"",
                                                                            "\"diff\"",
                                                                            "\"docker\"",
                                                                            "\"dockerfile\"",
                                                                            "\"dream-maker\"",
                                                                            "\"edge\"",
                                                                            "\"elisp\"",
                                                                            "\"elixir\"",
                                                                            "\"elm\"",
                                                                            "\"emacs-lisp\"",
                                                                            "\"erb\"",
                                                                            "\"erl\"",
                                                                            "\"erlang\"",
                                                                            "\"f\"",
                                                                            "\"f#\"",
                                                                            "\"f03\"",
                                                                            "\"f08\"",
                                                                            "\"f18\"",
                                                                            "\"f77\"",
                                                                            "\"f90\"",
                                                                            "\"f95\"",
                                                                            "\"fennel\"",
                                                                            "\"fish\"",
                                                                            "\"fluent\"",
                                                                            "\"for\"",
                                                                            "\"fortran-fixed-form\"",
                                                                            "\"fortran-free-form\"",
                                                                            "\"fs\"",
                                                                            "\"fsharp\"",
                                                                            "\"fsl\"",
                                                                            "\"ftl\"",
                                                                            "\"gdresource\"",
                                                                            "\"gdscript\"",
                                                                            "\"gdshader\"",
                                                                            "\"genie\"",
                                                                            "\"gherkin\"",
                                                                            "\"git-commit\"",
                                                                            "\"git-rebase\"",
                                                                            "\"gjs\"",
                                                                            "\"gleam\"",
                                                                            "\"glimmer-js\"",
                                                                            "\"glimmer-ts\"",
                                                                            "\"glsl\"",
                                                                            "\"gnuplot\"",
                                                                            "\"gql\"",
                                                                            "\"graphql\"",
                                                                            "\"groovy\"",
                                                                            "\"gts\"",
                                                                            "\"hack\"",
                                                                            "\"haml\"",
                                                                            "\"handlebars\"",
                                                                            "\"haskell\"",
                                                                            "\"haxe\"",
                                                                            "\"hbs\"",
                                                                            "\"hcl\"",
                                                                            "\"hjson\"",
                                                                            "\"hlsl\"",
                                                                            "\"hs\"",
                                                                            "\"html\"",
                                                                            "\"html-derivative\"",
                                                                            "\"http\"",
                                                                            "\"hxml\"",
                                                                            "\"hy\"",
                                                                            "\"imba\"",
                                                                            "\"ini\"",
                                                                            "\"jade\"",
                                                                            "\"java\"",
                                                                            "\"javascript\"",
                                                                            "\"jinja\"",
                                                                            "\"jison\"",
                                                                            "\"jl\"",
                                                                            "\"js\"",
                                                                            "\"jsonc\"",
                                                                            "\"jsonl\"",
                                                                            "\"jsonnet\"",
                                                                            "\"jssm\"",
                                                                            "\"jsx\"",
                                                                            "\"julia\"",
                                                                            "\"kotlin\"",
                                                                            "\"kql\"",
                                                                            "\"kt\"",
                                                                            "\"kts\"",
                                                                            "\"kusto\"",
                                                                            "\"latex\"",
                                                                            "\"less\"",
                                                                            "\"liquid\"",
                                                                            "\"lisp\"",
                                                                            "\"log\"",
                                                                            "\"logo\"",
                                                                            "\"lua\"",
                                                                            "\"luau\"",
                                                                            "\"make\"",
                                                                            "\"makefile\"",
                                                                            "\"marko\"",
                                                                            "\"matlab\"",
                                                                            "\"mdc\"",
                                                                            "\"mdx\"",
                                                                            "\"mediawiki\"",
                                                                            "\"mermaid\"",
                                                                            "\"mojo\"",
                                                                            "\"move\"",
                                                                            "\"nar\"",
                                                                            "\"narrat\"",
                                                                            "\"nextflow\"",
                                                                            "\"nf\"",
                                                                            "\"nginx\"",
                                                                            "\"nim\"",
                                                                            "\"nix\"",
                                                                            "\"nu\"",
                                                                            "\"nushell\"",
                                                                            "\"objc\"",
                                                                            "\"objective-c\"",
                                                                            "\"objective-cpp\"",
                                                                            "\"ocaml\"",
                                                                            "\"pascal\"",
                                                                            "\"perl\"",
                                                                            "\"perl6\"",
                                                                            "\"php\"",
                                                                            "\"plsql\"",
                                                                            "\"po\"",
                                                                            "\"postcss\"",
                                                                            "\"pot\"",
                                                                            "\"potx\"",
                                                                            "\"powerquery\"",
                                                                            "\"powershell\"",
                                                                            "\"prisma\"",
                                                                            "\"prolog\"",
                                                                            "\"properties\"",
                                                                            "\"proto\"",
                                                                            "\"ps\"",
                                                                            "\"ps1\"",
                                                                            "\"pug\"",
                                                                            "\"puppet\"",
                                                                            "\"purescript\"",
                                                                            "\"py\"",
                                                                            "\"python\"",
                                                                            "\"ql\"",
                                                                            "\"qml\"",
                                                                            "\"qmldir\"",
                                                                            "\"qss\"",
                                                                            "\"r\"",
                                                                            "\"racket\"",
                                                                            "\"raku\"",
                                                                            "\"razor\"",
                                                                            "\"rb\"",
                                                                            "\"reg\"",
                                                                            "\"regex\"",
                                                                            "\"regexp\"",
                                                                            "\"rel\"",
                                                                            "\"riscv\"",
                                                                            "\"rs\"",
                                                                            "\"rst\"",
                                                                            "\"ruby\"",
                                                                            "\"rust\"",
                                                                            "\"sas\"",
                                                                            "\"sass\"",
                                                                            "\"scala\"",
                                                                            "\"scheme\"",
                                                                            "\"scss\"",
                                                                            "\"sh\"",
                                                                            "\"shader\"",
                                                                            "\"shaderlab\"",
                                                                            "\"shell\"",
                                                                            "\"shellscript\"",
                                                                            "\"shellsession\"",
                                                                            "\"smalltalk\"",
                                                                            "\"solidity\"",
                                                                            "\"soy\"",
                                                                            "\"sparql\"",
                                                                            "\"spl\"",
                                                                            "\"splunk\"",
                                                                            "\"sql\"",
                                                                            "\"ssh-config\"",
                                                                            "\"stata\"",
                                                                            "\"styl\"",
                                                                            "\"stylus\"",
                                                                            "\"svelte\"",
                                                                            "\"swift\"",
                                                                            "\"system-verilog\"",
                                                                            "\"systemd\"",
                                                                            "\"tasl\"",
                                                                            "\"tcl\"",
                                                                            "\"templ\"",
                                                                            "\"terraform\"",
                                                                            "\"tex\"",
                                                                            "\"tf\"",
                                                                            "\"tfvars\"",
                                                                            "\"toml\"",
                                                                            "\"ts\"",
                                                                            "\"tsp\"",
                                                                            "\"tsv\"",
                                                                            "\"tsx\"",
                                                                            "\"turtle\"",
                                                                            "\"twig\"",
                                                                            "\"typ\"",
                                                                            "\"typescript\"",
                                                                            "\"typespec\"",
                                                                            "\"typst\"",
                                                                            "\"v\"",
                                                                            "\"vala\"",
                                                                            "\"vb\"",
                                                                            "\"verilog\"",
                                                                            "\"vhdl\"",
                                                                            "\"vim\"",
                                                                            "\"viml\"",
                                                                            "\"vimscript\"",
                                                                            "\"vue-html\"",
                                                                            "\"vy\"",
                                                                            "\"vyper\"",
                                                                            "\"wasm\"",
                                                                            "\"wenyan\"",
                                                                            "\"wgsl\"",
                                                                            "\"wiki\"",
                                                                            "\"wikitext\"",
                                                                            "\"wl\"",
                                                                            "\"wolfram\"",
                                                                            "\"xml\"",
                                                                            "\"xsl\"",
                                                                            "\"zenscript\"",
                                                                            "\"zig\"",
                                                                            "\"zsh\"",
                                                                            "\"文言\"",
                                                                            {
                                                                              "kind": "object",
                                                                              "type": "LanguageRegistration",
                                                                              "schema": {
                                                                                "name": {
                                                                                  "name": "name",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        12663,
                                                                                        12676
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "scopeName": {
                                                                                  "name": "scopeName",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        12681,
                                                                                        12699
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "displayName": {
                                                                                  "name": "displayName",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        12704,
                                                                                        12725
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "aliases": {
                                                                                  "name": "aliases",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        12730,
                                                                                        12749
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "embeddedLangs": {
                                                                                  "name": "embeddedLangs",
                                                                                  "global": false,
                                                                                  "description": "A list of languages the current language embeds.\nIf manually specifying languages to load, make sure to load the embedded\nlanguages for each parent language.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        12949,
                                                                                        12974
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "embeddedLangsLazy": {
                                                                                  "name": "embeddedLangsLazy",
                                                                                  "global": false,
                                                                                  "description": "A list of languages that embed the current language.\nUnlike `embeddedLangs`, the embedded languages will not be loaded automatically.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13143,
                                                                                        13172
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "balancedBracketSelectors": {
                                                                                  "name": "balancedBracketSelectors",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13177,
                                                                                        13213
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "unbalancedBracketSelectors": {
                                                                                  "name": "unbalancedBracketSelectors",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13218,
                                                                                        13256
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "foldingStopMarker": {
                                                                                  "name": "foldingStopMarker",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13261,
                                                                                        13288
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "foldingStartMarker": {
                                                                                  "name": "foldingStartMarker",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13293,
                                                                                        13321
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "injectTo": {
                                                                                  "name": "injectTo",
                                                                                  "global": false,
                                                                                  "description": "Inject this language to other scopes.\nSame as `injectTo` in VSCode's `contributes.grammars`.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "see",
                                                                                      "text": "https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide#injection-grammars"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        13564,
                                                                                        13584
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "repository": {
                                                                                  "name": "repository",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "IRawRepository",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5523,
                                                                                        5550
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "object",
                                                                                    "type": "IRawRepository",
                                                                                    "schema": {
                                                                                      "$self": {
                                                                                        "name": "$self",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": true,
                                                                                        "type": "IRawRule",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                            "range": [
                                                                                              6194,
                                                                                              6210
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": {
                                                                                          "kind": "object",
                                                                                          "type": "IRawRule",
                                                                                          "schema": {
                                                                                            "id": {
                                                                                              "name": "id",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "RuleId",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6332,
                                                                                                    6344
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": {
                                                                                                "kind": "object",
                                                                                                "type": "RuleId",
                                                                                                "schema": {
                                                                                                  "___brand": {
                                                                                                    "name": "___brand",
                                                                                                    "global": false,
                                                                                                    "description": "",
                                                                                                    "tags": [],
                                                                                                    "required": true,
                                                                                                    "type": "unique symbol",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                        "range": [
                                                                                                          1360,
                                                                                                          1389
                                                                                                        ]
                                                                                                      }
                                                                                                    ],
                                                                                                    "schema": "unique symbol"
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "include": {
                                                                                              "name": "include",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6349,
                                                                                                    6382
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "name": {
                                                                                              "name": "name",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6387,
                                                                                                    6413
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "contentName": {
                                                                                              "name": "contentName",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6418,
                                                                                                    6451
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "match": {
                                                                                              "name": "match",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6456,
                                                                                                    6486
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "captures": {
                                                                                              "name": "captures",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawCaptures",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6491,
                                                                                                    6524
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": {
                                                                                                "kind": "object",
                                                                                                "type": "IRawCaptures",
                                                                                                "schema": {
                                                                                                  "$vscodeTextmateLocation": {
                                                                                                    "name": "$vscodeTextmateLocation",
                                                                                                    "global": false,
                                                                                                    "description": "",
                                                                                                    "tags": [],
                                                                                                    "required": false,
                                                                                                    "type": "ILocation",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                        "range": [
                                                                                                          7130,
                                                                                                          7175
                                                                                                        ]
                                                                                                      }
                                                                                                    ],
                                                                                                    "schema": {
                                                                                                      "kind": "object",
                                                                                                      "type": "ILocation",
                                                                                                      "schema": {
                                                                                                        "filename": {
                                                                                                          "name": "filename",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": true,
                                                                                                          "type": "string",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                7020,
                                                                                                                7046
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "string"
                                                                                                        },
                                                                                                        "line": {
                                                                                                          "name": "line",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": true,
                                                                                                          "type": "number",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                7051,
                                                                                                                7073
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "number"
                                                                                                        },
                                                                                                        "char": {
                                                                                                          "name": "char",
                                                                                                          "global": false,
                                                                                                          "description": "",
                                                                                                          "tags": [],
                                                                                                          "required": true,
                                                                                                          "type": "number",
                                                                                                          "declarations": [
                                                                                                            {
                                                                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                              "range": [
                                                                                                                7078,
                                                                                                                7100
                                                                                                              ]
                                                                                                            }
                                                                                                          ],
                                                                                                          "schema": "number"
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "begin": {
                                                                                              "name": "begin",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6529,
                                                                                                    6559
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "beginCaptures": {
                                                                                              "name": "beginCaptures",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawCaptures",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6564,
                                                                                                    6602
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "IRawCaptures"
                                                                                            },
                                                                                            "end": {
                                                                                              "name": "end",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6607,
                                                                                                    6635
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "endCaptures": {
                                                                                              "name": "endCaptures",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawCaptures",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6640,
                                                                                                    6676
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "IRawCaptures"
                                                                                            },
                                                                                            "while": {
                                                                                              "name": "while",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "string",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6681,
                                                                                                    6711
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "string"
                                                                                            },
                                                                                            "whileCaptures": {
                                                                                              "name": "whileCaptures",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawCaptures",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6716,
                                                                                                    6754
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "IRawCaptures"
                                                                                            },
                                                                                            "patterns": {
                                                                                              "name": "patterns",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawRule[]",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6759,
                                                                                                    6790
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": {
                                                                                                "kind": "array",
                                                                                                "type": "IRawRule[]",
                                                                                                "schema": {
                                                                                                  "0": "IRawRule"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "repository": {
                                                                                              "name": "repository",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "IRawRepository",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6795,
                                                                                                    6832
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "IRawRepository"
                                                                                            },
                                                                                            "applyEndPatternLast": {
                                                                                              "name": "applyEndPatternLast",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "boolean",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    6837,
                                                                                                    6876
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "boolean"
                                                                                            },
                                                                                            "$vscodeTextmateLocation": {
                                                                                              "name": "$vscodeTextmateLocation",
                                                                                              "global": false,
                                                                                              "description": "",
                                                                                              "tags": [],
                                                                                              "required": false,
                                                                                              "type": "ILocation",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                  "range": [
                                                                                                    7130,
                                                                                                    7175
                                                                                                  ]
                                                                                                }
                                                                                              ],
                                                                                              "schema": "ILocation"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "$base": {
                                                                                        "name": "$base",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": true,
                                                                                        "type": "IRawRule",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                            "range": [
                                                                                              6215,
                                                                                              6231
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "IRawRule"
                                                                                      },
                                                                                      "$vscodeTextmateLocation": {
                                                                                        "name": "$vscodeTextmateLocation",
                                                                                        "global": false,
                                                                                        "description": "",
                                                                                        "tags": [],
                                                                                        "required": false,
                                                                                        "type": "ILocation",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                            "range": [
                                                                                              7130,
                                                                                              7175
                                                                                            ]
                                                                                          }
                                                                                        ],
                                                                                        "schema": "ILocation"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "patterns": {
                                                                                  "name": "patterns",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "IRawRule[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5590,
                                                                                        5620
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawRule[]"
                                                                                },
                                                                                "injections": {
                                                                                  "name": "injections",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "{ [expression: string]: IRawRule; }",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5625,
                                                                                        5695
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "object",
                                                                                    "type": "{ [expression: string]: IRawRule; }",
                                                                                    "schema": {}
                                                                                  }
                                                                                },
                                                                                "injectionSelector": {
                                                                                  "name": "injectionSelector",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5700,
                                                                                        5736
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "fileTypes": {
                                                                                  "name": "fileTypes",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5741,
                                                                                        5771
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string[]"
                                                                                },
                                                                                "firstLineMatch": {
                                                                                  "name": "firstLineMatch",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        5804,
                                                                                        5837
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "$vscodeTextmateLocation": {
                                                                                  "name": "$vscodeTextmateLocation",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "ILocation",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        7130,
                                                                                        7175
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "ILocation"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "langs": {
                                                                    "name": "langs",
                                                                    "global": false,
                                                                    "description": "Languages to be bundled loaded by Shiki\n\nAll languages used has to be included in this list at build time, to create granular bundles.\n\nUnlike the `preload` option, when this option is provided, it will override the default languages.",
                                                                    "tags": [
                                                                      {
                                                                        "name": "default",
                                                                        "text": "['js','jsx','json','ts','tsx','vue','css','html','vue','bash','md','mdc','yaml']"
                                                                      }
                                                                    ],
                                                                    "required": false,
                                                                    "type": "(BundledLanguage | LanguageRegistration)[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          16004,
                                                                          16055
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "(BundledLanguage | LanguageRegistration)[]"
                                                                  },
                                                                  "themes": {
                                                                    "name": "themes",
                                                                    "global": false,
                                                                    "description": "Additional themes to be bundled loaded by Shiki",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "(BundledTheme | ThemeRegistrationAny)[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          16147,
                                                                          16196
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "array",
                                                                      "type": "(BundledTheme | ThemeRegistrationAny)[]",
                                                                      "schema": {
                                                                        "0": {
                                                                          "kind": "enum",
                                                                          "type": "BundledTheme | ThemeRegistrationAny",
                                                                          "schema": [
                                                                            "\"andromeeda\"",
                                                                            "\"aurora-x\"",
                                                                            "\"ayu-dark\"",
                                                                            "\"catppuccin-frappe\"",
                                                                            "\"catppuccin-latte\"",
                                                                            "\"catppuccin-macchiato\"",
                                                                            "\"catppuccin-mocha\"",
                                                                            "\"dark-plus\"",
                                                                            "\"dracula\"",
                                                                            "\"dracula-soft\"",
                                                                            "\"github-dark\"",
                                                                            "\"github-dark-default\"",
                                                                            "\"github-dark-dimmed\"",
                                                                            "\"github-light\"",
                                                                            "\"github-light-default\"",
                                                                            "\"houston\"",
                                                                            "\"laserwave\"",
                                                                            "\"light-plus\"",
                                                                            "\"material-theme\"",
                                                                            "\"material-theme-darker\"",
                                                                            "\"material-theme-lighter\"",
                                                                            "\"material-theme-ocean\"",
                                                                            "\"material-theme-palenight\"",
                                                                            "\"min-dark\"",
                                                                            "\"min-light\"",
                                                                            "\"monokai\"",
                                                                            "\"night-owl\"",
                                                                            "\"nord\"",
                                                                            "\"one-dark-pro\"",
                                                                            "\"one-light\"",
                                                                            "\"poimandres\"",
                                                                            "\"red\"",
                                                                            "\"rose-pine\"",
                                                                            "\"rose-pine-dawn\"",
                                                                            "\"rose-pine-moon\"",
                                                                            "\"slack-dark\"",
                                                                            "\"slack-ochin\"",
                                                                            "\"snazzy-light\"",
                                                                            "\"solarized-dark\"",
                                                                            "\"solarized-light\"",
                                                                            "\"synthwave-84\"",
                                                                            "\"tokyo-night\"",
                                                                            "\"vesper\"",
                                                                            "\"vitesse-black\"",
                                                                            "\"vitesse-dark\"",
                                                                            "\"vitesse-light\"",
                                                                            {
                                                                              "kind": "object",
                                                                              "type": "ThemeRegistrationRaw",
                                                                              "schema": {
                                                                                "name": {
                                                                                  "name": "name",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        2288,
                                                                                        2311
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "settings": {
                                                                                  "name": "settings",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        2316,
                                                                                        2354
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "array",
                                                                                    "type": "IRawThemeSetting[]",
                                                                                    "schema": {
                                                                                      "0": {
                                                                                        "kind": "object",
                                                                                        "type": "IRawThemeSetting",
                                                                                        "schema": {
                                                                                          "name": {
                                                                                            "name": "name",
                                                                                            "global": false,
                                                                                            "description": "",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "string",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                "range": [
                                                                                                  2425,
                                                                                                  2448
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "string"
                                                                                          },
                                                                                          "scope": {
                                                                                            "name": "scope",
                                                                                            "global": false,
                                                                                            "description": "",
                                                                                            "tags": [],
                                                                                            "required": false,
                                                                                            "type": "string | string[]",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                "range": [
                                                                                                  2453,
                                                                                                  2500
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": "string | string[]"
                                                                                          },
                                                                                          "settings": {
                                                                                            "name": "settings",
                                                                                            "global": false,
                                                                                            "description": "",
                                                                                            "tags": [],
                                                                                            "required": true,
                                                                                            "type": "{ readonly fontStyle?: string; readonly foreground?: string; readonly background?: string; }",
                                                                                            "declarations": [
                                                                                              {
                                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                "range": [
                                                                                                  2505,
                                                                                                  2645
                                                                                                ]
                                                                                              }
                                                                                            ],
                                                                                            "schema": {
                                                                                              "kind": "object",
                                                                                              "type": "{ readonly fontStyle?: string; readonly foreground?: string; readonly background?: string; }",
                                                                                              "schema": {
                                                                                                "fontStyle": {
                                                                                                  "name": "fontStyle",
                                                                                                  "global": false,
                                                                                                  "description": "",
                                                                                                  "tags": [],
                                                                                                  "required": false,
                                                                                                  "type": "string",
                                                                                                  "declarations": [
                                                                                                    {
                                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                      "range": [
                                                                                                        2534,
                                                                                                        2562
                                                                                                      ]
                                                                                                    }
                                                                                                  ],
                                                                                                  "schema": "string"
                                                                                                },
                                                                                                "foreground": {
                                                                                                  "name": "foreground",
                                                                                                  "global": false,
                                                                                                  "description": "",
                                                                                                  "tags": [],
                                                                                                  "required": false,
                                                                                                  "type": "string",
                                                                                                  "declarations": [
                                                                                                    {
                                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                      "range": [
                                                                                                        2571,
                                                                                                        2600
                                                                                                      ]
                                                                                                    }
                                                                                                  ],
                                                                                                  "schema": "string"
                                                                                                },
                                                                                                "background": {
                                                                                                  "name": "background",
                                                                                                  "global": false,
                                                                                                  "description": "",
                                                                                                  "tags": [],
                                                                                                  "required": false,
                                                                                                  "type": "string",
                                                                                                  "declarations": [
                                                                                                    {
                                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                                      "range": [
                                                                                                        2609,
                                                                                                        2638
                                                                                                      ]
                                                                                                    }
                                                                                                  ],
                                                                                                  "schema": "string"
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "type": {
                                                                                  "name": "type",
                                                                                  "global": false,
                                                                                  "description": "Light/dark theme",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "\"light\" | \"dark\"",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14389,
                                                                                        14412
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": {
                                                                                    "kind": "enum",
                                                                                    "type": "\"light\" | \"dark\"",
                                                                                    "schema": {
                                                                                      "0": "\"light\"",
                                                                                      "1": "\"dark\""
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "displayName": {
                                                                                  "name": "displayName",
                                                                                  "global": false,
                                                                                  "description": "Display name",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14280,
                                                                                        14301
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "tokenColors": {
                                                                                  "name": "tokenColors",
                                                                                  "global": false,
                                                                                  "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14580,
                                                                                        14613
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawThemeSetting[]"
                                                                                },
                                                                                "fg": {
                                                                                  "name": "fg",
                                                                                  "global": false,
                                                                                  "description": "Default foreground color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14709,
                                                                                        14720
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "bg": {
                                                                                  "name": "bg",
                                                                                  "global": false,
                                                                                  "description": "Background color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14808,
                                                                                        14819
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "colorReplacements": {
                                                                                  "name": "colorReplacements",
                                                                                  "global": false,
                                                                                  "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15002,
                                                                                        15045
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "colors": {
                                                                                  "name": "colors",
                                                                                  "global": false,
                                                                                  "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15231,
                                                                                        15263
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "$schema": {
                                                                                  "name": "$schema",
                                                                                  "global": false,
                                                                                  "description": "JSON schema path",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15347,
                                                                                        15364
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "semanticHighlighting": {
                                                                                  "name": "semanticHighlighting",
                                                                                  "global": false,
                                                                                  "description": "Enable semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "boolean",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15460,
                                                                                        15491
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "boolean"
                                                                                },
                                                                                "semanticTokenColors": {
                                                                                  "name": "semanticTokenColors",
                                                                                  "global": false,
                                                                                  "description": "Tokens for semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15591,
                                                                                        15636
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "kind": "object",
                                                                              "type": "ThemeRegistration",
                                                                              "schema": {
                                                                                "name": {
                                                                                  "name": "name",
                                                                                  "global": false,
                                                                                  "description": "Theme name",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14183,
                                                                                        14196
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "displayName": {
                                                                                  "name": "displayName",
                                                                                  "global": false,
                                                                                  "description": "Display name",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14280,
                                                                                        14301
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "type": {
                                                                                  "name": "type",
                                                                                  "global": false,
                                                                                  "description": "Light/dark theme",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "\"light\" | \"dark\"",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14389,
                                                                                        14412
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "\"light\" | \"dark\""
                                                                                },
                                                                                "settings": {
                                                                                  "name": "settings",
                                                                                  "global": false,
                                                                                  "description": "Token rules",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14452,
                                                                                        14481
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawThemeSetting[]"
                                                                                },
                                                                                "tokenColors": {
                                                                                  "name": "tokenColors",
                                                                                  "global": false,
                                                                                  "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14580,
                                                                                        14613
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawThemeSetting[]"
                                                                                },
                                                                                "fg": {
                                                                                  "name": "fg",
                                                                                  "global": false,
                                                                                  "description": "Default foreground color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14709,
                                                                                        14720
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "bg": {
                                                                                  "name": "bg",
                                                                                  "global": false,
                                                                                  "description": "Background color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14808,
                                                                                        14819
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "colorReplacements": {
                                                                                  "name": "colorReplacements",
                                                                                  "global": false,
                                                                                  "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15002,
                                                                                        15045
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "colors": {
                                                                                  "name": "colors",
                                                                                  "global": false,
                                                                                  "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15231,
                                                                                        15263
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "$schema": {
                                                                                  "name": "$schema",
                                                                                  "global": false,
                                                                                  "description": "JSON schema path",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15347,
                                                                                        15364
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "semanticHighlighting": {
                                                                                  "name": "semanticHighlighting",
                                                                                  "global": false,
                                                                                  "description": "Enable semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "boolean",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15460,
                                                                                        15491
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "boolean"
                                                                                },
                                                                                "semanticTokenColors": {
                                                                                  "name": "semanticTokenColors",
                                                                                  "global": false,
                                                                                  "description": "Tokens for semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15591,
                                                                                        15636
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "kind": "object",
                                                                              "type": "ThemeRegistrationResolved",
                                                                              "schema": {
                                                                                "name": {
                                                                                  "name": "name",
                                                                                  "global": false,
                                                                                  "description": "Theme name",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14183,
                                                                                        14196
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "displayName": {
                                                                                  "name": "displayName",
                                                                                  "global": false,
                                                                                  "description": "Display name",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14280,
                                                                                        14301
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "type": {
                                                                                  "name": "type",
                                                                                  "global": false,
                                                                                  "description": "Light/dark theme",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": true,
                                                                                  "type": "\"light\" | \"dark\"",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14389,
                                                                                        14412
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "\"light\" | \"dark\""
                                                                                },
                                                                                "settings": {
                                                                                  "name": "settings",
                                                                                  "global": false,
                                                                                  "description": "Token rules",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14452,
                                                                                        14481
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawThemeSetting[]"
                                                                                },
                                                                                "tokenColors": {
                                                                                  "name": "tokenColors",
                                                                                  "global": false,
                                                                                  "description": "Same as `settings`, will use as fallback if `settings` is not present.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "IRawThemeSetting[]",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14580,
                                                                                        14613
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "IRawThemeSetting[]"
                                                                                },
                                                                                "fg": {
                                                                                  "name": "fg",
                                                                                  "global": false,
                                                                                  "description": "Default foreground color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": true,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14709,
                                                                                        14720
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "bg": {
                                                                                  "name": "bg",
                                                                                  "global": false,
                                                                                  "description": "Background color",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": true,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        14808,
                                                                                        14819
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "colorReplacements": {
                                                                                  "name": "colorReplacements",
                                                                                  "global": false,
                                                                                  "description": "A map of color names to new color values.\n\nThe color key starts with '#' and should be lowercased.",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "shiki custom property"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15002,
                                                                                        15045
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "colors": {
                                                                                  "name": "colors",
                                                                                  "global": false,
                                                                                  "description": "Color map of VS Code options\n\nWill be used by shiki on `lang: 'ansi'` to find ANSI colors, and to find the default foreground/background colors.",
                                                                                  "tags": [],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15231,
                                                                                        15263
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                },
                                                                                "$schema": {
                                                                                  "name": "$schema",
                                                                                  "global": false,
                                                                                  "description": "JSON schema path",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "string",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15347,
                                                                                        15364
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "string"
                                                                                },
                                                                                "semanticHighlighting": {
                                                                                  "name": "semanticHighlighting",
                                                                                  "global": false,
                                                                                  "description": "Enable semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "boolean",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15460,
                                                                                        15491
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "boolean"
                                                                                },
                                                                                "semanticTokenColors": {
                                                                                  "name": "semanticTokenColors",
                                                                                  "global": false,
                                                                                  "description": "Tokens for semantic highlighting",
                                                                                  "tags": [
                                                                                    {
                                                                                      "name": "field",
                                                                                      "text": "not used by shiki"
                                                                                    }
                                                                                  ],
                                                                                  "required": false,
                                                                                  "type": "Record<string, string>",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@shikijs/core/dist/chunk-tokens.d.mts",
                                                                                      "range": [
                                                                                        15591,
                                                                                        15636
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "Record<string, string>"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "navigation": {
                                                          "name": "navigation",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "false | { fields: string[]; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29252,
                                                                29292
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "enum",
                                                            "type": "false | { fields: string[]; }",
                                                            "schema": {
                                                              "0": "false",
                                                              "1": {
                                                                "kind": "object",
                                                                "type": "{ fields: string[]; }",
                                                                "schema": {
                                                                  "fields": {
                                                                    "name": "fields",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": true,
                                                                    "type": "string[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          16579,
                                                                          16601
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string[]"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "search": {
                                                          "name": "search",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "{ ignoredTags?: string[]; filterQuery?: QueryBuilderWhere; indexed?: boolean; options?: Options; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29297,
                                                                29345
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "object",
                                                            "type": "{ ignoredTags?: string[]; filterQuery?: QueryBuilderWhere; indexed?: boolean; options?: Options; }",
                                                            "schema": {
                                                              "ignoredTags": {
                                                                "name": "ignoredTags",
                                                                "global": false,
                                                                "description": "List of tags where text must not be extracted.\n\nBy default, will extract text from each tag.",
                                                                "tags": [
                                                                  {
                                                                    "name": "default",
                                                                    "text": "['script', 'style', 'pre']"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "string[]",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      18208,
                                                                      18236
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "string[]"
                                                              },
                                                              "filterQuery": {
                                                                "name": "filterQuery",
                                                                "global": false,
                                                                "description": "Query used to filter contents that must be searched.",
                                                                "tags": [
                                                                  {
                                                                    "name": "default",
                                                                    "text": "{ _partial: false, _draft: false}"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "QueryBuilderWhere",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      18407,
                                                                      18439
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "object",
                                                                  "type": "QueryBuilderWhere",
                                                                  "schema": {
                                                                    "$and": {
                                                                      "name": "$and",
                                                                      "global": false,
                                                                      "description": "Match only if all of nested conditions are true",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n $and: [\n   { score: { $gte: 5 } },\n   { score: { $lte: 10 } }\n ]\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "QueryBuilderWhere[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            5401,
                                                                            5428
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "array",
                                                                        "type": "QueryBuilderWhere[]",
                                                                        "schema": {
                                                                          "0": "QueryBuilderWhere"
                                                                        }
                                                                      }
                                                                    },
                                                                    "$or": {
                                                                      "name": "$or",
                                                                      "global": false,
                                                                      "description": "Match if any of nested conditions is true",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n $or: [\n   { score: { $gt: 5 } },\n   { score: { $lt: 3 } }\n ]\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "QueryBuilderWhere[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            5672,
                                                                            5698
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "QueryBuilderWhere[]"
                                                                    },
                                                                    "$not": {
                                                                      "name": "$not",
                                                                      "global": false,
                                                                      "description": "Match is condition is false",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $not: 'Hello World'\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            5895,
                                                                            5957
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "number",
                                                                          "2": "false",
                                                                          "3": "true",
                                                                          "4": {
                                                                            "kind": "object",
                                                                            "type": "RegExp",
                                                                            "schema": {}
                                                                          },
                                                                          "5": "QueryBuilderWhere"
                                                                        }
                                                                      }
                                                                    },
                                                                    "$eq": {
                                                                      "name": "$eq",
                                                                      "global": false,
                                                                      "description": "Match if item equals condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $eq: 'Hello World'\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            6156,
                                                                            6197
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | number | boolean | RegExp",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "number",
                                                                          "2": "false",
                                                                          "3": "true",
                                                                          "4": "RegExp"
                                                                        }
                                                                      }
                                                                    },
                                                                    "$ne": {
                                                                      "name": "$ne",
                                                                      "global": false,
                                                                      "description": "Match if item not equals condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n score: {\n   $ne: 100\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            6390,
                                                                            6431
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string | number | boolean | RegExp"
                                                                    },
                                                                    "$gt": {
                                                                      "name": "$gt",
                                                                      "global": false,
                                                                      "description": "Check if item is greater than condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n score: {\n   $gt: 99.5\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "number",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            6629,
                                                                            6642
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "number"
                                                                    },
                                                                    "$gte": {
                                                                      "name": "$gte",
                                                                      "global": false,
                                                                      "description": "Check if item is greater than or equal to condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n score: {\n   $gte: 99.5\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "number",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            6853,
                                                                            6867
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "number"
                                                                    },
                                                                    "$lt": {
                                                                      "name": "$lt",
                                                                      "global": false,
                                                                      "description": "Check if item is less than condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n score: {\n   $lt: 99.5\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "number",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            7062,
                                                                            7075
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "number"
                                                                    },
                                                                    "$lte": {
                                                                      "name": "$lte",
                                                                      "global": false,
                                                                      "description": "Check if item is less than or equal to condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n score: {\n   $lte: 99.5\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "number",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            7283,
                                                                            7297
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "number"
                                                                    },
                                                                    "$regex": {
                                                                      "name": "$regex",
                                                                      "global": false,
                                                                      "description": "Provides regular expression capabilities for pattern matching strings.",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $regex: /^foo/\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | RegExp",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            7531,
                                                                            7556
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | RegExp",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "RegExp"
                                                                        }
                                                                      }
                                                                    },
                                                                    "$type": {
                                                                      "name": "$type",
                                                                      "global": false,
                                                                      "description": "Match if type of item equals condition",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n field: {\n   $type: 'boolean'\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            7760,
                                                                            7775
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "$exists": {
                                                                      "name": "$exists",
                                                                      "global": false,
                                                                      "description": "Check key existence",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n tag: {\n   $exists: false\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "boolean",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            7956,
                                                                            7974
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "boolean"
                                                                    },
                                                                    "$contains": {
                                                                      "name": "$contains",
                                                                      "global": false,
                                                                      "description": "Match if item contains every condition or match every rule in condition array",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $contains: ['Hello', 'World']\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | (string | number | boolean)[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            8231,
                                                                            8304
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | number | boolean | (string | number | boolean)[]",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "number",
                                                                          "2": "false",
                                                                          "3": "true",
                                                                          "4": {
                                                                            "kind": "array",
                                                                            "type": "(string | number | boolean)[]",
                                                                            "schema": [
                                                                              {
                                                                                "kind": "enum",
                                                                                "type": "string | number | boolean",
                                                                                "schema": [
                                                                                  "string",
                                                                                  "number",
                                                                                  "false",
                                                                                  "true"
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "$containsAny": {
                                                                      "name": "$containsAny",
                                                                      "global": false,
                                                                      "description": "Match if item contains at least one rule from condition array",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $containsAny: ['Hello', 'World']\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "(string | number | boolean)[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            8547,
                                                                            8595
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "(string | number | boolean)[]"
                                                                    },
                                                                    "$icontains": {
                                                                      "name": "$icontains",
                                                                      "global": false,
                                                                      "description": "Ignore case contains",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n title: {\n   $icontains: 'hello world'\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            8791,
                                                                            8811
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "$in": {
                                                                      "name": "$in",
                                                                      "global": false,
                                                                      "description": "Match if item is in condition array",
                                                                      "tags": [
                                                                        {
                                                                          "name": "example",
                                                                          "text": "```ts\nqueryContent().where({\n category: {\n   $in: ['sport', 'nature', 'travel']\n }\n})\n```"
                                                                        }
                                                                      ],
                                                                      "required": false,
                                                                      "type": "string | (string | number | boolean)[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                          "range": [
                                                                            9034,
                                                                            9082
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "string | (string | number | boolean)[]",
                                                                        "schema": {
                                                                          "0": "string",
                                                                          "1": "(string | number | boolean)[]"
                                                                        }
                                                                      }
                                                                    },
                                                                    "_id": {
                                                                      "name": "_id",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_source": {
                                                                      "name": "_source",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_path": {
                                                                      "name": "_path",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "title": {
                                                                      "name": "title",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_draft": {
                                                                      "name": "_draft",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_partial": {
                                                                      "name": "_partial",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_locale": {
                                                                      "name": "_locale",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_type": {
                                                                      "name": "_type",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_file": {
                                                                      "name": "_file",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    },
                                                                    "_extension": {
                                                                      "name": "_extension",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string | number | boolean | RegExp | QueryBuilderWhere",
                                                                      "declarations": [],
                                                                      "schema": "string | number | boolean | RegExp | QueryBuilderWhere"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "indexed": {
                                                                "name": "indexed",
                                                                "global": false,
                                                                "description": "API return indexed contents to improve client-side load time.\nThis option will use MiniSearch to create the index.\nIf you disable this option, API will return raw contents instead\nyou can use with any client-side search.",
                                                                "tags": [
                                                                  {
                                                                    "name": "default",
                                                                    "text": "true"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      18809,
                                                                      18827
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "options": {
                                                                "name": "options",
                                                                "global": false,
                                                                "description": "MiniSearch Options. When using `indexed` option,\nthis options will be used to configure MiniSearch\nin order to have the same options on both server and client side.",
                                                                "tags": [
                                                                  {
                                                                    "name": "default",
                                                                    "text": "{\n  fields: ['title', 'content', 'titles'],\n  storeFields: ['title', 'content', 'titles'],\n  searchOptions: {\n    prefix: true,\n    fuzzy: 0.2,\n    boost: {\n      title: 4,\n      content: 2,\n      titles: 1\n    }\n  }\n}"
                                                                  },
                                                                  {
                                                                    "name": "see",
                                                                    "text": "https://lucaong.github.io/minisearch/modules/_minisearch_.html#options"
                                                                  }
                                                                ],
                                                                "required": false,
                                                                "type": "Options",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                    "range": [
                                                                      19641,
                                                                      19659
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "object",
                                                                  "type": "Options",
                                                                  "schema": {
                                                                    "fields": {
                                                                      "name": "fields",
                                                                      "global": false,
                                                                      "description": "Names of the document fields to be indexed.",
                                                                      "tags": [],
                                                                      "required": true,
                                                                      "type": "string[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            14679,
                                                                            14696
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string[]"
                                                                    },
                                                                    "idField": {
                                                                      "name": "idField",
                                                                      "global": false,
                                                                      "description": "Name of the ID field, uniquely identifying a document.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            14779,
                                                                            14796
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string"
                                                                    },
                                                                    "storeFields": {
                                                                      "name": "storeFields",
                                                                      "global": false,
                                                                      "description": "Names of fields to store, so that search results would include them. By\ndefault none, so results would only contain the id field.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "string[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            14961,
                                                                            14984
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "string[]"
                                                                    },
                                                                    "extractField": {
                                                                      "name": "extractField",
                                                                      "global": false,
                                                                      "description": "Function used to extract the value of each field in documents. By default,\nthe documents are assumed to be plain objects with field names as keys,\nbut by specifying a custom `extractField` function one can completely\ncustomize how the fields are extracted.\n\nThe function takes as arguments the document, and the name of the field to\nextract from it. It should return the field value as a string.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "(document: any, fieldName: string) => string",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            15449,
                                                                            15507
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "event",
                                                                        "type": "(document: any, fieldName: string): string",
                                                                        "schema": {}
                                                                      }
                                                                    },
                                                                    "tokenize": {
                                                                      "name": "tokenize",
                                                                      "global": false,
                                                                      "description": "",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "(text: string, fieldName?: string) => string[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            15512,
                                                                            15570
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "event",
                                                                        "type": "(text: string, fieldName?: string): string[]",
                                                                        "schema": {}
                                                                      }
                                                                    },
                                                                    "processTerm": {
                                                                      "name": "processTerm",
                                                                      "global": false,
                                                                      "description": "Function used to process a term before indexing or search. This can be\nused for normalization (such as stemming). By default, terms are\ndowncased, and otherwise no other normalization is performed.\n\nThe function takes as arguments a term to process, and the name of the\nfield it comes from. It should return the processed term as a string, or a\nfalsy value to reject the term entirely.\n\nIt can also return an array of strings, in which case each string in the\nreturned array is indexed as a separate term.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "(term: string, fieldName?: string) => string | false | string[]",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            16165,
                                                                            16262
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "event",
                                                                        "type": "(term: string, fieldName?: string): string | false | string[]",
                                                                        "schema": {}
                                                                      }
                                                                    },
                                                                    "logger": {
                                                                      "name": "logger",
                                                                      "global": false,
                                                                      "description": "Function called to log messages. Arguments are a log level ('debug',\n'info', 'warn', or 'error'), a log message, and an optional string code\nthat identifies the reason for the log.\n\nThe default implementation uses `console`, if defined.",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "(level: LogLevel, message: string, code?: string) => void",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            16554,
                                                                            16621
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "event",
                                                                        "type": "(level: LogLevel, message: string, code?: string): void",
                                                                        "schema": {}
                                                                      }
                                                                    },
                                                                    "autoVacuum": {
                                                                      "name": "autoVacuum",
                                                                      "global": false,
                                                                      "description": "If `true` (the default), vacuuming is performed automatically as soon as\n{@link MiniSearch#discard } is called a certain number of times, cleaning up\nobsolete references from the index. If `false`, no automatic vacuuming is\nperformed. Custom settings controlling auto vacuuming thresholds, as well\nas batching behavior, can be passed as an object (see the {@link * AutoVacuumOptions} type).",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "boolean | AutoVacuumOptions",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            17072,
                                                                            17113
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "enum",
                                                                        "type": "boolean | AutoVacuumOptions",
                                                                        "schema": {
                                                                          "0": "false",
                                                                          "1": "true",
                                                                          "2": {
                                                                            "kind": "object",
                                                                            "type": "AutoVacuumOptions",
                                                                            "schema": {
                                                                              "batchSize": {
                                                                                "name": "batchSize",
                                                                                "global": false,
                                                                                "description": "Size of each vacuuming batch (the number of terms in the index that will be\ntraversed in each batch). Defaults to 1000.",
                                                                                "tags": [],
                                                                                "required": false,
                                                                                "type": "number",
                                                                                "declarations": [
                                                                                  {
                                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                    "range": [
                                                                                      20979,
                                                                                      20998
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "schema": "number"
                                                                              },
                                                                              "batchWait": {
                                                                                "name": "batchWait",
                                                                                "global": false,
                                                                                "description": "Wait time between each vacuuming batch in milliseconds. Defaults to 10.",
                                                                                "tags": [],
                                                                                "required": false,
                                                                                "type": "number",
                                                                                "declarations": [
                                                                                  {
                                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                    "range": [
                                                                                      21098,
                                                                                      21117
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "schema": "number"
                                                                              },
                                                                              "minDirtCount": {
                                                                                "name": "minDirtCount",
                                                                                "global": false,
                                                                                "description": "Minimum `dirtCount` (number of discarded documents since the last vacuuming)\nunder which auto vacuum is not triggered. It defaults to 20.",
                                                                                "tags": [],
                                                                                "required": false,
                                                                                "type": "number",
                                                                                "declarations": [
                                                                                  {
                                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                    "range": [
                                                                                      21427,
                                                                                      21449
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "schema": "number"
                                                                              },
                                                                              "minDirtFactor": {
                                                                                "name": "minDirtFactor",
                                                                                "global": false,
                                                                                "description": "Minimum `dirtFactor` (proportion of discarded documents over the total)\nunder which auto vacuum is not triggered. It defaults to 0.1.",
                                                                                "tags": [],
                                                                                "required": false,
                                                                                "type": "number",
                                                                                "declarations": [
                                                                                  {
                                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                    "range": [
                                                                                      21618,
                                                                                      21641
                                                                                    ]
                                                                                  }
                                                                                ],
                                                                                "schema": "number"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "searchOptions": {
                                                                      "name": "searchOptions",
                                                                      "global": false,
                                                                      "description": "Default search options (see the {@link SearchOptions} type and the {@link * MiniSearch#search} method for details)",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "SearchOptions",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            17261,
                                                                            17291
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": {
                                                                        "kind": "object",
                                                                        "type": "SearchOptions",
                                                                        "schema": {
                                                                          "fields": {
                                                                            "name": "fields",
                                                                            "global": false,
                                                                            "description": "Names of the fields to search in. If omitted, all fields are searched.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "string[]",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  9334,
                                                                                  9352
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "string[]"
                                                                          },
                                                                          "filter": {
                                                                            "name": "filter",
                                                                            "global": false,
                                                                            "description": "Function used to filter search results, for example on the basis of stored\nfields. It takes as argument each search result and should return a boolean\nto indicate if the result should be kept or not.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(result: SearchResult) => boolean",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  9594,
                                                                                  9637
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(result: SearchResult): boolean",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "boost": {
                                                                            "name": "boost",
                                                                            "global": false,
                                                                            "description": "Key-value object of field names to boosting values. By default, fields are\nassigned a boosting factor of 1. If one assigns to a field a boosting value\nof 2, a result that matches the query in that field is assigned a score\ntwice as high as a result matching the query in another field, all else\nbeing equal.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "{ [fieldName: string]: number; }",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  10001,
                                                                                  10054
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "object",
                                                                              "type": "{ [fieldName: string]: number; }",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "weights": {
                                                                            "name": "weights",
                                                                            "global": false,
                                                                            "description": "Relative weights to assign to prefix search results and fuzzy search\nresults. Exact matches are assigned a weight of 1.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "{ fuzzy: number; prefix: number; }",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  10209,
                                                                                  10274
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "object",
                                                                              "type": "{ fuzzy: number; prefix: number; }",
                                                                              "schema": {
                                                                                "fuzzy": {
                                                                                  "name": "fuzzy",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "number",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                      "range": [
                                                                                        10229,
                                                                                        10243
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number"
                                                                                },
                                                                                "prefix": {
                                                                                  "name": "prefix",
                                                                                  "global": false,
                                                                                  "description": "",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "number",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                      "range": [
                                                                                        10252,
                                                                                        10267
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number"
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "boostDocument": {
                                                                            "name": "boostDocument",
                                                                            "global": false,
                                                                            "description": "Function to calculate a boost factor for documents. It takes as arguments\nthe document ID, and a term that matches the search in that document, and\nthe value of the stored fields for the document (if any).  It should return\na boosting factor: a number higher than 1 increases the computed score, a\nnumber lower than 1 decreases the score, and a falsy value skips the search\nresult completely.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(documentId: any, term: string, storedFields?: Record<string, unknown>) => number",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  10730,
                                                                                  10828
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(documentId: any, term: string, storedFields?: Record<string, unknown>): number",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "prefix": {
                                                                            "name": "prefix",
                                                                            "global": false,
                                                                            "description": "Controls whether to perform prefix search. It can be a simple boolean, or a\nfunction.\n\nIf a boolean is passed, prefix search is performed if true.\n\nIf a function is passed, it is called upon search with a search term, the\npositional index of that search term in the tokenized search query, and the\ntokenized search query. The function should return a boolean to indicate\nwhether to perform prefix search for that search term.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "boolean | ((term: string, index: number, terms: string[]) => boolean)",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  11336,
                                                                                  11415
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "boolean | ((term: string, index: number, terms: string[]) => boolean)",
                                                                              "schema": {
                                                                                "0": "false",
                                                                                "1": "true",
                                                                                "2": {
                                                                                  "kind": "event",
                                                                                  "type": "(term: string, index: number, terms: string[]): boolean",
                                                                                  "schema": []
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "fuzzy": {
                                                                            "name": "fuzzy",
                                                                            "global": false,
                                                                            "description": "Controls whether to perform fuzzy search. It can be a simple boolean, or a\nnumber, or a function.\n\nIf a boolean is given, fuzzy search with a default fuzziness parameter is\nperformed if true.\n\nIf a number higher or equal to 1 is given, fuzzy search is performed, with\na maximum edit distance (Levenshtein) equal to the number.\n\nIf a number between 0 and 1 is given, fuzzy search is performed within a\nmaximum edit distance corresponding to that fraction of the term length,\napproximated to the nearest integer. For example, 0.2 would mean an edit\ndistance of 20% of the term length, so 1 character in a 5-characters term.\nThe calculated fuzziness value is limited by the `maxFuzzy` option, to\nprevent slowdown for very long queries.\n\nIf a function is passed, the function is called upon search with a search\nterm, a positional index of that term in the tokenized search query, and\nthe tokenized search query. It should return a boolean or a number, with\nthe meaning documented above.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "number | boolean | ((term: string, index: number, terms: string[]) => number | boolean)",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  12556,
                                                                                  12652
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "number | boolean | ((term: string, index: number, terms: string[]) => number | boolean)",
                                                                              "schema": {
                                                                                "0": "number",
                                                                                "1": "false",
                                                                                "2": "true",
                                                                                "3": {
                                                                                  "kind": "event",
                                                                                  "type": "(term: string, index: number, terms: string[]): number | boolean",
                                                                                  "schema": []
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "maxFuzzy": {
                                                                            "name": "maxFuzzy",
                                                                            "global": false,
                                                                            "description": "Controls the maximum fuzziness when using a fractional fuzzy value. This is\nset to 6 by default. Very high edit distances usually don't produce\nmeaningful results, but can excessively impact search performance.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "number",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  12905,
                                                                                  12923
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "number"
                                                                          },
                                                                          "combineWith": {
                                                                            "name": "combineWith",
                                                                            "global": false,
                                                                            "description": "The operand to combine partial results for each term. By default it is\n\"OR\", so results matching _any_ of the search terms are returned by a\nsearch. If \"AND\" is given, only results matching _all_ the search terms are\nreturned by a search.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "string",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  13211,
                                                                                  13232
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "string"
                                                                          },
                                                                          "tokenize": {
                                                                            "name": "tokenize",
                                                                            "global": false,
                                                                            "description": "Function to tokenize the search query. By default, the same tokenizer used\nfor indexing is used also for search.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(text: string) => string[]",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  13380,
                                                                                  13418
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(text: string): string[]",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "processTerm": {
                                                                            "name": "processTerm",
                                                                            "global": false,
                                                                            "description": "Function to process or normalize terms in the search query. By default, the\nsame term processor used for indexing is used also for search.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(term: string) => string | false | string[]",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  13592,
                                                                                  13669
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(term: string): string | false | string[]",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "bm25": {
                                                                            "name": "bm25",
                                                                            "global": false,
                                                                            "description": "BM25+ algorithm parameters. Customizing these is almost never necessary,\nand finetuning them requires an understanding of the BM25 scoring model. In\nmost cases, it is best to omit this option to use defaults, and instead use\nboosting to tweak scoring for specific use cases.",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "BM25Params",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                "range": [
                                                                                  13993,
                                                                                  14011
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "object",
                                                                              "type": "BM25Params",
                                                                              "schema": {
                                                                                "k": {
                                                                                  "name": "k",
                                                                                  "global": false,
                                                                                  "description": "Term frequency saturation point.\n\nRecommended values are between `1.2` and `2`. Higher values increase the\ndifference in score between documents with higher and lower term\nfrequencies. Setting this to `0` or a negative value is invalid. Defaults\nto `1.2`",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "number",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                      "range": [
                                                                                        49020,
                                                                                        49030
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number"
                                                                                },
                                                                                "b": {
                                                                                  "name": "b",
                                                                                  "global": false,
                                                                                  "description": "Length normalization impact.\n\nRecommended values are around `0.75`. Higher values increase the weight\nthat field length has on scoring. Setting this to `0` (not recommended)\nmeans that the field length has no effect on scoring. Negative values are\ninvalid. Defaults to `0.7`.",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "number",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                      "range": [
                                                                                        49368,
                                                                                        49378
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number"
                                                                                },
                                                                                "d": {
                                                                                  "name": "d",
                                                                                  "global": false,
                                                                                  "description": "BM25+ frequency normalization lower bound (usually called δ).\n\nRecommended values are between `0.5` and `1`. Increasing this parameter\nincreases the minimum relevance of one occurrence of a search term\nregardless of its (possibly very long) field length. Negative values are\ninvalid. Defaults to `0.5`.",
                                                                                  "tags": [],
                                                                                  "required": true,
                                                                                  "type": "number",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                                      "range": [
                                                                                        49743,
                                                                                        49753
                                                                                      ]
                                                                                    }
                                                                                  ],
                                                                                  "schema": "number"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "autoSuggestOptions": {
                                                                      "name": "autoSuggestOptions",
                                                                      "global": false,
                                                                      "description": "Default auto suggest options (see the {@link SearchOptions} type and the\n{@link MiniSearch#autoSuggest } method for details)",
                                                                      "tags": [],
                                                                      "required": false,
                                                                      "type": "SearchOptions",
                                                                      "declarations": [
                                                                        {
                                                                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/minisearch/dist/types/index.d.ts",
                                                                          "range": [
                                                                            17450,
                                                                            17485
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "schema": "SearchOptions"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "contentHead": {
                                                          "name": "contentHead",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "boolean",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29350,
                                                                29392
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "boolean"
                                                        },
                                                        "documentDriven": {
                                                          "name": "documentDriven",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "boolean | { host?: string; page?: boolean; navigation?: boolean; surround?: boolean; globals?: { [key: string]: QueryBuilderParams; }; layoutFallbacks?: string[]; injectPage?: boolean; trailingSlash?: boolean; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                              "range": [
                                                                29397,
                                                                29445
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "enum",
                                                            "type": "boolean | { host?: string; page?: boolean; navigation?: boolean; surround?: boolean; globals?: { [key: string]: QueryBuilderParams; }; layoutFallbacks?: string[]; injectPage?: boolean; trailingSlash?: boolean; }",
                                                            "schema": {
                                                              "0": "false",
                                                              "1": "true",
                                                              "2": {
                                                                "kind": "object",
                                                                "type": "{ host?: string; page?: boolean; navigation?: boolean; surround?: boolean; globals?: { [key: string]: QueryBuilderParams; }; layoutFallbacks?: string[]; injectPage?: boolean; trailingSlash?: boolean; }",
                                                                "schema": {
                                                                  "host": {
                                                                    "name": "host",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17130,
                                                                          17144
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string"
                                                                  },
                                                                  "page": {
                                                                    "name": "page",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17153,
                                                                          17168
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "navigation": {
                                                                    "name": "navigation",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17177,
                                                                          17198
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "surround": {
                                                                    "name": "surround",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17207,
                                                                          17226
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "globals": {
                                                                    "name": "globals",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "{ [key: string]: QueryBuilderParams; }",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17235,
                                                                          17304
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": {
                                                                      "kind": "object",
                                                                      "type": "{ [key: string]: QueryBuilderParams; }",
                                                                      "schema": {}
                                                                    }
                                                                  },
                                                                  "layoutFallbacks": {
                                                                    "name": "layoutFallbacks",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "string[]",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17313,
                                                                          17340
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "string[]"
                                                                  },
                                                                  "injectPage": {
                                                                    "name": "injectPage",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17349,
                                                                          17370
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  },
                                                                  "trailingSlash": {
                                                                    "name": "trailingSlash",
                                                                    "global": false,
                                                                    "description": "",
                                                                    "tags": [],
                                                                    "required": false,
                                                                    "type": "boolean",
                                                                    "declarations": [
                                                                      {
                                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/module.d.ts",
                                                                        "range": [
                                                                          17379,
                                                                          17403
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "schema": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "mdc": {
                                                    "name": "mdc",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "{ components: { prose: boolean; map: Record<string, string>; }; headings: { anchorLinks?: boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }; }; useNuxtImage?: boolean; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                        "range": [
                                                          13165,
                                                          13385
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "object",
                                                      "type": "{ components: { prose: boolean; map: Record<string, string>; }; headings: { anchorLinks?: boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }; }; useNuxtImage?: boolean; }",
                                                      "schema": {
                                                        "components": {
                                                          "name": "components",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "{ prose: boolean; map: Record<string, string>; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                              "range": [
                                                                13184,
                                                                13289
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "object",
                                                            "type": "{ prose: boolean; map: Record<string, string>; }",
                                                            "schema": {
                                                              "prose": {
                                                                "name": "prose",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "boolean",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                    "range": [
                                                                      13214,
                                                                      13229
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "boolean"
                                                              },
                                                              "map": {
                                                                "name": "map",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": true,
                                                                "type": "Record<string, string>",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                    "range": [
                                                                      13246,
                                                                      13274
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": "Record<string, string>"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "headings": {
                                                          "name": "headings",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "{ anchorLinks?: boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }; }",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                              "range": [
                                                                13302,
                                                                13338
                                                              ]
                                                            }
                                                          ],
                                                          "schema": {
                                                            "kind": "object",
                                                            "type": "{ anchorLinks?: boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }; }",
                                                            "schema": {
                                                              "anchorLinks": {
                                                                "name": "anchorLinks",
                                                                "global": false,
                                                                "description": "",
                                                                "tags": [],
                                                                "required": false,
                                                                "type": "boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }",
                                                                "declarations": [
                                                                  {
                                                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                                    "range": [
                                                                      3983,
                                                                      4095
                                                                    ]
                                                                  }
                                                                ],
                                                                "schema": {
                                                                  "kind": "enum",
                                                                  "type": "boolean | { h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }",
                                                                  "schema": {
                                                                    "0": "false",
                                                                    "1": "true",
                                                                    "2": "{ h1?: boolean; h2?: boolean; h3?: boolean; h4?: boolean; h5?: boolean; h6?: boolean; }"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "useNuxtImage": {
                                                          "name": "useNuxtImage",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "boolean",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/module.d.ts",
                                                              "range": [
                                                                13351,
                                                                13374
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "boolean"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "isHydrating": {
                                        "name": "isHydrating",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "boolean",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5850,
                                              5872
                                            ]
                                          }
                                        ],
                                        "schema": "boolean"
                                      },
                                      "deferHydration": {
                                        "name": "deferHydration",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "() => () => void | Promise<void>",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5877,
                                              5926
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "event",
                                          "type": "(): () => void | Promise<void>"
                                        }
                                      },
                                      "ssrContext": {
                                        "name": "ssrContext",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": false,
                                        "type": "NuxtSSRContext",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5931,
                                              5959
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "NuxtSSRContext",
                                          "schema": {
                                            "url": {
                                              "name": "url",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    2839,
                                                    2851
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "event": {
                                              "name": "event",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "H3Event<EventHandlerRequest>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    2856,
                                                    2871
                                                  ]
                                                }
                                              ],
                                              "schema": "H3Event<EventHandlerRequest>"
                                            },
                                            "runtimeConfig": {
                                              "name": "runtimeConfig",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "RuntimeConfig",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    2876,
                                                    2905
                                                  ]
                                                }
                                              ],
                                              "schema": "RuntimeConfig"
                                            },
                                            "noSSR": {
                                              "name": "noSSR",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    2910,
                                                    2925
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "error": {
                                              "name": "error",
                                              "global": false,
                                              "description": "whether we are rendering an SSR error",
                                              "tags": [],
                                              "required": false,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    2979,
                                                    2995
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "nuxt": {
                                              "name": "nuxt",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "_NuxtApp",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3000,
                                                    3015
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "_NuxtApp",
                                                "schema": {
                                                  "_name": {
                                                    "name": "_name",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4060,
                                                          4074
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "vueApp": {
                                                    "name": "vueApp",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "App<Element>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4079,
                                                          4100
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "App<Element>"
                                                  },
                                                  "globalName": {
                                                    "name": "globalName",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4105,
                                                          4124
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "versions": {
                                                    "name": "versions",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, string>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4129,
                                                          4162
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, string>"
                                                  },
                                                  "hooks": {
                                                    "name": "hooks",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4167,
                                                          4201
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Hookable<RuntimeNuxtHooks, HookKeys<RuntimeNuxtHooks>>"
                                                  },
                                                  "hook": {
                                                    "name": "hook",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; }) => () => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4206,
                                                          4238
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, function_: InferCallback<RuntimeNuxtHooks, NameT>, options?: { ...; }) => () => void"
                                                  },
                                                  "callHook": {
                                                    "name": "callHook",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4243,
                                                          4283
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "<NameT extends HookKeys<RuntimeNuxtHooks>>(name: NameT, ...arguments_: Parameters<InferCallback<RuntimeNuxtHooks, NameT>>) => Promise<...>"
                                                  },
                                                  "runWithContext": {
                                                    "name": "runWithContext",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4288,
                                                          4384
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "<T extends () => any>(fn: T) => ReturnType<T> | Promise<Awaited<ReturnType<T>>>"
                                                  },
                                                  "_id": {
                                                    "name": "_id",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "number",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4438,
                                                          4451
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "number"
                                                  },
                                                  "_scope": {
                                                    "name": "_scope",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "EffectScope",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4477,
                                                          4497
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "EffectScope"
                                                  },
                                                  "_asyncDataPromises": {
                                                    "name": "_asyncDataPromises",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "Record<string, Promise<any>>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4523,
                                                          4584
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, Promise<any>>"
                                                  },
                                                  "_asyncData": {
                                                    "name": "_asyncData",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; }>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4610,
                                                          4876
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, { data: Ref<unknown>; pending: Ref<boolean>; error: Ref<Error>; status: Ref<AsyncDataRequestStatus>; _default: () => unknown; }>"
                                                  },
                                                  "_loadingIndicator": {
                                                    "name": "_loadingIndicator",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "LoadingIndicator",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4902,
                                                          4939
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "LoadingIndicator"
                                                  },
                                                  "_loadingIndicatorDeps": {
                                                    "name": "_loadingIndicatorDeps",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "number",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          4965,
                                                          4996
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "number"
                                                  },
                                                  "_middleware": {
                                                    "name": "_middleware",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5022,
                                                          5126
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "{ global: RouteMiddleware[]; named: Record<string, RouteMiddleware>; }"
                                                  },
                                                  "_once": {
                                                    "name": "_once",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "{ [key: string]: Promise<any>; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5152,
                                                          5204
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "{ [key: string]: Promise<any>; }"
                                                  },
                                                  "_observer": {
                                                    "name": "_observer",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "{ observe: (element: Element, callback: () => void) => () => void; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5230,
                                                          5323
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "{ observe: (element: Element, callback: () => void) => () => void; }"
                                                  },
                                                  "_payloadCache": {
                                                    "name": "_payloadCache",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "Record<string, Record<string, any> | Promise<Record<string, any>>>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5349,
                                                          5439
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, Record<string, any> | Promise<Record<string, any>>>"
                                                  },
                                                  "_appConfig": {
                                                    "name": "_appConfig",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "AppConfig",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5465,
                                                          5487
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "AppConfig"
                                                  },
                                                  "_route": {
                                                    "name": "_route",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "RouteLocationNormalizedLoadedGeneric",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5513,
                                                          5551
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "RouteLocationNormalizedLoadedGeneric"
                                                  },
                                                  "_islandPromises": {
                                                    "name": "_islandPromises",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "Record<string, Promise<any>>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5577,
                                                          5624
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, Promise<any>>"
                                                  },
                                                  "_payloadRevivers": {
                                                    "name": "_payloadRevivers",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": true,
                                                    "type": "Record<string, (data: any) => any>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5650,
                                                          5703
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, (data: any) => any>"
                                                  },
                                                  "_routeAnnouncer": {
                                                    "name": "_routeAnnouncer",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "RouteAnnouncer",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5729,
                                                          5762
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "RouteAnnouncer"
                                                  },
                                                  "_routeAnnouncerDeps": {
                                                    "name": "_routeAnnouncerDeps",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [
                                                      {
                                                        "name": "internal"
                                                      }
                                                    ],
                                                    "required": false,
                                                    "type": "number",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5788,
                                                          5817
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "number"
                                                  },
                                                  "$config": {
                                                    "name": "$config",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "RuntimeConfig",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5822,
                                                          5845
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "RuntimeConfig"
                                                  },
                                                  "isHydrating": {
                                                    "name": "isHydrating",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "boolean",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5850,
                                                          5872
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "boolean"
                                                  },
                                                  "deferHydration": {
                                                    "name": "deferHydration",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "() => () => void | Promise<void>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5877,
                                                          5926
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "() => () => void | Promise<void>"
                                                  },
                                                  "ssrContext": {
                                                    "name": "ssrContext",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "NuxtSSRContext",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5931,
                                                          5959
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "NuxtSSRContext"
                                                  },
                                                  "payload": {
                                                    "name": "payload",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "NuxtPayload",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5964,
                                                          5985
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "object",
                                                      "type": "NuxtPayload",
                                                      "schema": {
                                                        "path": {
                                                          "name": "path",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "string",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3661,
                                                                3675
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "string"
                                                        },
                                                        "serverRendered": {
                                                          "name": "serverRendered",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "boolean",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3680,
                                                                3705
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "boolean"
                                                        },
                                                        "prerenderedAt": {
                                                          "name": "prerenderedAt",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "number",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3710,
                                                                3733
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "number"
                                                        },
                                                        "data": {
                                                          "name": "data",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Record<string, any>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3738,
                                                                3764
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Record<string, any>"
                                                        },
                                                        "state": {
                                                          "name": "state",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Record<string, any>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3769,
                                                                3796
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Record<string, any>"
                                                        },
                                                        "once": {
                                                          "name": "once",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Set<string>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3801,
                                                                3819
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Set<string>"
                                                        },
                                                        "config": {
                                                          "name": "config",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "Pick<RuntimeConfig, \"public\" | \"app\">",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3824,
                                                                3871
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Pick<RuntimeConfig, \"public\" | \"app\">"
                                                        },
                                                        "error": {
                                                          "name": "error",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": false,
                                                          "type": "NuxtError<unknown>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3876,
                                                                3914
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "NuxtError<unknown>"
                                                        },
                                                        "_errors": {
                                                          "name": "_errors",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Record<string, NuxtError<unknown>>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                3919,
                                                                3983
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Record<string, NuxtError<unknown>>"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "static": {
                                                    "name": "static",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "{ data: Record<string, any>; }",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          5990,
                                                          6041
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "object",
                                                      "type": "{ data: Record<string, any>; }",
                                                      "schema": {
                                                        "data": {
                                                          "name": "data",
                                                          "global": false,
                                                          "description": "",
                                                          "tags": [],
                                                          "required": true,
                                                          "type": "Record<string, any>",
                                                          "declarations": [
                                                            {
                                                              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                              "range": [
                                                                6008,
                                                                6034
                                                              ]
                                                            }
                                                          ],
                                                          "schema": "Record<string, any>"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "provide": {
                                                    "name": "provide",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "(name: string, value: any) => void",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          6046,
                                                          6090
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "(name: string, value: any): void",
                                                      "schema": {}
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payload": {
                                              "name": "payload",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "Partial<NuxtPayload>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3020,
                                                    3050
                                                  ]
                                                }
                                              ],
                                              "schema": "Partial<NuxtPayload>"
                                            },
                                            "head": {
                                              "name": "head",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "VueHeadClient<MergeHead>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3055,
                                                    3086
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "enum",
                                                "type": "VueHeadClient<MergeHead>",
                                                "schema": {
                                                  "0": {
                                                    "kind": "object",
                                                    "type": "Unhead<MaybeComputedRef<ReactiveHead<MergeHead>>> & ObjectPlugin<any[]>",
                                                    "schema": {
                                                      "plugins": {
                                                        "name": "plugins",
                                                        "global": false,
                                                        "description": "Registered plugins.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "HeadPlugin[]",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              4780,
                                                              4802
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "array",
                                                          "type": "HeadPlugin[]",
                                                          "schema": {
                                                            "0": {
                                                              "kind": "object",
                                                              "type": "HeadPlugin",
                                                              "schema": {
                                                                "hooks": {
                                                                  "name": "hooks",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "NestedHooks<HeadHooks>",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                      "range": [
                                                                        4478,
                                                                        4509
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "enum",
                                                                    "type": "NestedHooks<HeadHooks>",
                                                                    "schema": {
                                                                      "0": {
                                                                        "kind": "object",
                                                                        "type": "Partial<StripGeneric<HeadHooks>> & Partial<{ entries: NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>; ... 4 more ...; script: NestedHooks<...>; }> & Partial<...>",
                                                                        "schema": {
                                                                          "init": {
                                                                            "name": "init",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: Unhead<any>) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1358,
                                                                                  1399
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: Unhead<any>): HookResult",
                                                                              "schema": {
                                                                                "0": "any"
                                                                              }
                                                                            }
                                                                          },
                                                                          "entries:updated": {
                                                                            "name": "entries:updated",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: Unhead<any>) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1404,
                                                                                  1456
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: Unhead<any>): HookResult",
                                                                              "schema": {
                                                                                "0": "any"
                                                                              }
                                                                            }
                                                                          },
                                                                          "entries:resolve": {
                                                                            "name": "entries:resolve",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: EntryResolveCtx<any>) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1461,
                                                                                  1522
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: EntryResolveCtx<any>): HookResult",
                                                                              "schema": {
                                                                                "0": "any"
                                                                              }
                                                                            }
                                                                          },
                                                                          "tag:normalise": {
                                                                            "name": "tag:normalise",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1527,
                                                                                  1670
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "tags:beforeResolve": {
                                                                            "name": "tags:beforeResolve",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1675,
                                                                                  1751
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "tags:resolve": {
                                                                            "name": "tags:resolve",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1756,
                                                                                  1826
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "tags:afterResolve": {
                                                                            "name": "tags:afterResolve",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1831,
                                                                                  1906
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "dom:beforeRender": {
                                                                            "name": "dom:beforeRender",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: DomBeforeRenderCtx) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1911,
                                                                                  1971
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: DomBeforeRenderCtx): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "dom:renderTag": {
                                                                            "name": "dom:renderTag",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: DomRenderTagContext, document: Document, track: any) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  1976,
                                                                                  2066
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: DomRenderTagContext, document: Document, track: any): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "dom:rendered": {
                                                                            "name": "dom:rendered",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { renders: DomRenderTagContext[]; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2071,
                                                                                  2156
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { renders: DomRenderTagContext[]; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "ssr:beforeRender": {
                                                                            "name": "ssr:beforeRender",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: ShouldRenderContext) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2161,
                                                                                  2222
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: ShouldRenderContext): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "ssr:render": {
                                                                            "name": "ssr:render",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2227,
                                                                                  2295
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { tags: HeadTag[]; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "ssr:rendered": {
                                                                            "name": "ssr:rendered",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: SSRRenderContext) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2300,
                                                                                  2354
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: SSRRenderContext): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "script:updated": {
                                                                            "name": "script:updated",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { script: ScriptInstance<any>; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2359,
                                                                                  2443
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { script: ScriptInstance<any>; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "script:instance-fn": {
                                                                            "name": "script:instance-fn",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  2448,
                                                                                  2590
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": {
                                                                              "kind": "event",
                                                                              "type": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }): HookResult",
                                                                              "schema": {}
                                                                            }
                                                                          },
                                                                          "entries": {
                                                                            "name": "entries",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"entries\">>> & Partial<{}> & Partial<{ updated: (ctx: Unhead<any>) => HookResult; resolve: (ctx: EntryResolveCtx<...>) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "updated": {
                                                                                      "name": "updated",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: Unhead<any>) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: Unhead<any>) => HookResult"
                                                                                    },
                                                                                    "resolve": {
                                                                                      "name": "resolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: EntryResolveCtx<any>) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: EntryResolveCtx<any>) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"entries\">>> & Partial<{}> & Partial<{ updated: (ctx: Unhead<any>) => HookResult; resolve: (ctx: EntryResolveCtx<...>) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "updated": {
                                                                                      "name": "updated",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: Unhead<any>) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: Unhead<any>) => HookResult"
                                                                                    },
                                                                                    "resolve": {
                                                                                      "name": "resolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: EntryResolveCtx<any>) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: EntryResolveCtx<any>) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "tag": {
                                                                            "name": "tag",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"tag\">>> & Partial<{}> & Partial<{ normalise: (ctx: { tag: HeadTag; entry: HeadEntry<...>; resolvedOptions: CreateHeadOptions; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "normalise": {
                                                                                      "name": "normalise",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"tag\">>> & Partial<{}> & Partial<{ normalise: (ctx: { tag: HeadTag; entry: HeadEntry<...>; resolvedOptions: CreateHeadOptions; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "normalise": {
                                                                                      "name": "normalise",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tag: HeadTag; entry: HeadEntry<any>; resolvedOptions: CreateHeadOptions; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "tags": {
                                                                            "name": "tags",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"tags\">>> & Partial<{}> & Partial<{ resolve: (ctx: { tags: HeadTag[]; }) => HookResult; beforeResolve: (ctx: { ...; }) => HookResult; afterResolve: (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "resolve": {
                                                                                      "name": "resolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "beforeResolve": {
                                                                                      "name": "beforeResolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "afterResolve": {
                                                                                      "name": "afterResolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"tags\">>> & Partial<{}> & Partial<{ resolve: (ctx: { tags: HeadTag[]; }) => HookResult; beforeResolve: (ctx: { ...; }) => HookResult; afterResolve: (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "resolve": {
                                                                                      "name": "resolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "beforeResolve": {
                                                                                      "name": "beforeResolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "afterResolve": {
                                                                                      "name": "afterResolve",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "dom": {
                                                                            "name": "dom",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"dom\">>> & Partial<{}> & Partial<{ beforeRender: (ctx: DomBeforeRenderCtx) => HookResult; renderTag: (ctx: DomRenderTagContext, document: Document, track: any) => HookResult; rendered: (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "beforeRender": {
                                                                                      "name": "beforeRender",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: DomBeforeRenderCtx) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: DomBeforeRenderCtx) => HookResult"
                                                                                    },
                                                                                    "renderTag": {
                                                                                      "name": "renderTag",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: DomRenderTagContext, document: Document, track: any) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: DomRenderTagContext, document: Document, track: any) => HookResult"
                                                                                    },
                                                                                    "rendered": {
                                                                                      "name": "rendered",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { renders: DomRenderTagContext[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { renders: DomRenderTagContext[]; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"dom\">>> & Partial<{}> & Partial<{ beforeRender: (ctx: DomBeforeRenderCtx) => HookResult; renderTag: (ctx: DomRenderTagContext, document: Document, track: any) => HookResult; rendered: (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "beforeRender": {
                                                                                      "name": "beforeRender",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: DomBeforeRenderCtx) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: DomBeforeRenderCtx) => HookResult"
                                                                                    },
                                                                                    "renderTag": {
                                                                                      "name": "renderTag",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: DomRenderTagContext, document: Document, track: any) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: DomRenderTagContext, document: Document, track: any) => HookResult"
                                                                                    },
                                                                                    "rendered": {
                                                                                      "name": "rendered",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { renders: DomRenderTagContext[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { renders: DomRenderTagContext[]; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "ssr": {
                                                                            "name": "ssr",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"ssr\">>> & Partial<{}> & Partial<{ render: (ctx: { tags: HeadTag[]; }) => HookResult; beforeRender: (ctx: ShouldRenderContext) => HookResult; rendered: (ctx: SSRRenderContext) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "render": {
                                                                                      "name": "render",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "beforeRender": {
                                                                                      "name": "beforeRender",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: ShouldRenderContext) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: ShouldRenderContext) => HookResult"
                                                                                    },
                                                                                    "rendered": {
                                                                                      "name": "rendered",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: SSRRenderContext) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: SSRRenderContext) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"ssr\">>> & Partial<{}> & Partial<{ render: (ctx: { tags: HeadTag[]; }) => HookResult; beforeRender: (ctx: ShouldRenderContext) => HookResult; rendered: (ctx: SSRRenderContext) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "render": {
                                                                                      "name": "render",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { tags: HeadTag[]; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { tags: HeadTag[]; }) => HookResult"
                                                                                    },
                                                                                    "beforeRender": {
                                                                                      "name": "beforeRender",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: ShouldRenderContext) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: ShouldRenderContext) => HookResult"
                                                                                    },
                                                                                    "rendered": {
                                                                                      "name": "rendered",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: SSRRenderContext) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: SSRRenderContext) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "script": {
                                                                            "name": "script",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">>",
                                                                            "declarations": [],
                                                                            "schema": {
                                                                              "kind": "enum",
                                                                              "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">>",
                                                                              "schema": {
                                                                                "0": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<StripGeneric<WithoutNamespace<HeadHooks, \"script\">>> & Partial<{}> & Partial<{ updated: (ctx: { script: ScriptInstance<any>; }) => HookResult; \"instance-fn\": (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "updated": {
                                                                                      "name": "updated",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { script: ScriptInstance<any>; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { script: ScriptInstance<any>; }) => HookResult"
                                                                                    },
                                                                                    "instance-fn": {
                                                                                      "name": "instance-fn",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "1": {
                                                                                  "kind": "object",
                                                                                  "type": "Partial<OnlyGeneric<WithoutNamespace<HeadHooks, \"script\">>> & Partial<{}> & Partial<{ updated: (ctx: { script: ScriptInstance<any>; }) => HookResult; \"instance-fn\": (ctx: { ...; }) => HookResult; }>",
                                                                                  "schema": {
                                                                                    "updated": {
                                                                                      "name": "updated",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { script: ScriptInstance<any>; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { script: ScriptInstance<any>; }) => HookResult"
                                                                                    },
                                                                                    "instance-fn": {
                                                                                      "name": "instance-fn",
                                                                                      "global": false,
                                                                                      "description": "",
                                                                                      "tags": [],
                                                                                      "required": false,
                                                                                      "type": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult",
                                                                                      "declarations": [],
                                                                                      "schema": "(ctx: { script: ScriptInstance<any>; fn: string | symbol; exists: boolean; }) => HookResult"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "1": {
                                                                        "kind": "object",
                                                                        "type": "Partial<OnlyGeneric<HeadHooks>> & Partial<{ entries: NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>; ... 4 more ...; script: NestedHooks<...>; }> & Partial<...>",
                                                                        "schema": {
                                                                          "entries": {
                                                                            "name": "entries",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"entries\">>"
                                                                          },
                                                                          "tag": {
                                                                            "name": "tag",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"tag\">>"
                                                                          },
                                                                          "tags": {
                                                                            "name": "tags",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"tags\">>"
                                                                          },
                                                                          "dom": {
                                                                            "name": "dom",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"dom\">>"
                                                                          },
                                                                          "ssr": {
                                                                            "name": "ssr",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"ssr\">>"
                                                                          },
                                                                          "script": {
                                                                            "name": "script",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">>",
                                                                            "declarations": [],
                                                                            "schema": "NestedHooks<WithoutNamespace<HeadHooks, \"script\">>"
                                                                          },
                                                                          "init": {
                                                                            "name": "init",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(ctx: Unhead<any>) => HookResult",
                                                                            "declarations": [],
                                                                            "schema": "(ctx: Unhead<any>) => HookResult"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "domDelayFn": {
                                                                  "name": "domDelayFn",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "(fn: () => void) => void",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                      "range": [
                                                                        4377,
                                                                        4415
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "event",
                                                                    "type": "(fn: () => void): void",
                                                                    "schema": {}
                                                                  }
                                                                },
                                                                "document": {
                                                                  "name": "document",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "Document",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                      "range": [
                                                                        4420,
                                                                        4440
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "object",
                                                                    "type": "Document",
                                                                    "schema": {
                                                                      "startViewTransition": {
                                                                        "name": "startViewTransition",
                                                                        "global": false,
                                                                        "description": "",
                                                                        "tags": [],
                                                                        "required": false,
                                                                        "type": "(callback: () => void | Promise<void>) => ViewTransition",
                                                                        "declarations": [
                                                                          {
                                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts",
                                                                            "range": [
                                                                              338,
                                                                              417
                                                                            ]
                                                                          }
                                                                        ],
                                                                        "schema": {
                                                                          "kind": "event",
                                                                          "type": "(callback: () => void | Promise<void>): ViewTransition",
                                                                          "schema": {}
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "mode": {
                                                                  "name": "mode",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "RuntimeMode",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                      "range": [
                                                                        3712,
                                                                        3731
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": {
                                                                    "kind": "enum",
                                                                    "type": "RuntimeMode",
                                                                    "schema": {
                                                                      "0": "\"server\"",
                                                                      "1": "\"client\""
                                                                    }
                                                                  }
                                                                },
                                                                "key": {
                                                                  "name": "key",
                                                                  "global": false,
                                                                  "description": "",
                                                                  "tags": [],
                                                                  "required": false,
                                                                  "type": "string",
                                                                  "declarations": [
                                                                    {
                                                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                      "range": [
                                                                        3911,
                                                                        3924
                                                                      ]
                                                                    }
                                                                  ],
                                                                  "schema": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "headEntries": {
                                                        "name": "headEntries",
                                                        "global": false,
                                                        "description": "The active head entries.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "() => HeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>[]",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              4855,
                                                              4893
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(): HeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>[]"
                                                        }
                                                      },
                                                      "push": {
                                                        "name": "push",
                                                        "global": false,
                                                        "description": "Create a new head entry.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "(entry: MaybeComputedRef<ReactiveHead<MergeHead>>, options?: HeadEntryOptions) => ActiveHeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              4946,
                                                              5021
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(entry: MaybeComputedRef<ReactiveHead<MergeHead>>, options?: HeadEntryOptions): ActiveHeadEntry<MaybeComputedRef<ReactiveHead<MergeHead>>>",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "resolveTags": {
                                                        "name": "resolveTags",
                                                        "global": false,
                                                        "description": "Resolve tags from head entries.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "() => Promise<HeadTag[]>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5081,
                                                              5119
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(): Promise<HeadTag[]>"
                                                        }
                                                      },
                                                      "hooks": {
                                                        "name": "hooks",
                                                        "global": false,
                                                        "description": "Exposed hooks for easier extension.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "Hookable<HeadHooks, HookKeys<HeadHooks>>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5183,
                                                              5210
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Hookable<HeadHooks, HookKeys<HeadHooks>>"
                                                      },
                                                      "resolvedOptions": {
                                                        "name": "resolvedOptions",
                                                        "global": false,
                                                        "description": "Resolved options",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "CreateHeadOptions",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5255,
                                                              5290
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "object",
                                                          "type": "CreateHeadOptions",
                                                          "schema": {
                                                            "domDelayFn": {
                                                              "name": "domDelayFn",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "(fn: () => void) => void",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    4377,
                                                                    4415
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "(fn: () => void) => void"
                                                            },
                                                            "document": {
                                                              "name": "document",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "Document",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    4420,
                                                                    4440
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "Document"
                                                            },
                                                            "plugins": {
                                                              "name": "plugins",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "HeadPluginInput[]",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    4445,
                                                                    4473
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": {
                                                                "kind": "array",
                                                                "type": "HeadPluginInput[]",
                                                                "schema": {
                                                                  "0": {
                                                                    "kind": "enum",
                                                                    "type": "HeadPluginInput",
                                                                    "schema": [
                                                                      {
                                                                        "kind": "object",
                                                                        "type": "Omit<CreateHeadOptions, \"plugins\"> & { mode?: RuntimeMode; } & { key?: string; }",
                                                                        "schema": {
                                                                          "hooks": {
                                                                            "name": "hooks",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "NestedHooks<HeadHooks>",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  4478,
                                                                                  4509
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "NestedHooks<HeadHooks>"
                                                                          },
                                                                          "domDelayFn": {
                                                                            "name": "domDelayFn",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "(fn: () => void) => void",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  4377,
                                                                                  4415
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "(fn: () => void) => void"
                                                                          },
                                                                          "document": {
                                                                            "name": "document",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "Document",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  4420,
                                                                                  4440
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "Document"
                                                                          },
                                                                          "mode": {
                                                                            "name": "mode",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "RuntimeMode",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  3712,
                                                                                  3731
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "RuntimeMode"
                                                                          },
                                                                          "key": {
                                                                            "name": "key",
                                                                            "global": false,
                                                                            "description": "",
                                                                            "tags": [],
                                                                            "required": false,
                                                                            "type": "string",
                                                                            "declarations": [
                                                                              {
                                                                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                                "range": [
                                                                                  3785,
                                                                                  3798
                                                                                ]
                                                                              }
                                                                            ],
                                                                            "schema": "string"
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "kind": "event",
                                                                        "type": "(head: Unhead<Head<SchemaAugmentations>>): Omit<CreateHeadOptions, \"plugins\"> & { mode?: RuntimeMode; } & { ...; }",
                                                                        "schema": [
                                                                          "Head<SchemaAugmentations>"
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "hooks": {
                                                              "name": "hooks",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "NestedHooks<HeadHooks>",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    4478,
                                                                    4509
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "NestedHooks<HeadHooks>"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "use": {
                                                        "name": "use",
                                                        "global": false,
                                                        "description": "Use a head plugin, loads the plugins hooks.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "(plugin: HeadPluginInput) => void",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5362,
                                                              5401
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(plugin: HeadPluginInput): void",
                                                          "schema": {}
                                                        }
                                                      },
                                                      "ssr": {
                                                        "name": "ssr",
                                                        "global": false,
                                                        "description": "Is it a server-side render context.",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "boolean",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5465,
                                                              5478
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "boolean"
                                                      },
                                                      "_dom": {
                                                        "name": "_dom",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": false,
                                                        "type": "DomState",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5516,
                                                              5532
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "object",
                                                          "type": "DomState",
                                                          "schema": {
                                                            "pendingSideEffects": {
                                                              "name": "pendingSideEffects",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "SideEffectsRecord",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    5883,
                                                                    5921
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "SideEffectsRecord"
                                                            },
                                                            "sideEffects": {
                                                              "name": "sideEffects",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "SideEffectsRecord",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    5926,
                                                                    5957
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "SideEffectsRecord"
                                                            },
                                                            "elMap": {
                                                              "name": "elMap",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": true,
                                                              "type": "Record<string, Element>",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    5962,
                                                                    5993
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "Record<string, Element>"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "_domUpdatePromise": {
                                                        "name": "_domUpdatePromise",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": false,
                                                        "type": "Promise<void>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5570,
                                                              5604
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Promise<void>"
                                                      },
                                                      "dirty": {
                                                        "name": "dirty",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": true,
                                                        "type": "boolean",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5642,
                                                              5657
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "boolean"
                                                      },
                                                      "_scripts": {
                                                        "name": "_scripts",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": false,
                                                        "type": "Record<string, any>",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5695,
                                                              5726
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "Record<string, any>"
                                                      },
                                                      "_templateParams": {
                                                        "name": "_templateParams",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": false,
                                                        "type": "TemplateParams",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5764,
                                                              5797
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "object",
                                                          "type": "TemplateParams",
                                                          "schema": {
                                                            "separator": {
                                                              "name": "separator",
                                                              "global": false,
                                                              "description": "",
                                                              "tags": [],
                                                              "required": false,
                                                              "type": "string",
                                                              "declarations": [
                                                                {
                                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                                  "range": [
                                                                    8207,
                                                                    8244
                                                                  ]
                                                                }
                                                              ],
                                                              "schema": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "_separator": {
                                                        "name": "_separator",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [
                                                          {
                                                            "name": "internal"
                                                          }
                                                        ],
                                                        "required": false,
                                                        "type": "string",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@unhead/schema/dist/index.d.ts",
                                                            "range": [
                                                              5835,
                                                              5855
                                                            ]
                                                          }
                                                        ],
                                                        "schema": "string"
                                                      },
                                                      "install": {
                                                        "name": "install",
                                                        "global": false,
                                                        "description": "",
                                                        "tags": [],
                                                        "required": true,
                                                        "type": "(app: App<any>, ...options: any[]) => any",
                                                        "declarations": [
                                                          {
                                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                                            "range": [
                                                              46189,
                                                              46229
                                                            ]
                                                          }
                                                        ],
                                                        "schema": {
                                                          "kind": "event",
                                                          "type": "(app: App<any>, ...options: any[]): any",
                                                          "schema": {
                                                            "0": "any"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "1": {
                                                    "kind": "event",
                                                    "type": "(app: App<any>, ...options: any[]): any",
                                                    "schema": [
                                                      "any"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "config": {
                                              "name": "config",
                                              "global": false,
                                              "description": "This is used solely to render runtime config with SPA renderer.",
                                              "tags": [],
                                              "required": false,
                                              "type": "Pick<RuntimeConfig, \"public\" | \"app\">",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3166,
                                                    3213
                                                  ]
                                                }
                                              ],
                                              "schema": "Pick<RuntimeConfig, \"public\" | \"app\">"
                                            },
                                            "teleports": {
                                              "name": "teleports",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Record<string, string>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3218,
                                                    3253
                                                  ]
                                                }
                                              ],
                                              "schema": "Record<string, string>"
                                            },
                                            "islandContext": {
                                              "name": "islandContext",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "NuxtIslandContext",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3258,
                                                    3292
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "NuxtIslandContext",
                                                "schema": {
                                                  "id": {
                                                    "name": "id",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          482,
                                                          494
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "name": {
                                                    "name": "name",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          499,
                                                          512
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "props": {
                                                    "name": "props",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "Record<string, any>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          517,
                                                          545
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, any>"
                                                  },
                                                  "url": {
                                                    "name": "url",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": false,
                                                    "type": "string",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          550,
                                                          563
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "string"
                                                  },
                                                  "slots": {
                                                    "name": "slots",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, Omit<NuxtIslandSlotResponse, \"html\" | \"fallback\">>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          568,
                                                          641
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, Omit<NuxtIslandSlotResponse, \"html\" | \"fallback\">>"
                                                  },
                                                  "components": {
                                                    "name": "components",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, Omit<NuxtIslandClientResponse, \"html\">>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts",
                                                        "range": [
                                                          646,
                                                          713
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, Omit<NuxtIslandClientResponse, \"html\">>"
                                                  }
                                                }
                                              }
                                            },
                                            "_renderResponse": {
                                              "name": "_renderResponse",
                                              "global": false,
                                              "description": "",
                                              "tags": [
                                                {
                                                  "name": "internal"
                                                }
                                              ],
                                              "required": false,
                                              "type": "Partial<RenderResponse>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3318,
                                                    3360
                                                  ]
                                                }
                                              ],
                                              "schema": "Partial<RenderResponse>"
                                            },
                                            "_payloadReducers": {
                                              "name": "_payloadReducers",
                                              "global": false,
                                              "description": "",
                                              "tags": [
                                                {
                                                  "name": "internal"
                                                }
                                              ],
                                              "required": true,
                                              "type": "Record<string, (data: any) => any>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3386,
                                                    3439
                                                  ]
                                                }
                                              ],
                                              "schema": "Record<string, (data: any) => any>"
                                            },
                                            "_sharedPrerenderCache": {
                                              "name": "_sharedPrerenderCache",
                                              "global": false,
                                              "description": "",
                                              "tags": [
                                                {
                                                  "name": "internal"
                                                }
                                              ],
                                              "required": false,
                                              "type": "{ get<T = unknown>(key: string): Promise<T>; set<T>(key: string, value: Promise<T>): Promise<void>; }",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                  "range": [
                                                    3465,
                                                    3623
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "{ get<T = unknown>(key: string): Promise<T>; set<T>(key: string, value: Promise<T>): Promise<void>; }",
                                                "schema": {
                                                  "get": {
                                                    "name": "get",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "<T = unknown>(key: string) => Promise<T>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          3499,
                                                          3553
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "<T = unknown>(key: string): Promise<T>",
                                                      "schema": {}
                                                    }
                                                  },
                                                  "set": {
                                                    "name": "set",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "<T>(key: string, value: Promise<T>) => Promise<void>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                                        "range": [
                                                          3562,
                                                          3616
                                                        ]
                                                      }
                                                    ],
                                                    "schema": {
                                                      "kind": "event",
                                                      "type": "<T>(key: string, value: Promise<T>): Promise<void>",
                                                      "schema": {}
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "renderResourceHints": {
                                              "name": "renderResourceHints",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "(...args: unknown[]) => unknown",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    326,
                                                    380
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(...args: unknown[]): unknown",
                                                "schema": {
                                                  "0": "unknown"
                                                }
                                              }
                                            },
                                            "renderScripts": {
                                              "name": "renderScripts",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "(...args: unknown[]) => unknown",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    385,
                                                    433
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(...args: unknown[]): unknown",
                                                "schema": {
                                                  "0": "unknown"
                                                }
                                              }
                                            },
                                            "renderStyles": {
                                              "name": "renderStyles",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "(...args: unknown[]) => unknown",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    438,
                                                    485
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "event",
                                                "type": "(...args: unknown[]): unknown",
                                                "schema": {
                                                  "0": "unknown"
                                                }
                                              }
                                            },
                                            "modules": {
                                              "name": "modules",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Set<string>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    490,
                                                    512
                                                  ]
                                                }
                                              ],
                                              "schema": "Set<string>"
                                            },
                                            "_registeredComponents": {
                                              "name": "_registeredComponents",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "Set<string>",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    517,
                                                    553
                                                  ]
                                                }
                                              ],
                                              "schema": "Set<string>"
                                            },
                                            "_requestDependencies": {
                                              "name": "_requestDependencies",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": false,
                                              "type": "ModuleDependencies",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                  "range": [
                                                    558,
                                                    600
                                                  ]
                                                }
                                              ],
                                              "schema": {
                                                "kind": "object",
                                                "type": "ModuleDependencies",
                                                "schema": {
                                                  "scripts": {
                                                    "name": "scripts",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, ResourceMeta>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                        "range": [
                                                          129,
                                                          167
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, ResourceMeta>"
                                                  },
                                                  "styles": {
                                                    "name": "styles",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, ResourceMeta>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                        "range": [
                                                          172,
                                                          209
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, ResourceMeta>"
                                                  },
                                                  "preload": {
                                                    "name": "preload",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, ResourceMeta>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                        "range": [
                                                          214,
                                                          252
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, ResourceMeta>"
                                                  },
                                                  "prefetch": {
                                                    "name": "prefetch",
                                                    "global": false,
                                                    "description": "",
                                                    "tags": [],
                                                    "required": true,
                                                    "type": "Record<string, ResourceMeta>",
                                                    "declarations": [
                                                      {
                                                        "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-bundle-renderer/dist/runtime.d.ts",
                                                        "range": [
                                                          257,
                                                          296
                                                        ]
                                                      }
                                                    ],
                                                    "schema": "Record<string, ResourceMeta>"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "payload": {
                                        "name": "payload",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "NuxtPayload",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5964,
                                              5985
                                            ]
                                          }
                                        ],
                                        "schema": "NuxtPayload"
                                      },
                                      "static": {
                                        "name": "static",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "{ data: Record<string, any>; }",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              5990,
                                              6041
                                            ]
                                          }
                                        ],
                                        "schema": "{ data: Record<string, any>; }"
                                      },
                                      "provide": {
                                        "name": "provide",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "(name: string, value: any) => void",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/nuxt.d.ts",
                                            "range": [
                                              6046,
                                              6090
                                            ]
                                          }
                                        ],
                                        "schema": "(name: string, value: any) => void"
                                      },
                                      "$colorMode": {
                                        "name": "$colorMode",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "ColorModeInstance",
                                        "declarations": [
                                          {
                                            "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                            "range": [
                                              676,
                                              706
                                            ]
                                          }
                                        ],
                                        "schema": {
                                          "kind": "object",
                                          "type": "ColorModeInstance",
                                          "schema": {
                                            "preference": {
                                              "name": "preference",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                  "range": [
                                                    41,
                                                    60
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "value": {
                                              "name": "value",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "string",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                  "range": [
                                                    65,
                                                    79
                                                  ]
                                                }
                                              ],
                                              "schema": "string"
                                            },
                                            "unknown": {
                                              "name": "unknown",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                  "range": [
                                                    84,
                                                    101
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            },
                                            "forced": {
                                              "name": "forced",
                                              "global": false,
                                              "description": "",
                                              "tags": [],
                                              "required": true,
                                              "type": "boolean",
                                              "declarations": [
                                                {
                                                  "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                                  "range": [
                                                    106,
                                                    122
                                                  ]
                                                }
                                              ],
                                              "schema": "boolean"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "$colorMode": {
                                  "name": "$colorMode",
                                  "global": false,
                                  "description": "",
                                  "tags": [],
                                  "required": true,
                                  "type": "ColorModeInstance",
                                  "declarations": [
                                    {
                                      "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                                      "range": [
                                        676,
                                        706
                                      ]
                                    }
                                  ],
                                  "schema": "ColorModeInstance"
                                }
                              }
                            }
                          },
                          "errorHandler": {
                            "name": "errorHandler",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, info: string) => void",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45119,
                                  45213
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "event",
                              "type": "(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, info: string): void",
                              "schema": {}
                            }
                          },
                          "warnHandler": {
                            "name": "warnHandler",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(msg: string, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, trace: string) => void",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45218,
                                  45311
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "event",
                              "type": "(msg: string, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>, trace: string): void",
                              "schema": {}
                            }
                          },
                          "compilerOptions": {
                            "name": "compilerOptions",
                            "global": false,
                            "description": "Options to pass to `@vue/compiler-dom`.\nOnly supported in runtime compiler build.",
                            "tags": [],
                            "required": true,
                            "type": "RuntimeCompilerOptions",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45428,
                                  45468
                                ]
                              }
                            ],
                            "schema": "RuntimeCompilerOptions"
                          },
                          "isCustomElement": {
                            "name": "isCustomElement",
                            "global": false,
                            "description": "",
                            "tags": [
                              {
                                "name": "deprecated",
                                "text": "use config.compilerOptions.isCustomElement"
                              }
                            ],
                            "required": false,
                            "type": "(tag: string) => boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45551,
                                  45594
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "event",
                              "type": "(tag: string): boolean",
                              "schema": {}
                            }
                          },
                          "warnRecursiveComputed": {
                            "name": "warnRecursiveComputed",
                            "global": false,
                            "description": "TODO document for 3.5\nEnable warnings for computed getters that recursively trigger itself.",
                            "tags": [],
                            "required": false,
                            "type": "boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  45721,
                                  45753
                                ]
                              }
                            ],
                            "schema": "boolean"
                          }
                        }
                      }
                    },
                    "mixins": {
                      "name": "mixins",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>[]",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45827,
                            45854
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "array",
                        "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>[]",
                        "schema": {
                          "0": {
                            "kind": "object",
                            "type": "ComponentOptions<{}, any, any, any, any, any, any, any, any>",
                            "schema": {
                              "setup": {
                                "name": "setup",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "(this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30406,
                                      30632
                                    ]
                                  }
                                ],
                                "schema": "(this: void, props: LooseRequired<{}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any"
                              },
                              "name": {
                                "name": "name",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30637,
                                      30651
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "template": {
                                "name": "template",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string | object",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30656,
                                      30683
                                    ]
                                  }
                                ],
                                "schema": "string | object"
                              },
                              "render": {
                                "name": "render",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Function",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30688,
                                      30706
                                    ]
                                  }
                                ],
                                "schema": "Function"
                              },
                              "components": {
                                "name": "components",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30711,
                                      30750
                                    ]
                                  }
                                ],
                                "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                              },
                              "directives": {
                                "name": "directives",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, Directive<any, any>>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30755,
                                      30794
                                    ]
                                  }
                                ],
                                "schema": "Record<string, Directive<any, any>>"
                              },
                              "inheritAttrs": {
                                "name": "inheritAttrs",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "boolean",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30799,
                                      30822
                                    ]
                                  }
                                ],
                                "schema": "boolean"
                              },
                              "emits": {
                                "name": "emits",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30827,
                                      30863
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "slots": {
                                "name": "slots",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "{}",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30868,
                                      30878
                                    ]
                                  }
                                ],
                                "schema": "{}"
                              },
                              "expose": {
                                "name": "expose",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "string[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30883,
                                      30901
                                    ]
                                  }
                                ],
                                "schema": "string[]"
                              },
                              "serverPrefetch": {
                                "name": "serverPrefetch",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void | Promise<any>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30906,
                                      30945
                                    ]
                                  }
                                ],
                                "schema": "() => void | Promise<any>"
                              },
                              "compilerOptions": {
                                "name": "compilerOptions",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "RuntimeCompilerOptions",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30950,
                                      30991
                                    ]
                                  }
                                ],
                                "schema": "RuntimeCompilerOptions"
                              },
                              "call": {
                                "name": "call",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "(this: unknown, ...args: unknown[]) => never",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      30996,
                                      31048
                                    ]
                                  }
                                ],
                                "schema": "(this: unknown, ...args: unknown[]) => never"
                              },
                              "___isFragment": {
                                "name": "___isFragment",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "never",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31053,
                                      31074
                                    ]
                                  }
                                ],
                                "schema": "never"
                              },
                              "___isTeleport": {
                                "name": "___isTeleport",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "never",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31079,
                                      31100
                                    ]
                                  }
                                ],
                                "schema": "never"
                              },
                              "___isSuspense": {
                                "name": "___isSuspense",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "never",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31105,
                                      31126
                                    ]
                                  }
                                ],
                                "schema": "never"
                              },
                              "___defaults": {
                                "name": "___defaults",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      31131,
                                      31153
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "compatConfig": {
                                "name": "compatConfig",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "CompatConfig",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      35716,
                                      35744
                                    ]
                                  }
                                ],
                                "schema": "CompatConfig"
                              },
                              "data": {
                                "name": "data",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      35773,
                                      35958
                                    ]
                                  }
                                ],
                                "schema": "(this: CreateComponentPublicInstance<...>, vm: CreateComponentPublicInstance<{}, {}, {}, {}, MethodOptions, any, any, {}, {}, {}, false, {}, {}, OptionTypesType<{}, {}, {}, ComputedOptions, MethodOptions, {}> & OptionTypesType<...>, ... 5 more ..., {}>) => any"
                              },
                              "computed": {
                                "name": "computed",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      35963,
                                      35976
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "methods": {
                                "name": "methods",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      35981,
                                      35993
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "watch": {
                                "name": "watch",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "ComponentWatchOptions",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      35998,
                                      36028
                                    ]
                                  }
                                ],
                                "schema": "ComponentWatchOptions"
                              },
                              "provide": {
                                "name": "provide",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "ComponentProvideOptions",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36033,
                                      36067
                                    ]
                                  }
                                ],
                                "schema": "ComponentProvideOptions"
                              },
                              "inject": {
                                "name": "inject",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "{} | string[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36072,
                                      36090
                                    ]
                                  }
                                ],
                                "schema": "{} | string[]"
                              },
                              "filters": {
                                "name": "filters",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "Record<string, Function>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36095,
                                      36130
                                    ]
                                  }
                                ],
                                "schema": "Record<string, Function>"
                              },
                              "mixins": {
                                "name": "mixins",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any[]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36135,
                                      36152
                                    ]
                                  }
                                ],
                                "schema": "any[]"
                              },
                              "extends": {
                                "name": "extends",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "any",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36157,
                                      36175
                                    ]
                                  }
                                ],
                                "schema": "any"
                              },
                              "beforeCreate": {
                                "name": "beforeCreate",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36180,
                                      36202
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "created": {
                                "name": "created",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36207,
                                      36224
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "beforeMount": {
                                "name": "beforeMount",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36229,
                                      36250
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "mounted": {
                                "name": "mounted",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36255,
                                      36272
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "beforeUpdate": {
                                "name": "beforeUpdate",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36277,
                                      36299
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "updated": {
                                "name": "updated",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36304,
                                      36321
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "activated": {
                                "name": "activated",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36326,
                                      36345
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "deactivated": {
                                "name": "deactivated",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36350,
                                      36371
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "beforeDestroy": {
                                "name": "beforeDestroy",
                                "global": false,
                                "description": "",
                                "tags": [
                                  {
                                    "name": "deprecated",
                                    "text": "use `beforeUnmount` instead"
                                  }
                                ],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36427,
                                      36450
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "beforeUnmount": {
                                "name": "beforeUnmount",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36455,
                                      36478
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "destroyed": {
                                "name": "destroyed",
                                "global": false,
                                "description": "",
                                "tags": [
                                  {
                                    "name": "deprecated",
                                    "text": "use `unmounted` instead"
                                  }
                                ],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36530,
                                      36549
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "unmounted": {
                                "name": "unmounted",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "() => void",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36554,
                                      36573
                                    ]
                                  }
                                ],
                                "schema": "() => void"
                              },
                              "renderTracked": {
                                "name": "renderTracked",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "DebuggerHook",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36578,
                                      36607
                                    ]
                                  }
                                ],
                                "schema": "DebuggerHook"
                              },
                              "renderTriggered": {
                                "name": "renderTriggered",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "DebuggerHook",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36612,
                                      36643
                                    ]
                                  }
                                ],
                                "schema": "DebuggerHook"
                              },
                              "errorCaptured": {
                                "name": "errorCaptured",
                                "global": false,
                                "description": "",
                                "tags": [],
                                "required": false,
                                "type": "ErrorCapturedHook<unknown>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36648,
                                      36682
                                    ]
                                  }
                                ],
                                "schema": "ErrorCapturedHook<unknown>"
                              },
                              "delimiters": {
                                "name": "delimiters",
                                "global": false,
                                "description": "runtime compile only",
                                "tags": [
                                  {
                                    "name": "deprecated",
                                    "text": "use `compilerOptions.delimiters` instead."
                                  }
                                ],
                                "required": false,
                                "type": "[string, string]",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      36792,
                                      36822
                                    ]
                                  }
                                ],
                                "schema": "[string, string]"
                              },
                              "___differentiator": {
                                "name": "___differentiator",
                                "global": false,
                                "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                                "tags": [],
                                "required": false,
                                "type": "string | number | symbol",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      37132,
                                      37179
                                    ]
                                  }
                                ],
                                "schema": "string | number | symbol"
                              },
                              "___isBuiltIn": {
                                "name": "___isBuiltIn",
                                "global": false,
                                "description": "Compat build only, for bailing out of certain compatibility behavior",
                                "tags": [],
                                "required": false,
                                "type": "boolean",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      56084,
                                      56106
                                    ]
                                  }
                                ],
                                "schema": "boolean"
                              },
                              "___file": {
                                "name": "___file",
                                "global": false,
                                "description": "This one should be exposed so that devtools can make use of it",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      56197,
                                      56213
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "___name": {
                                "name": "___name",
                                "global": false,
                                "description": "name inferred from filename",
                                "tags": [],
                                "required": false,
                                "type": "string",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                    "range": [
                                      56269,
                                      56285
                                    ]
                                  }
                                ],
                                "schema": "string"
                              },
                              "beforeRouteEnter": {
                                "name": "beforeRouteEnter",
                                "global": false,
                                "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                                "tags": [
                                  {
                                    "name": "param",
                                    "text": "to - RouteLocationRaw we are navigating to"
                                  },
                                  {
                                    "name": "param",
                                    "text": "from - RouteLocationRaw we are navigating from"
                                  },
                                  {
                                    "name": "param",
                                    "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                  }
                                ],
                                "required": false,
                                "type": "NavigationGuardWithThis<undefined>",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                    "range": [
                                      60091,
                                      60218
                                    ]
                                  }
                                ],
                                "schema": "NavigationGuardWithThis<undefined>"
                              },
                              "beforeRouteUpdate": {
                                "name": "beforeRouteUpdate",
                                "global": false,
                                "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                                "tags": [
                                  {
                                    "name": "param",
                                    "text": "to - RouteLocationRaw we are navigating to"
                                  },
                                  {
                                    "name": "param",
                                    "text": "from - RouteLocationRaw we are navigating from"
                                  },
                                  {
                                    "name": "param",
                                    "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                  }
                                ],
                                "required": false,
                                "type": "NavigationGuard",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                    "range": [
                                      60665,
                                      60775
                                    ]
                                  }
                                ],
                                "schema": "NavigationGuard"
                              },
                              "beforeRouteLeave": {
                                "name": "beforeRouteLeave",
                                "global": false,
                                "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                                "tags": [
                                  {
                                    "name": "param",
                                    "text": "to - RouteLocationRaw we are navigating to"
                                  },
                                  {
                                    "name": "param",
                                    "text": "from - RouteLocationRaw we are navigating from"
                                  },
                                  {
                                    "name": "param",
                                    "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                                  }
                                ],
                                "required": false,
                                "type": "NavigationGuard",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                    "range": [
                                      61140,
                                      61248
                                    ]
                                  }
                                ],
                                "schema": "NavigationGuard"
                              },
                              "head": {
                                "name": "head",
                                "global": false,
                                "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                                "tags": [],
                                "required": false,
                                "type": "(nuxtApp: NuxtApp) => UseHeadInput",
                                "declarations": [
                                  {
                                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                                    "range": [
                                      1615,
                                      1652
                                    ]
                                  }
                                ],
                                "schema": "(nuxtApp: NuxtApp) => UseHeadInput"
                              }
                            }
                          }
                        }
                      }
                    },
                    "components": {
                      "name": "components",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45859,
                            45897
                          ]
                        }
                      ],
                      "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                    },
                    "directives": {
                      "name": "directives",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Record<string, Directive<any, any>>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45902,
                            45940
                          ]
                        }
                      ],
                      "schema": "Record<string, Directive<any, any>>"
                    },
                    "provides": {
                      "name": "provides",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Record<string | symbol, any>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            45945,
                            45984
                          ]
                        }
                      ],
                      "schema": "Record<string | symbol, any>"
                    }
                  }
                }
              },
              "vnode": {
                "name": "vnode",
                "global": false,
                "description": "Vnode representing this component in its parent's vdom tree",
                "tags": [],
                "required": true,
                "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58731,
                      58744
                    ]
                  }
                ],
                "schema": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
              },
              "subTree": {
                "name": "subTree",
                "global": false,
                "description": "Root vnode of this component's own vdom tree",
                "tags": [],
                "required": true,
                "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58817,
                      58832
                    ]
                  }
                ],
                "schema": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
              },
              "effect": {
                "name": "effect",
                "global": false,
                "description": "Render effect instance",
                "tags": [],
                "required": true,
                "type": "ReactiveEffect<any>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58883,
                      58906
                    ]
                  }
                ],
                "schema": "ReactiveEffect<any>"
              },
              "update": {
                "name": "update",
                "global": false,
                "description": "Bound effect runner to be passed to schedulers",
                "tags": [],
                "required": true,
                "type": "SchedulerJob",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      58981,
                      59002
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "SchedulerJob",
                  "schema": {
                    "id": {
                      "name": "id",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "number",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            2125,
                            2137
                          ]
                        }
                      ],
                      "schema": "number"
                    },
                    "pre": {
                      "name": "pre",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            2142,
                            2156
                          ]
                        }
                      ],
                      "schema": "boolean"
                    },
                    "active": {
                      "name": "active",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            2161,
                            2178
                          ]
                        }
                      ],
                      "schema": "boolean"
                    },
                    "computed": {
                      "name": "computed",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            2183,
                            2202
                          ]
                        }
                      ],
                      "schema": "boolean"
                    },
                    "allowRecurse": {
                      "name": "allowRecurse",
                      "global": false,
                      "description": "Indicates whether the effect is allowed to recursively trigger itself\nwhen managed by the scheduler.\n\nBy default, a job cannot trigger itself because some built-in method calls,\ne.g. Array.prototype.push actually performs reads as well (#1740) which\ncan lead to confusing infinite loops.\nThe allowed cases are component update functions and watch callbacks.\nComponent update functions may update child component props, which in turn\ntrigger flush: \"pre\" watch callbacks that mutates state that the parent\nrelies on (#1801). Watch callbacks doesn't track its dependencies so if it\ntriggers itself again, it's likely intentional and it is the user's\nresponsibility to perform recursive state mutation that eventually\nstabilizes (#1727).",
                      "tags": [],
                      "required": false,
                      "type": "boolean",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            3048,
                            3071
                          ]
                        }
                      ],
                      "schema": "boolean"
                    },
                    "ownerInstance": {
                      "name": "ownerInstance",
                      "global": false,
                      "description": "Attached by renderer.ts when setting up a component's render effect\nUsed to obtain component information when reporting max recursive updates.\ndev only.",
                      "tags": [],
                      "required": false,
                      "type": "ComponentInternalInstance",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            3266,
                            3308
                          ]
                        }
                      ],
                      "schema": "ComponentInternalInstance"
                    }
                  }
                }
              },
              "proxy": {
                "name": "proxy",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59007,
                      59045
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>",
                  "schema": {
                    "$": {
                      "name": "$",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ComponentInternalInstance",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8273,
                            8302
                          ]
                        }
                      ],
                      "schema": "ComponentInternalInstance"
                    },
                    "$data": {
                      "name": "$data",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "{}",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8307,
                            8316
                          ]
                        }
                      ],
                      "schema": "{}"
                    },
                    "$props": {
                      "name": "$props",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "{}",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8321,
                            8461
                          ]
                        }
                      ],
                      "schema": "{}"
                    },
                    "$attrs": {
                      "name": "$attrs",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Data",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8466,
                            8479
                          ]
                        }
                      ],
                      "schema": "Data"
                    },
                    "$refs": {
                      "name": "$refs",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Data",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8484,
                            8496
                          ]
                        }
                      ],
                      "schema": "Data"
                    },
                    "$slots": {
                      "name": "$slots",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "Readonly<InternalSlots>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8501,
                            8528
                          ]
                        }
                      ],
                      "schema": "Readonly<InternalSlots>"
                    },
                    "$root": {
                      "name": "$root",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8533,
                            8571
                          ]
                        }
                      ],
                      "schema": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>"
                    },
                    "$parent": {
                      "name": "$parent",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8576,
                            8616
                          ]
                        }
                      ],
                      "schema": "ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>"
                    },
                    "$emit": {
                      "name": "$emit",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "(event: string, ...args: any[]) => void",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8621,
                            8638
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "event",
                        "type": "(event: string, ...args: any[]): void",
                        "schema": {}
                      }
                    },
                    "$el": {
                      "name": "$el",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "any",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8643,
                            8652
                          ]
                        }
                      ],
                      "schema": "any"
                    },
                    "$options": {
                      "name": "$options",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}> & MergedComponentOptionsOverride",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8657,
                            8708
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "object",
                        "type": "ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}> & MergedComponentOptionsOverride",
                        "schema": {
                          "setup": {
                            "name": "setup",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30406,
                                  30632
                                ]
                              }
                            ],
                            "schema": "(this: void, props: LooseRequired<any>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: ((event: unknown, ...args: any[]) => void) | ((event: string, ...args: any[]) => void); expose: <Exposed extends Record<string, any> = Record<...>>(exposed?: Exposed) => void; }) => any"
                          },
                          "name": {
                            "name": "name",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "string",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30637,
                                  30651
                                ]
                              }
                            ],
                            "schema": "string"
                          },
                          "template": {
                            "name": "template",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "string | object",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30656,
                                  30683
                                ]
                              }
                            ],
                            "schema": "string | object"
                          },
                          "render": {
                            "name": "render",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Function",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30688,
                                  30706
                                ]
                              }
                            ],
                            "schema": "Function"
                          },
                          "components": {
                            "name": "components",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30711,
                                  30750
                                ]
                              }
                            ],
                            "schema": "Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"
                          },
                          "directives": {
                            "name": "directives",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Record<string, Directive<any, any>>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30755,
                                  30794
                                ]
                              }
                            ],
                            "schema": "Record<string, Directive<any, any>>"
                          },
                          "inheritAttrs": {
                            "name": "inheritAttrs",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30799,
                                  30822
                                ]
                              }
                            ],
                            "schema": "boolean"
                          },
                          "emits": {
                            "name": "emits",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30827,
                                  30863
                                ]
                              }
                            ],
                            "schema": "any"
                          },
                          "slots": {
                            "name": "slots",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "{}",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30868,
                                  30878
                                ]
                              }
                            ],
                            "schema": "{}"
                          },
                          "expose": {
                            "name": "expose",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "string[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30883,
                                  30901
                                ]
                              }
                            ],
                            "schema": "string[]"
                          },
                          "serverPrefetch": {
                            "name": "serverPrefetch",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "() => void | Promise<any>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30906,
                                  30945
                                ]
                              }
                            ],
                            "schema": "() => void | Promise<any>"
                          },
                          "compilerOptions": {
                            "name": "compilerOptions",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "RuntimeCompilerOptions",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30950,
                                  30991
                                ]
                              }
                            ],
                            "schema": "RuntimeCompilerOptions"
                          },
                          "call": {
                            "name": "call",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(this: unknown, ...args: unknown[]) => never",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  30996,
                                  31048
                                ]
                              }
                            ],
                            "schema": "(this: unknown, ...args: unknown[]) => never"
                          },
                          "___isFragment": {
                            "name": "___isFragment",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "never",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  31053,
                                  31074
                                ]
                              }
                            ],
                            "schema": "never"
                          },
                          "___isTeleport": {
                            "name": "___isTeleport",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "never",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  31079,
                                  31100
                                ]
                              }
                            ],
                            "schema": "never"
                          },
                          "___isSuspense": {
                            "name": "___isSuspense",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "never",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  31105,
                                  31126
                                ]
                              }
                            ],
                            "schema": "never"
                          },
                          "___defaults": {
                            "name": "___defaults",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "{}",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  31131,
                                  31153
                                ]
                              }
                            ],
                            "schema": "{}"
                          },
                          "compatConfig": {
                            "name": "compatConfig",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "CompatConfig",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  35716,
                                  35744
                                ]
                              }
                            ],
                            "schema": "CompatConfig"
                          },
                          "data": {
                            "name": "data",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(this: any, vm: any) => any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  35773,
                                  35958
                                ]
                              }
                            ],
                            "schema": "(this: any, vm: any) => any"
                          },
                          "computed": {
                            "name": "computed",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  35963,
                                  35976
                                ]
                              }
                            ],
                            "schema": "any"
                          },
                          "methods": {
                            "name": "methods",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  35981,
                                  35993
                                ]
                              }
                            ],
                            "schema": "any"
                          },
                          "watch": {
                            "name": "watch",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "ComponentWatchOptions",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  35998,
                                  36028
                                ]
                              }
                            ],
                            "schema": "ComponentWatchOptions"
                          },
                          "provide": {
                            "name": "provide",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "ComponentProvideOptions",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36033,
                                  36067
                                ]
                              }
                            ],
                            "schema": "ComponentProvideOptions"
                          },
                          "inject": {
                            "name": "inject",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "{} | string[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36072,
                                  36090
                                ]
                              }
                            ],
                            "schema": "{} | string[]"
                          },
                          "filters": {
                            "name": "filters",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "Record<string, Function>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36095,
                                  36130
                                ]
                              }
                            ],
                            "schema": "Record<string, Function>"
                          },
                          "mixins": {
                            "name": "mixins",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "any[]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36135,
                                  36152
                                ]
                              }
                            ],
                            "schema": "any[]"
                          },
                          "extends": {
                            "name": "extends",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "any",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36157,
                                  36175
                                ]
                              }
                            ],
                            "schema": "any"
                          },
                          "beforeCreate": {
                            "name": "beforeCreate",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36180,
                                  36202
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37269,
                                  37295
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "created": {
                            "name": "created",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36207,
                                  36224
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37300,
                                  37321
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeMount": {
                            "name": "beforeMount",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36229,
                                  36250
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37326,
                                  37351
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "mounted": {
                            "name": "mounted",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36255,
                                  36272
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37356,
                                  37377
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeUpdate": {
                            "name": "beforeUpdate",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36277,
                                  36299
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37382,
                                  37408
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "updated": {
                            "name": "updated",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36304,
                                  36321
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37413,
                                  37434
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "activated": {
                            "name": "activated",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36326,
                                  36345
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37439,
                                  37462
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "deactivated": {
                            "name": "deactivated",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36350,
                                  36371
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37467,
                                  37492
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeDestroy": {
                            "name": "beforeDestroy",
                            "global": false,
                            "description": "",
                            "tags": [
                              {
                                "name": "deprecated",
                                "text": "use `beforeUnmount` instead"
                              },
                              {
                                "name": "deprecated",
                                "text": "use `beforeUnmount` instead"
                              }
                            ],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36427,
                                  36450
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37548,
                                  37575
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeUnmount": {
                            "name": "beforeUnmount",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36455,
                                  36478
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37580,
                                  37607
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "destroyed": {
                            "name": "destroyed",
                            "global": false,
                            "description": "",
                            "tags": [
                              {
                                "name": "deprecated",
                                "text": "use `unmounted` instead"
                              },
                              {
                                "name": "deprecated",
                                "text": "use `unmounted` instead"
                              }
                            ],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36530,
                                  36549
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37659,
                                  37682
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "unmounted": {
                            "name": "unmounted",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "(() => void) & MergedHook<() => void>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36554,
                                  36573
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37687,
                                  37710
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "(() => void) & MergedHook<() => void>",
                              "schema": {
                                "0": {
                                  "kind": "event",
                                  "type": "(): void"
                                },
                                "1": {
                                  "kind": "array",
                                  "type": "(() => void) & (() => void)[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "renderTracked": {
                            "name": "renderTracked",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "DebuggerHook & MergedHook<DebuggerHook>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36578,
                                  36607
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37715,
                                  37756
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "DebuggerHook & MergedHook<DebuggerHook>",
                              "schema": {
                                "0": "DebuggerHook",
                                "1": {
                                  "kind": "array",
                                  "type": "DebuggerHook & DebuggerHook[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "renderTriggered": {
                            "name": "renderTriggered",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "DebuggerHook & MergedHook<DebuggerHook>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36612,
                                  36643
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37761,
                                  37804
                                ]
                              }
                            ],
                            "schema": "DebuggerHook & MergedHook<DebuggerHook>"
                          },
                          "errorCaptured": {
                            "name": "errorCaptured",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "ErrorCapturedHook<unknown> & MergedHook<ErrorCapturedHook<unknown>>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36648,
                                  36682
                                ]
                              },
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37809,
                                  37855
                                ]
                              }
                            ],
                            "schema": {
                              "kind": "enum",
                              "type": "ErrorCapturedHook<unknown> & MergedHook<ErrorCapturedHook<unknown>>",
                              "schema": {
                                "0": "ErrorCapturedHook<unknown>",
                                "1": {
                                  "kind": "array",
                                  "type": "ErrorCapturedHook<unknown> & ErrorCapturedHook<unknown>[]",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "delimiters": {
                            "name": "delimiters",
                            "global": false,
                            "description": "runtime compile only",
                            "tags": [
                              {
                                "name": "deprecated",
                                "text": "use `compilerOptions.delimiters` instead."
                              }
                            ],
                            "required": false,
                            "type": "[string, string]",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  36792,
                                  36822
                                ]
                              }
                            ],
                            "schema": "[string, string]"
                          },
                          "___differentiator": {
                            "name": "___differentiator",
                            "global": false,
                            "description": "#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",
                            "tags": [],
                            "required": false,
                            "type": "string | number | symbol",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  37132,
                                  37179
                                ]
                              }
                            ],
                            "schema": "string | number | symbol"
                          },
                          "___isBuiltIn": {
                            "name": "___isBuiltIn",
                            "global": false,
                            "description": "Compat build only, for bailing out of certain compatibility behavior",
                            "tags": [],
                            "required": false,
                            "type": "boolean",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  56084,
                                  56106
                                ]
                              }
                            ],
                            "schema": "boolean"
                          },
                          "___file": {
                            "name": "___file",
                            "global": false,
                            "description": "This one should be exposed so that devtools can make use of it",
                            "tags": [],
                            "required": false,
                            "type": "string",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  56197,
                                  56213
                                ]
                              }
                            ],
                            "schema": "string"
                          },
                          "___name": {
                            "name": "___name",
                            "global": false,
                            "description": "name inferred from filename",
                            "tags": [],
                            "required": false,
                            "type": "string",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                                "range": [
                                  56269,
                                  56285
                                ]
                              }
                            ],
                            "schema": "string"
                          },
                          "beforeRouteEnter": {
                            "name": "beforeRouteEnter",
                            "global": false,
                            "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuardWithThis<undefined>",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                "range": [
                                  60091,
                                  60218
                                ]
                              }
                            ],
                            "schema": "NavigationGuardWithThis<undefined>"
                          },
                          "beforeRouteUpdate": {
                            "name": "beforeRouteUpdate",
                            "global": false,
                            "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuard",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                "range": [
                                  60665,
                                  60775
                                ]
                              }
                            ],
                            "schema": "NavigationGuard"
                          },
                          "beforeRouteLeave": {
                            "name": "beforeRouteLeave",
                            "global": false,
                            "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuard",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                                "range": [
                                  61140,
                                  61248
                                ]
                              }
                            ],
                            "schema": "NavigationGuard"
                          },
                          "head": {
                            "name": "head",
                            "global": false,
                            "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                            "tags": [],
                            "required": false,
                            "type": "(nuxtApp: NuxtApp) => UseHeadInput",
                            "declarations": [
                              {
                                "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                                "range": [
                                  1615,
                                  1652
                                ]
                              }
                            ],
                            "schema": "(nuxtApp: NuxtApp) => UseHeadInput"
                          }
                        }
                      }
                    },
                    "$forceUpdate": {
                      "name": "$forceUpdate",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "() => void",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8713,
                            8738
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "event",
                        "type": "(): void"
                      }
                    },
                    "$nextTick": {
                      "name": "$nextTick",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "<T = void, R = void>(this: T, fn?: (this: T) => R) => Promise<Awaited<R>>",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8743,
                            8770
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "event",
                        "type": "<T = void, R = void>(this: T, fn?: (this: T) => R): Promise<Awaited<R>>",
                        "schema": {}
                      }
                    },
                    "$watch": {
                      "name": "$watch",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R, args_2: OnCleanup) => any : (args_0: any, args_1: any, args_2: OnCleanup) => any, options?: WatchOptions<...>) => WatchStopHandle",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                          "range": [
                            8775,
                            8999
                          ]
                        }
                      ],
                      "schema": {
                        "kind": "event",
                        "type": "<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R, args_2: OnCleanup) => any : (args_0: any, args_1: any, args_2: OnCleanup) => any, options?: WatchOptions<...>): WatchStopHandle",
                        "schema": {}
                      }
                    },
                    "$route": {
                      "name": "$route",
                      "global": false,
                      "description": "Normalized current location. See {@link RouteLocationNormalizedLoaded}.",
                      "tags": [],
                      "required": true,
                      "type": "RouteLocationNormalizedLoadedGeneric",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                          "range": [
                            61400,
                            61501
                          ]
                        }
                      ],
                      "schema": "RouteLocationNormalizedLoadedGeneric"
                    },
                    "$router": {
                      "name": "$router",
                      "global": false,
                      "description": "{@link Router} instance used by the application.",
                      "tags": [],
                      "required": true,
                      "type": "Router",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/vue-router/dist/vue-router.d.ts",
                          "range": [
                            61578,
                            61646
                          ]
                        }
                      ],
                      "schema": "Router"
                    },
                    "$nuxt": {
                      "name": "$nuxt",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "NuxtApp",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                          "range": [
                            1298,
                            1312
                          ]
                        }
                      ],
                      "schema": "NuxtApp"
                    },
                    "$colorMode": {
                      "name": "$colorMode",
                      "global": false,
                      "description": "",
                      "tags": [],
                      "required": true,
                      "type": "ColorModeInstance",
                      "declarations": [
                        {
                          "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/color-mode/dist/runtime/types.d.ts",
                          "range": [
                            676,
                            706
                          ]
                        }
                      ],
                      "schema": "ColorModeInstance"
                    }
                  }
                }
              },
              "exposed": {
                "name": "exposed",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Record<string, any>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59050,
                      59086
                    ]
                  }
                ],
                "schema": "Record<string, any>"
              },
              "exposeProxy": {
                "name": "exposeProxy",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Record<string, any>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59091,
                      59131
                    ]
                  }
                ],
                "schema": "Record<string, any>"
              },
              "data": {
                "name": "data",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Data",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59136,
                      59147
                    ]
                  }
                ],
                "schema": "Data"
              },
              "props": {
                "name": "props",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Data",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59152,
                      59164
                    ]
                  }
                ],
                "schema": "Data"
              },
              "attrs": {
                "name": "attrs",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Data",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59169,
                      59181
                    ]
                  }
                ],
                "schema": "Data"
              },
              "slots": {
                "name": "slots",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "InternalSlots",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59186,
                      59207
                    ]
                  }
                ],
                "schema": {
                  "kind": "object",
                  "type": "InternalSlots",
                  "schema": {}
                }
              },
              "refs": {
                "name": "refs",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Data",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59212,
                      59223
                    ]
                  }
                ],
                "schema": "Data"
              },
              "emit": {
                "name": "emit",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(event: string, ...args: any[]) => void",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59228,
                      59241
                    ]
                  }
                ],
                "schema": {
                  "kind": "event",
                  "type": "(event: string, ...args: any[]): void",
                  "schema": {}
                }
              },
              "attrsProxy": {
                "name": "attrsProxy",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Data",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59246,
                      59270
                    ]
                  }
                ],
                "schema": "Data"
              },
              "slotsProxy": {
                "name": "slotsProxy",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Readonly<InternalSlots>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59275,
                      59300
                    ]
                  }
                ],
                "schema": "Readonly<InternalSlots>"
              },
              "isMounted": {
                "name": "isMounted",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59305,
                      59324
                    ]
                  }
                ],
                "schema": "boolean"
              },
              "isUnmounted": {
                "name": "isUnmounted",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59329,
                      59350
                    ]
                  }
                ],
                "schema": "boolean"
              },
              "isDeactivated": {
                "name": "isDeactivated",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "boolean",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
                    "range": [
                      59355,
                      59378
                    ]
                  }
                ],
                "schema": "boolean"
              },
              "_nuxtOnBeforeMountCbs": {
                "name": "_nuxtOnBeforeMountCbs",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "Function[]",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                    "range": [
                      1361,
                      1394
                    ]
                  }
                ],
                "schema": {
                  "kind": "array",
                  "type": "Function[]",
                  "schema": {
                    "0": "Function"
                  }
                }
              },
              "_nuxtIdIndex": {
                "name": "_nuxtIdIndex",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "Record<string, number>",
                "declarations": [
                  {
                    "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt/dist/app/types/augments.d.ts",
                    "range": [
                      1399,
                      1436
                    ]
                  }
                ],
                "schema": "Record<string, number>"
              }
            }
          }
        }
      ]
    }
  },
  "ProseCodeInline": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/Prose/ProseCodeInline.vue",
    "pascalName": "ProseCodeInline",
    "kebabName": "prose-code-inline",
    "chunkName": "components/prose-code-inline",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/Prose/ProseCodeInline.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProseCodeInline.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProsePre": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "pascalName": "ProsePre",
    "kebabName": "prose-pre",
    "chunkName": "components/prose-pre",
    "shortPath": "../node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "code",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                248,
                293
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        },
        {
          "name": "language",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                297,
                348
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "filename",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                352,
                403
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "highlights",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "number[]",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                407,
                481
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          },
          "default": "[]"
        },
        {
          "name": "meta",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                485,
                532
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "class",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                536,
                584
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "style",
          "type": "string | Record<string, any>",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                588,
                646
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | Record<string, any>",
            "schema": {
              "0": "string",
              "1": "Record<string, any>"
            }
          }
        },
        {
          "name": "code",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                248,
                293
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "language",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                297,
                348
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "filename",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                352,
                403
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "highlights",
          "type": "number[]",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                407,
                481
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "number[]",
            "schema": {
              "0": "number"
            }
          }
        },
        {
          "name": "meta",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/content/dist/runtime/components/Prose/ProsePre.vue",
              "range": [
                485,
                532
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseA": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
    "pascalName": "ProseA",
    "kebabName": "prose-a",
    "chunkName": "components/prose-a",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "href",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
              "range": [
                183,
                228
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        },
        {
          "name": "target",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
              "range": [
                232,
                399
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
            "schema": {
              "0": "\"_blank\"",
              "1": "\"_parent\"",
              "2": "\"_self\"",
              "3": "\"_top\""
            }
          },
          "default": "undefined"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "href",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
              "range": [
                183,
                228
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue",
              "range": [
                232,
                399
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
            "schema": {
              "0": "\"_blank\"",
              "1": "\"_parent\"",
              "2": "\"_self\"",
              "3": "\"_top\""
            }
          }
        }
      ]
    }
  },
  "ProseBlockquote": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseBlockquote.vue",
    "pascalName": "ProseBlockquote",
    "kebabName": "prose-blockquote",
    "chunkName": "components/prose-blockquote",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseBlockquote.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseBlockquote.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseEm": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseEm.vue",
    "pascalName": "ProseEm",
    "kebabName": "prose-em",
    "chunkName": "components/prose-em",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseEm.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseEm.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseH5": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
    "pascalName": "ProseH5",
    "kebabName": "prose-h5",
    "chunkName": "components/prose-h5",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
              "range": [
                264,
                275
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
              "range": [
                264,
                275
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue",
              "range": [
                264,
                275
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseH6": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
    "pascalName": "ProseH6",
    "kebabName": "prose-h6",
    "chunkName": "components/prose-h6",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "id",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
              "range": [
                264,
                275
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
              "range": [
                264,
                275
              ]
            }
          ],
          "schema": "string"
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "id",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue",
              "range": [
                264,
                275
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseHr": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseHr.vue",
    "pascalName": "ProseHr",
    "kebabName": "prose-hr",
    "chunkName": "components/prose-hr",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseHr.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseHr.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [],
      "events": [],
      "exposed": []
    }
  },
  "ProseImg": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
    "pascalName": "ProseImg",
    "kebabName": "prose-img",
    "chunkName": "components/prose-img",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                440,
                484
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        },
        {
          "name": "alt",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                488,
                532
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        },
        {
          "name": "width",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | number",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                536,
                599
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number",
            "schema": {
              "0": "string",
              "1": "number"
            }
          },
          "default": "undefined"
        },
        {
          "name": "height",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | number",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                603,
                667
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number",
            "schema": {
              "0": "string",
              "1": "number"
            }
          },
          "default": "undefined"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                440,
                484
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "alt",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                488,
                532
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "width",
          "type": "string | number",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                536,
                599
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number",
            "schema": {
              "0": "string",
              "1": "number"
            }
          }
        },
        {
          "name": "height",
          "type": "string | number",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue",
              "range": [
                603,
                667
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | number",
            "schema": {
              "0": "string",
              "1": "number"
            }
          }
        }
      ]
    }
  },
  "ProseLi": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseLi.vue",
    "pascalName": "ProseLi",
    "kebabName": "prose-li",
    "chunkName": "components/prose-li",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseLi.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseLi.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseOl": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseOl.vue",
    "pascalName": "ProseOl",
    "kebabName": "prose-ol",
    "chunkName": "components/prose-ol",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseOl.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseOl.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseP": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseP.vue",
    "pascalName": "ProseP",
    "kebabName": "prose-p",
    "chunkName": "components/prose-p",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseP.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseP.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseScript": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "pascalName": "ProseScript",
    "kebabName": "prose-script",
    "chunkName": "components/prose-script",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "src",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
              "range": [
                285,
                329
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "src",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue",
              "range": [
                285,
                329
              ]
            }
          ],
          "schema": "string"
        }
      ]
    }
  },
  "ProseStrong": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseStrong.vue",
    "pascalName": "ProseStrong",
    "kebabName": "prose-strong",
    "chunkName": "components/prose-strong",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseStrong.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseStrong.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTable": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTable.vue",
    "pascalName": "ProseTable",
    "kebabName": "prose-table",
    "chunkName": "components/prose-table",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTable.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTable.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTbody": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTbody.vue",
    "pascalName": "ProseTbody",
    "kebabName": "prose-tbody",
    "chunkName": "components/prose-tbody",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTbody.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTbody.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTd": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTd.vue",
    "pascalName": "ProseTd",
    "kebabName": "prose-td",
    "chunkName": "components/prose-td",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTd.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTd.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTh": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTh.vue",
    "pascalName": "ProseTh",
    "kebabName": "prose-th",
    "chunkName": "components/prose-th",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTh.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTh.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseThead": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseThead.vue",
    "pascalName": "ProseThead",
    "kebabName": "prose-thead",
    "chunkName": "components/prose-thead",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseThead.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseThead.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseTr": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTr.vue",
    "pascalName": "ProseTr",
    "kebabName": "prose-tr",
    "chunkName": "components/prose-tr",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTr.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTr.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "ProseUl": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseUl.vue",
    "pascalName": "ProseUl",
    "kebabName": "prose-ul",
    "chunkName": "components/prose-ul",
    "shortPath": "../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseUl.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseUl.vue",
    "meta": {
      "type": 1,
      "props": [],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        }
      ]
    }
  },
  "UButton": {
    "mode": "all",
    "global": true,
    "prefetch": false,
    "preload": false,
    "filePath": "node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue",
    "pascalName": "UButton",
    "kebabName": "u-button",
    "chunkName": "components/u-button",
    "shortPath": "../node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue",
    "export": "default",
    "priority": 0,
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue",
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "replace",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8034,
                8057
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "size",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "ButtonSize",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8062,
                8079
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "ButtonSize",
            "schema": {
              "0": "\"md\"",
              "1": "\"2xs\"",
              "2": "\"xs\"",
              "3": "\"sm\"",
              "4": "\"lg\"",
              "5": "\"xl\""
            }
          },
          "default": "config.default.size"
        },
        {
          "name": "type",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8084,
                8097
              ]
            }
          ],
          "schema": "string",
          "default": "\"button\""
        },
        {
          "name": "label",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8102,
                8116
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "target",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8160,
                8182
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "rel",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8187,
                8206
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "noRel",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8211,
                8232
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "prefetch",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8237,
                8261
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "noPrefetch",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8266,
                8292
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "activeClass",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8297,
                8324
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "exactActiveClass",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8329,
                8361
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "prefetchedClass",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8366,
                8397
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "ariaCurrentValue",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8402,
                8434
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "external",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "NuxtLinkProps",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8439,
                8463
              ]
            }
          ],
          "schema": {
            "kind": "array",
            "type": "NuxtLinkProps",
            "schema": {}
          }
        },
        {
          "name": "color",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8490,
                8501
              ]
            }
          ],
          "schema": "any",
          "default": "config.default.color"
        },
        {
          "name": "variant",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "ButtonVariant",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8506,
                8529
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "ButtonVariant",
            "schema": {
              "0": "\"link\"",
              "1": "\"solid\"",
              "2": "\"outline\"",
              "3": "\"soft\"",
              "4": "\"ghost\""
            }
          },
          "default": "config.default.variant"
        },
        {
          "name": "to",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "RouteLocationRaw",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8557,
                8578
              ]
            }
          ],
          "schema": "RouteLocationRaw"
        },
        {
          "name": "href",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "RouteLocationRaw",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8583,
                8606
              ]
            }
          ],
          "schema": "RouteLocationRaw"
        },
        {
          "name": "ui",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "any",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8611,
                8619
              ]
            }
          ],
          "schema": "any",
          "default": "{}"
        },
        {
          "name": "icon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8687,
                8700
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "loadingIcon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8705,
                8725
              ]
            }
          ],
          "schema": "string",
          "default": "config.default.loadingIcon"
        },
        {
          "name": "leadingIcon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8730,
                8750
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "trailingIcon",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8755,
                8776
              ]
            }
          ],
          "schema": "string",
          "default": "null"
        },
        {
          "name": "truncate",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8137,
                8155
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "leading",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8468,
                8485
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "disabled",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8534,
                8552
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "block",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8624,
                8639
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "loading",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8644,
                8661
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "padded",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8666,
                8682
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "true"
        },
        {
          "name": "trailing",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8781,
                8799
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        },
        {
          "name": "square",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "boolean",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                8804,
                8820
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          },
          "default": "false"
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "replace",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7594,
                7730
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "size",
          "type": "ButtonSize",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4985,
                5106
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "ButtonSize",
            "schema": {
              "0": "\"md\"",
              "1": "\"2xs\"",
              "2": "\"xs\"",
              "3": "\"sm\"",
              "4": "\"lg\"",
              "5": "\"xl\""
            }
          }
        },
        {
          "name": "class",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6019,
                6090
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "type",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4506,
                4578
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "label",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4663,
                4734
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5363,
                5433
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "rel",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6588,
                6720
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "loading",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4739,
                4816
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "href",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6307,
                6443
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "target",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6448,
                6583
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "block",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4583,
                4658
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4821,
                4899
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "padded",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4904,
                4980
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "color",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5111,
                5226
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "variant",
          "type": "ButtonVariant",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5231,
                5358
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "ButtonVariant",
            "schema": {
              "0": "\"link\"",
              "1": "\"solid\"",
              "2": "\"outline\"",
              "3": "\"soft\"",
              "4": "\"ghost\""
            }
          }
        },
        {
          "name": "loadingIcon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5438,
                5520
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "leadingIcon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5525,
                5602
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "trailingIcon",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5607,
                5685
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "trailing",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5690,
                5768
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "leading",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5773,
                5850
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "square",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5855,
                5931
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "truncate",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                5936,
                6014
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "to",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6168,
                6302
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "noRel",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6725,
                6859
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "prefetch",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                6864,
                7001
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "noPrefetch",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7006,
                7145
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "activeClass",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7150,
                7290
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "exactActiveClass",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7295,
                7440
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "prefetchedClass",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7445,
                7589
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "ariaCurrentValue",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7735,
                7880
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "external",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                7885,
                8022
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "ui",
          "type": "any",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3685,
                3720
              ]
            }
          ],
          "schema": "any"
        },
        {
          "name": "attrs",
          "type": "Pick<{ [x: string]: unknown; }, string>",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3725,
                3811
              ]
            }
          ],
          "schema": "Pick<{ [x: string]: unknown; }, string>"
        },
        {
          "name": "isLeading",
          "type": "string | true",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3816,
                3868
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | true",
            "schema": {
              "0": "string",
              "1": "true"
            }
          }
        },
        {
          "name": "isTrailing",
          "type": "string | true",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3873,
                3926
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "string | true",
            "schema": {
              "0": "string",
              "1": "true"
            }
          }
        },
        {
          "name": "isSquare",
          "type": "boolean",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3931,
                3976
              ]
            }
          ],
          "schema": {
            "kind": "enum",
            "type": "boolean",
            "schema": {
              "0": "false",
              "1": "true"
            }
          }
        },
        {
          "name": "buttonClass",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                3981,
                4028
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "leadingIconName",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4033,
                4096
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "trailingIconName",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4101,
                4165
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "leadingIconClass",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4170,
                4222
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "trailingIconClass",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4227,
                4280
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "linkProps",
          "type": "{}",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue.d.ts",
              "range": [
                4285,
                4326
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ]
    }
  },
  "Icon": {
    "export": "default",
    "chunkName": "components/icon",
    "global": true,
    "kebabName": "icon",
    "pascalName": "Icon",
    "prefetch": false,
    "preload": false,
    "mode": "all",
    "shortPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
    "priority": 0,
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "name",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
              "range": [
                669,
                717
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
              "range": [
                669,
                717
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "size",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
              "range": [
                721,
                766
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        }
      ],
      "slots": [
        {
          "name": "default",
          "type": "{}",
          "description": "",
          "declarations": [],
          "schema": {
            "kind": "object",
            "type": "{}",
            "schema": {}
          }
        }
      ],
      "events": [],
      "exposed": [
        {
          "name": "$slots",
          "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
              "range": [
                8501,
                8528
              ]
            }
          ],
          "schema": {
            "kind": "object",
            "type": "Readonly<InternalSlots> & { default?(_: {}): any; }",
            "schema": {
              "default": {
                "name": "default",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "(_: {}) => any",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(_: {}): any",
                  "schema": {}
                }
              }
            }
          }
        },
        {
          "name": "size",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
              "range": [
                721,
                766
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue",
              "range": [
                669,
                717
              ]
            }
          ],
          "schema": "string"
        }
      ]
    },
    "name": "Icon",
    "filePath": "node_modules/nuxt-icon/dist/runtime/Icon.vue",
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/Icon.vue"
  },
  "IconCSS": {
    "export": "default",
    "chunkName": "components/icon-css",
    "global": true,
    "kebabName": "icon-css",
    "pascalName": "IconCSS",
    "prefetch": false,
    "preload": false,
    "mode": "all",
    "shortPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
    "priority": 0,
    "meta": {
      "type": 1,
      "props": [
        {
          "name": "name",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
              "range": [
                387,
                435
              ]
            },
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
              "range": [
                387,
                435
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "size",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
              "range": [
                439,
                484
              ]
            }
          ],
          "schema": "string",
          "default": "\"\""
        }
      ],
      "slots": [],
      "events": [],
      "exposed": [
        {
          "name": "size",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
              "range": [
                439,
                484
              ]
            }
          ],
          "schema": "string"
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "declarations": [
            {
              "file": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
              "range": [
                387,
                435
              ]
            }
          ],
          "schema": "string"
        }
      ]
    },
    "name": "IconCSS",
    "filePath": "node_modules/nuxt-icon/dist/runtime/IconCSS.vue",
    "fullPath": "C:/Users/ADMIN/WebstormProjects/nuxt-ui-pro-saas/node_modules/nuxt-icon/dist/runtime/IconCSS.vue"
  }
};

const _xyawK5 = eventHandler(async () => {
  const componentsIgnoredPrefix = ["Content", "DocumentDriven", "Markdown"];
  const filteredComponents = Object.values(components).filter((c) => c.global && !componentsIgnoredPrefix.some((prefix) => c.pascalName.startsWith(prefix))).map(({ pascalName, filePath, meta }) => {
    return {
      name: pascalName,
      path: filePath,
      meta: {
        props: meta.props,
        slots: meta.slots,
        events: meta.events
      }
    };
  });
  const appConfig = useAppConfig();
  const runtimeConfig = useRuntimeConfig();
  const { contentSchema, appConfigSchema, studio, content } = runtimeConfig;
  const { sources, ignores, locales, defaultLocale, highlight, navigation, documentDriven, experimental } = content;
  const safeSources = {};
  Object.keys(sources).forEach((name) => {
    const { driver, prefix, base, repo, branch, dir } = sources[name] || {};
    safeSources[name] = {
      driver,
      prefix,
      base,
      repo,
      branch,
      dir
    };
  });
  return {
    // Studio version
    version: studio?.version,
    tokens: studio?.publicToken,
    gitInfo: studio?.gitInfo || {},
    // nuxt.schema for Nuxt Content frontmatter
    contentSchema: contentSchema || {},
    // app.config
    appConfigSchema: appConfigSchema || {},
    appConfig,
    // @nuxt/content
    content: { sources: safeSources, ignores, locales, defaultLocale, highlight, navigation, documentDriven, experimental },
    // nuxt-component-meta
    components: filteredComponents
  };
});

const _RuzGKw = defineEventHandler((event) => {
  appendHeader(event, "Access-Control-Allow-Origin", "*");
  const componentName = (event.context.params["component?"] || "").replace(/\.json$/, "");
  if (componentName) {
    const meta = components[pascalCase(componentName)];
    if (!meta) {
      throw createError$1({
        statusMessage: "Components not found!",
        statusCode: 404,
        data: {
          description: "Please make sure you are looking for correct component"
        }
      });
    }
    return meta;
  }
  return components;
});

const _zyXcRf = defineEventHandler(async (e) => {
  if (e.context.siteConfig)
    return;
  const runtimeConfig = useRuntimeConfig(e);
  const config = runtimeConfig["nuxt-site-config"];
  const nitroApp = useNitroApp();
  const siteConfig = createSiteConfigStack({
    debug: config.debug
  });
  const appConfig = useAppConfig(e);
  const nitroOrigin = useNitroOrigin(e);
  e.context.siteConfigNitroOrigin = nitroOrigin;
  {
    siteConfig.push({
      _context: "nitro:init",
      _priority: -4,
      url: nitroOrigin
    });
  }
  siteConfig.push({
    _context: "runtimeEnv",
    _priority: 0,
    ...runtimeConfig.site || {},
    ...runtimeConfig.public.site || {},
    // @ts-expect-error untyped
    ...envSiteConfig(globalThis._importMeta_.env)
    // just in-case, shouldn't be needed
  });
  const buildStack = config.stack || [];
  buildStack.forEach((c) => siteConfig.push(c));
  if (appConfig.site) {
    siteConfig.push({
      _priority: -2,
      _context: "app:config",
      ...appConfig.site
    });
  }
  if (e.context._nitro.routeRules.site) {
    siteConfig.push({
      _context: "route-rules",
      ...e.context._nitro.routeRules.site
    });
  }
  const ctx = { siteConfig, event: e };
  await nitroApp.hooks.callHook("site-config:init", ctx);
  e.context.siteConfig = ctx.siteConfig;
});

const get = (obj, path) => path.split(".").reduce((acc, part) => acc && acc[part], obj);
const _pick = (obj, condition) => Object.keys(obj).filter(condition).reduce((newObj, key) => Object.assign(newObj, { [key]: obj[key] }), {});
const omit = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => !keys.includes(key)) : obj;
const apply = (fn) => (data) => Array.isArray(data) ? data.map((item) => fn(item)) : fn(data);
const detectProperties = (keys) => {
  const prefixes = [];
  const properties = [];
  for (const key of keys) {
    if (["$", "_"].includes(key)) {
      prefixes.push(key);
    } else {
      properties.push(key);
    }
  }
  return { prefixes, properties };
};
const withoutKeys = (keys = []) => (obj) => {
  if (keys.length === 0 || !obj) {
    return obj;
  }
  const { prefixes, properties } = detectProperties(keys);
  return _pick(obj, (key) => !properties.includes(key) && !prefixes.includes(key[0]));
};
const withKeys = (keys = []) => (obj) => {
  if (keys.length === 0 || !obj) {
    return obj;
  }
  const { prefixes, properties } = detectProperties(keys);
  return _pick(obj, (key) => properties.includes(key) || prefixes.includes(key[0]));
};
const sortList = (data, params) => {
  const comperable = new Intl.Collator(params.$locale, {
    numeric: params.$numeric,
    caseFirst: params.$caseFirst,
    sensitivity: params.$sensitivity
  });
  const keys = Object.keys(params).filter((key) => !key.startsWith("$"));
  for (const key of keys) {
    data = data.sort((a, b) => {
      const values = [get(a, key), get(b, key)].map((value) => {
        if (value === null) {
          return void 0;
        }
        if (value instanceof Date) {
          return value.toISOString();
        }
        return value;
      });
      if (params[key] === -1) {
        values.reverse();
      }
      return comperable.compare(values[0], values[1]);
    });
  }
  return data;
};
const assertArray = (value, message = "Expected an array") => {
  if (!Array.isArray(value)) {
    throw new TypeError(message);
  }
};
const ensureArray = (value) => {
  return Array.isArray(value) ? value : [void 0, null].includes(value) ? [] : [value];
};

const arrayParams = ["sort", "where", "only", "without"];
function createQuery(fetcher, opts = {}) {
  const queryParams = {};
  for (const key of Object.keys(opts.initialParams || {})) {
    queryParams[key] = arrayParams.includes(key) ? ensureArray(opts.initialParams[key]) : opts.initialParams[key];
  }
  const $set = (key, fn = (v) => v) => {
    return (...values) => {
      queryParams[key] = fn(...values);
      return query;
    };
  };
  const resolveResult = (result) => {
    if (opts.legacy) {
      if (result?.surround) {
        return result.surround;
      }
      if (!result) {
        return result;
      }
      if (result?.dirConfig) {
        result.result = {
          _path: result.dirConfig?._path,
          ...result.result,
          _dir: result.dirConfig
        };
      }
      return result?._path || Array.isArray(result) || !Object.prototype.hasOwnProperty.call(result, "result") ? result : result?.result;
    }
    return result;
  };
  const query = {
    params: () => ({
      ...queryParams,
      ...queryParams.where ? { where: [...ensureArray(queryParams.where)] } : {},
      ...queryParams.sort ? { sort: [...ensureArray(queryParams.sort)] } : {}
    }),
    only: $set("only", ensureArray),
    without: $set("without", ensureArray),
    where: $set("where", (q) => [...ensureArray(queryParams.where), ...ensureArray(q)]),
    sort: $set("sort", (sort) => [...ensureArray(queryParams.sort), ...ensureArray(sort)]),
    limit: $set("limit", (v) => parseInt(String(v), 10)),
    skip: $set("skip", (v) => parseInt(String(v), 10)),
    // find
    find: () => fetcher(query).then(resolveResult),
    findOne: () => fetcher($set("first")(true)).then(resolveResult),
    count: () => fetcher($set("count")(true)).then(resolveResult),
    // locale
    locale: (_locale) => query.where({ _locale }),
    withSurround: $set("surround", (surroundQuery, options) => ({ query: surroundQuery, ...options })),
    withDirConfig: () => $set("dirConfig")(true)
  };
  if (opts.legacy) {
    query.findSurround = (surroundQuery, options) => {
      return query.withSurround(surroundQuery, options).find().then(resolveResult);
    };
    return query;
  }
  return query;
}

const defineTransformer = (transformer) => {
  return transformer;
};

function createTokenizer(parser, initialize, from) {
  let point = Object.assign(
    {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  );
  const columnStart = {};
  const resolveAllConstructs = [];
  let chunks = [];
  let stack = [];
  const effects = {
    consume,
    enter,
    exit,
    attempt: constructFactory(onsuccessfulconstruct),
    check: constructFactory(onsuccessfulcheck),
    interrupt: constructFactory(onsuccessfulcheck, {
      interrupt: true
    })
  };
  const context = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser,
    sliceStream,
    sliceSerialize,
    now,
    defineSkip,
    write
  };
  let state = initialize.tokenize.call(context, effects);
  if (initialize.resolveAll) {
    resolveAllConstructs.push(initialize);
  }
  return context;
  function write(slice) {
    chunks = push(chunks, slice);
    main();
    if (chunks[chunks.length - 1] !== null) {
      return [];
    }
    addResult(initialize, 0);
    context.events = resolveAll(resolveAllConstructs, context.events, context);
    return context.events;
  }
  function sliceSerialize(token, expandTabs) {
    return serializeChunks(sliceStream(token), expandTabs);
  }
  function sliceStream(token) {
    return sliceChunks(chunks, token);
  }
  function now() {
    return Object.assign({}, point);
  }
  function defineSkip(value) {
    columnStart[value.line] = value.column;
    accountForPotentialSkip();
  }
  function main() {
    let chunkIndex;
    while (point._index < chunks.length) {
      const chunk = chunks[point._index];
      if (typeof chunk === "string") {
        chunkIndex = point._index;
        if (point._bufferIndex < 0) {
          point._bufferIndex = 0;
        }
        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {
          go(chunk.charCodeAt(point._bufferIndex));
        }
      } else {
        go(chunk);
      }
    }
  }
  function go(code) {
    state = state(code);
  }
  function consume(code) {
    if (markdownLineEnding(code)) {
      point.line++;
      point.column = 1;
      point.offset += code === -3 ? 2 : 1;
      accountForPotentialSkip();
    } else if (code !== -1) {
      point.column++;
      point.offset++;
    }
    if (point._bufferIndex < 0) {
      point._index++;
    } else {
      point._bufferIndex++;
      if (point._bufferIndex === chunks[point._index].length) {
        point._bufferIndex = -1;
        point._index++;
      }
    }
    context.previous = code;
  }
  function enter(type, fields) {
    const token = fields || {};
    token.type = type;
    token.start = now();
    context.events.push(["enter", token, context]);
    stack.push(token);
    return token;
  }
  function exit(type) {
    const token = stack.pop();
    token.end = now();
    context.events.push(["exit", token, context]);
    return token;
  }
  function onsuccessfulconstruct(construct, info) {
    addResult(construct, info.from);
  }
  function onsuccessfulcheck(_, info) {
    info.restore();
  }
  function constructFactory(onreturn, fields) {
    return hook;
    function hook(constructs, returnState, bogusState) {
      let listOfConstructs;
      let constructIndex;
      let currentConstruct;
      let info;
      return Array.isArray(constructs) ? (
        /* c8 ignore next 1 */
        handleListOfConstructs(constructs)
      ) : "tokenize" in constructs ? handleListOfConstructs([constructs]) : handleMapOfConstructs(constructs);
      function handleMapOfConstructs(map) {
        return start;
        function start(code) {
          const def = code !== null && map[code];
          const all = code !== null && map.null;
          const list = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(def) ? def : def ? [def] : [],
            ...Array.isArray(all) ? all : all ? [all] : []
          ];
          return handleListOfConstructs(list)(code);
        }
      }
      function handleListOfConstructs(list) {
        listOfConstructs = list;
        constructIndex = 0;
        if (list.length === 0) {
          return bogusState;
        }
        return handleConstruct(list[constructIndex]);
      }
      function handleConstruct(construct) {
        return start;
        function start(code) {
          info = store();
          currentConstruct = construct;
          if (!construct.partial) {
            context.currentConstruct = construct;
          }
          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {
            return nok();
          }
          return construct.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            fields ? Object.assign(Object.create(context), fields) : context,
            effects,
            ok,
            nok
          )(code);
        }
      }
      function ok(code) {
        onreturn(currentConstruct, info);
        return returnState;
      }
      function nok(code) {
        info.restore();
        if (++constructIndex < listOfConstructs.length) {
          return handleConstruct(listOfConstructs[constructIndex]);
        }
        return bogusState;
      }
    }
  }
  function addResult(construct, from2) {
    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {
      resolveAllConstructs.push(construct);
    }
    if (construct.resolve) {
      splice(
        context.events,
        from2,
        context.events.length - from2,
        construct.resolve(context.events.slice(from2), context)
      );
    }
    if (construct.resolveTo) {
      context.events = construct.resolveTo(context.events, context);
    }
  }
  function store() {
    const startPoint = now();
    const startPrevious = context.previous;
    const startCurrentConstruct = context.currentConstruct;
    const startEventsIndex = context.events.length;
    const startStack = Array.from(stack);
    return {
      restore,
      from: startEventsIndex
    };
    function restore() {
      point = startPoint;
      context.previous = startPrevious;
      context.currentConstruct = startCurrentConstruct;
      context.events.length = startEventsIndex;
      stack = startStack;
      accountForPotentialSkip();
    }
  }
  function accountForPotentialSkip() {
    if (point.line in columnStart && point.column < 2) {
      point.column = columnStart[point.line];
      point.offset += columnStart[point.line] - 1;
    }
  }
}
function sliceChunks(chunks, token) {
  const startIndex = token.start._index;
  const startBufferIndex = token.start._bufferIndex;
  const endIndex = token.end._index;
  const endBufferIndex = token.end._bufferIndex;
  let view;
  if (startIndex === endIndex) {
    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];
  } else {
    view = chunks.slice(startIndex, endIndex);
    if (startBufferIndex > -1) {
      view[0] = view[0].slice(startBufferIndex);
    }
    if (endBufferIndex > 0) {
      view.push(chunks[endIndex].slice(0, endBufferIndex));
    }
  }
  return view;
}
function serializeChunks(chunks, expandTabs) {
  let index = -1;
  const result = [];
  let atTab;
  while (++index < chunks.length) {
    const chunk = chunks[index];
    let value;
    if (typeof chunk === "string") {
      value = chunk;
    } else
      switch (chunk) {
        case -5: {
          value = "\r";
          break;
        }
        case -4: {
          value = "\n";
          break;
        }
        case -3: {
          value = "\r\n";
          break;
        }
        case -2: {
          value = expandTabs ? " " : "	";
          break;
        }
        case -1: {
          if (!expandTabs && atTab) continue;
          value = " ";
          break;
        }
        default: {
          value = String.fromCharCode(chunk);
        }
      }
    atTab = chunk === -2;
    result.push(value);
  }
  return result.join("");
}

function initializeDocument(effects) {
  const self = this;
  const delimiter = (this.parser.delimiter || ",").charCodeAt(0);
  return enterRow;
  function enterRow(code) {
    return effects.attempt(
      { tokenize: attemptLastLine },
      (code2) => {
        effects.consume(code2);
        return enterRow;
      },
      (code2) => {
        effects.enter("row");
        return enterColumn(code2);
      }
    )(code);
  }
  function enterColumn(code) {
    effects.enter("column");
    return content(code);
  }
  function content(code) {
    if (code === null) {
      effects.exit("column");
      effects.exit("row");
      effects.consume(code);
      return content;
    }
    if (code === 34) {
      return quotedData(code);
    }
    if (code === delimiter) {
      if (self.previous === delimiter || markdownLineEnding(self.previous) || self.previous === null) {
        effects.enter("data");
        effects.exit("data");
      }
      effects.exit("column");
      effects.enter("columnSeparator");
      effects.consume(code);
      effects.exit("columnSeparator");
      effects.enter("column");
      return content;
    }
    if (markdownLineEnding(code)) {
      effects.exit("column");
      effects.enter("newline");
      effects.consume(code);
      effects.exit("newline");
      effects.exit("row");
      return enterRow;
    }
    return data(code);
  }
  function data(code) {
    effects.enter("data");
    return dataChunk(code);
  }
  function dataChunk(code) {
    if (code === null || markdownLineEnding(code) || code === delimiter) {
      effects.exit("data");
      return content(code);
    }
    if (code === 92) {
      return escapeCharacter(code);
    }
    effects.consume(code);
    return dataChunk;
  }
  function escapeCharacter(code) {
    effects.consume(code);
    return function(code2) {
      effects.consume(code2);
      return content;
    };
  }
  function quotedData(code) {
    effects.enter("quotedData");
    effects.enter("quotedDataChunk");
    effects.consume(code);
    return quotedDataChunk;
  }
  function quotedDataChunk(code) {
    if (code === 92) {
      return escapeCharacter(code);
    }
    if (code === 34) {
      return effects.attempt(
        { tokenize: attemptDoubleQuote },
        (code2) => {
          effects.exit("quotedDataChunk");
          effects.enter("quotedDataChunk");
          return quotedDataChunk(code2);
        },
        (code2) => {
          effects.consume(code2);
          effects.exit("quotedDataChunk");
          effects.exit("quotedData");
          return content;
        }
      )(code);
    }
    effects.consume(code);
    return quotedDataChunk;
  }
}
function attemptDoubleQuote(effects, ok, nok) {
  return startSequence;
  function startSequence(code) {
    if (code !== 34) {
      return nok(code);
    }
    effects.enter("quoteFence");
    effects.consume(code);
    return sequence;
  }
  function sequence(code) {
    if (code !== 34) {
      return nok(code);
    }
    effects.consume(code);
    effects.exit("quoteFence");
    return (code2) => ok(code2);
  }
}
function attemptLastLine(effects, ok, nok) {
  return enterLine;
  function enterLine(code) {
    if (!markdownSpace(code) && code !== null) {
      return nok(code);
    }
    effects.enter("emptyLine");
    return continueLine(code);
  }
  function continueLine(code) {
    if (markdownSpace(code)) {
      effects.consume(code);
      return continueLine;
    }
    if (code === null) {
      effects.exit("emptyLine");
      return ok(code);
    }
    return nok(code);
  }
}
const parse = (options) => {
  return createTokenizer(
    { ...options },
    { tokenize: initializeDocument });
};

const own = {}.hasOwnProperty;
const initialPoint = {
  line: 1,
  column: 1,
  offset: 0
};
const fromCSV = function(value, encoding, options) {
  if (typeof encoding !== "string") {
    options = encoding;
    encoding = void 0;
  }
  return compiler()(
    postprocess(
      parse(options).write(preprocess()(value, encoding, true))
    )
  );
};
function compiler() {
  const config = {
    enter: {
      column: opener(openColumn),
      row: opener(openRow),
      data: onenterdata,
      quotedData: onenterdata
    },
    exit: {
      row: closer(),
      column: closer(),
      data: onexitdata,
      quotedData: onexitQuotedData
    }
  };
  return compile;
  function compile(events) {
    const tree = {
      type: "root",
      children: []
    };
    const stack = [tree];
    const tokenStack = [];
    const context = {
      stack,
      tokenStack,
      config,
      enter,
      exit,
      resume
    };
    let index = -1;
    while (++index < events.length) {
      const handler = config[events[index][0]];
      if (own.call(handler, events[index][1].type)) {
        handler[events[index][1].type].call(
          Object.assign(
            {
              sliceSerialize: events[index][2].sliceSerialize
            },
            context
          ),
          events[index][1]
        );
      }
    }
    if (tokenStack.length > 0) {
      const tail = tokenStack[tokenStack.length - 1];
      const handler = tail[1] || defaultOnError;
      handler.call(context, void 0, tail[0]);
    }
    tree.position = {
      start: point(
        events.length > 0 ? events[0][1].start : initialPoint
      ),
      end: point(
        events.length > 0 ? events[events.length - 2][1].end : initialPoint
      )
    };
    return tree;
  }
  function point(d) {
    return {
      line: d.line,
      column: d.column,
      offset: d.offset
    };
  }
  function opener(create, and) {
    return open;
    function open(token) {
      enter.call(this, create(token), token);
    }
  }
  function enter(node, token, errorHandler) {
    const parent = this.stack[this.stack.length - 1];
    parent.children.push(node);
    this.stack.push(node);
    this.tokenStack.push([token, errorHandler]);
    node.position = {
      start: point(token.start)
    };
    return node;
  }
  function closer(and) {
    return close;
    function close(token) {
      exit.call(this, token);
    }
  }
  function exit(token, onExitError) {
    const node = this.stack.pop();
    const open = this.tokenStack.pop();
    if (!open) {
      throw new Error(
        "Cannot close `" + token.type + "` (" + stringifyPosition({
          start: token.start,
          end: token.end
        }) + "): it\u2019s not open"
      );
    } else if (open[0].type !== token.type) {
      if (onExitError) {
        onExitError.call(this, token, open[0]);
      } else {
        const handler = open[1] || defaultOnError;
        handler.call(this, token, open[0]);
      }
    }
    node.position.end = point(token.end);
    return node;
  }
  function resume() {
    return toString$1(this.stack.pop());
  }
  function onenterdata(token) {
    const parent = this.stack[this.stack.length - 1];
    let tail = parent.children[parent.children.length - 1];
    if (!tail || tail.type !== "text") {
      tail = text();
      tail.position = {
        start: point(token.start)
      };
      parent.children.push(tail);
    }
    this.stack.push(tail);
  }
  function onexitdata(token) {
    const tail = this.stack.pop();
    tail.value += this.sliceSerialize(token).trim().replace(/""/g, '"');
    tail.position.end = point(token.end);
  }
  function onexitQuotedData(token) {
    const tail = this.stack.pop();
    const value = this.sliceSerialize(token);
    tail.value += this.sliceSerialize(token).trim().substring(1, value.length - 1).replace(/""/g, '"');
    tail.position.end = point(token.end);
  }
  function text() {
    return {
      type: "text",
      value: ""
    };
  }
  function openColumn() {
    return {
      type: "column",
      children: []
    };
  }
  function openRow() {
    return {
      type: "row",
      children: []
    };
  }
}
function defaultOnError(left, right) {
  if (left) {
    throw new Error(
      "Cannot close `" + left.type + "` (" + stringifyPosition({
        start: left.start,
        end: left.end
      }) + "): a different token (`" + right.type + "`, " + stringifyPosition({
        start: right.start,
        end: right.end
      }) + ") is open"
    );
  } else {
    throw new Error(
      "Cannot close document, a token (`" + right.type + "`, " + stringifyPosition({
        start: right.start,
        end: right.end
      }) + ") is still open"
    );
  }
}

function csvParse(options) {
  const parser = (doc) => {
    return fromCSV(doc, options);
  };
  Object.assign(this, { Parser: parser });
  const toJsonObject = (tree) => {
    const [header, ...rows] = tree.children;
    const columns = header.children.map((col) => col.children[0].value);
    const data = rows.map((row) => {
      return row.children.reduce((acc, col, i) => {
        acc[String(columns[i])] = col.children[0]?.value;
        return acc;
      }, {});
    });
    return data;
  };
  const toJsonArray = (tree) => {
    const data = tree.children.map((row) => {
      return row.children.map((col) => col.children[0]?.value);
    });
    return data;
  };
  const compiler = (doc) => {
    if (options.json) {
      return toJsonObject(doc);
    }
    return toJsonArray(doc);
  };
  Object.assign(this, { Compiler: compiler });
}
const csv = defineTransformer({
  name: "csv",
  extensions: [".csv"],
  parse: async (_id, content, options = {}) => {
    const stream = unified().use(csvParse, {
      delimiter: ",",
      json: true,
      ...options
    });
    const { result } = await stream.process(content);
    return {
      _id,
      _type: "csv",
      body: result
    };
  }
});

const SEMVER_REGEX = /^(\d+)(\.\d+)*(\.x)?$/;
const describeId = (id) => {
  const [_source, ...parts] = id.split(":");
  const [, basename, _extension] = parts[parts.length - 1]?.match(/(.*)\.([^.]+)$/) || [];
  if (basename) {
    parts[parts.length - 1] = basename;
  }
  const _path = (parts || []).join("/");
  return {
    _source,
    _path,
    _extension,
    _file: _extension ? `${_path}.${_extension}` : _path,
    _basename: basename || ""
  };
};
const pathMeta = defineTransformer({
  name: "path-meta",
  extensions: [".*"],
  transform(content, options = {}) {
    const { locales = [], defaultLocale = "en", respectPathCase = false } = options;
    const { _source, _file, _path, _extension, _basename } = describeId(content._id);
    const parts = _path.split("/");
    const _locale = locales.includes(parts[0]) ? parts.shift() : defaultLocale;
    const filePath = generatePath(parts.join("/"), { respectPathCase });
    return {
      _path: filePath,
      _dir: filePath.split("/").slice(-2)[0],
      _draft: content._draft ?? isDraft(_path),
      _partial: isPartial(_path),
      _locale,
      ...content,
      // TODO: move title to Markdown parser
      title: content.title || generateTitle(refineUrlPart(_basename)),
      _source,
      _file,
      _stem: _path,
      _extension
    };
  }
});
const isDraft = (path) => !!path.match(/\.draft(\/|\.|$)/);
const isPartial = (path) => path.split(/[:/]/).some((part) => part.match(/^_.*/));
const generatePath = (path, { forceLeadingSlash = true, respectPathCase = false } = {}) => {
  path = path.split("/").map((part) => slugify(refineUrlPart(part), { lower: !respectPathCase })).join("/");
  return forceLeadingSlash ? withLeadingSlash(withoutTrailingSlash(path)) : path;
};
const generateTitle = (path) => path.split(/[\s-]/g).map(pascalCase).join(" ");
function refineUrlPart(name) {
  name = name.split(/[/:]/).pop();
  if (SEMVER_REGEX.test(name)) {
    return name;
  }
  return name.replace(/(\d+\.)?(.*)/, "$2").replace(/^index(\.draft)?$/, "").replace(/\.draft$/, "");
}

const markdown = defineTransformer({
  name: "markdown",
  extensions: [".md"],
  parse: async (_id, content, options = {}) => {
    const config = { ...options };
    config.rehypePlugins = await importPlugins(config.rehypePlugins);
    config.remarkPlugins = await importPlugins(config.remarkPlugins);
    const highlightOptions = options.highlight ? {
      ...options.highlight,
      // Pass only when it's an function. String values are handled by `@nuxtjs/mdc`
      highlighter: typeof options.highlight?.highlighter === "function" ? options.highlight.highlighter : void 0
    } : void 0;
    const parsed = await parseMarkdown(content, {
      ...config,
      highlight: highlightOptions,
      remark: {
        plugins: config.remarkPlugins
      },
      rehype: {
        options: {
          handlers: {
            link
          }
        },
        plugins: config.rehypePlugins
      },
      toc: config.toc
    });
    return {
      ...parsed.data,
      excerpt: parsed.excerpt,
      body: {
        ...parsed.body,
        toc: parsed.toc
      },
      _type: "markdown",
      _id
    };
  }
});
async function importPlugins(plugins = {}) {
  const resolvedPlugins = {};
  for (const [name, plugin] of Object.entries(plugins)) {
    if (plugin) {
      resolvedPlugins[name] = {
        instance: plugin.instance || await import(
          /* @vite-ignore */
          name
        ).then((m) => m.default || m),
        options: plugin
      };
    } else {
      resolvedPlugins[name] = false;
    }
  }
  return resolvedPlugins;
}
function link(state, node) {
  const properties = {
    ...node.attributes || {},
    href: normalizeUri(normalizeLink(node.url))
  };
  if (node.title !== null && node.title !== void 0) {
    properties.title = node.title;
  }
  const result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node)
  };
  state.patch(node, result);
  return state.applyData(node, result);
}
function normalizeLink(link2) {
  const match = link2.match(/#.+$/);
  const hash = match ? match[0] : "";
  if (link2.replace(/#.+$/, "").endsWith(".md") && (isRelative(link2) || !/^https?/.test(link2) && !link2.startsWith("/"))) {
    return generatePath(link2.replace(".md" + hash, ""), { forceLeadingSlash: false }) + hash;
  } else {
    return link2;
  }
}

const yaml = defineTransformer({
  name: "Yaml",
  extensions: [".yml", ".yaml"],
  parse: (_id, content) => {
    const { data } = parseFrontMatter(`---
${content}
---`);
    let parsed = data;
    if (Array.isArray(data)) {
      console.warn(`YAML array is not supported in ${_id}, moving the array into the \`body\` key`);
      parsed = { body: data };
    }
    return {
      ...parsed,
      _id,
      _type: "yaml"
    };
  }
});

const json = defineTransformer({
  name: "Json",
  extensions: [".json", ".json5"],
  parse: async (_id, content) => {
    let parsed;
    if (typeof content === "string") {
      if (_id.endsWith("json5")) {
        parsed = (await import('json5').then((m) => m.default || m)).parse(content);
      } else if (_id.endsWith("json")) {
        parsed = destr(content);
      }
    } else {
      parsed = content;
    }
    if (Array.isArray(parsed)) {
      console.warn(`JSON array is not supported in ${_id}, moving the array into the \`body\` key`);
      parsed = {
        body: parsed
      };
    }
    return {
      ...parsed,
      _id,
      _type: "json"
    };
  }
});

const TRANSFORMERS = [
  csv,
  markdown,
  json,
  yaml,
  pathMeta
];
function getParser(ext, additionalTransformers = []) {
  let parser = additionalTransformers.find((p) => ext.match(new RegExp(p.extensions.join("|"), "i")) && p.parse);
  if (!parser) {
    parser = TRANSFORMERS.find((p) => ext.match(new RegExp(p.extensions.join("|"), "i")) && p.parse);
  }
  return parser;
}
function getTransformers(ext, additionalTransformers = []) {
  return [
    ...additionalTransformers.filter((p) => ext.match(new RegExp(p.extensions.join("|"), "i")) && p.transform),
    ...TRANSFORMERS.filter((p) => ext.match(new RegExp(p.extensions.join("|"), "i")) && p.transform)
  ];
}
async function transformContent(id, content, options = {}) {
  const { transformers = [] } = options;
  const file = { _id: id, body: content };
  const ext = extname(id);
  const parser = getParser(ext, transformers);
  if (!parser) {
    console.warn(`${ext} files are not supported, "${id}" falling back to raw content`);
    return file;
  }
  const parserOptions = options[camelCase(parser.name)] || {};
  const parsed = await parser.parse(file._id, file.body, parserOptions);
  const matchedTransformers = getTransformers(ext, transformers);
  const result = await matchedTransformers.reduce(async (prev, cur) => {
    const next = await prev || parsed;
    const transformOptions = options[camelCase(cur.name)];
    if (transformOptions === false) {
      return next;
    }
    return cur.transform(next, transformOptions || {});
  }, Promise.resolve(parsed));
  return result;
}

function makeIgnored(ignores) {
  const rxAll = ["/\\.", "/-", ...ignores.filter((p) => p)].map((p) => new RegExp(p));
  return function isIgnored(key) {
    const path = "/" + key.replace(/:/g, "/");
    return rxAll.some((rx) => rx.test(path));
  };
}

function createMatch(opts = {}) {
  const operators = createOperators(match, opts.operators);
  function match(item, conditions) {
    if (typeof conditions !== "object" || conditions instanceof RegExp) {
      return operators.$eq(item, conditions);
    }
    return Object.keys(conditions || {}).every((key) => {
      const condition = conditions[key];
      if (key.startsWith("$") && operators[key]) {
        const fn = operators[key];
        return typeof fn === "function" ? fn(item, condition) : false;
      }
      return match(get(item, key), condition);
    });
  }
  return match;
}
function createOperators(match, operators = {}) {
  return {
    $match: (item, condition) => match(item, condition),
    /**
     * Match if item equals condition
     **/
    $eq: (item, condition) => condition instanceof RegExp ? condition.test(item) : item === condition,
    /**
     * Match if item not equals condition
     **/
    $ne: (item, condition) => condition instanceof RegExp ? !condition.test(item) : item !== condition,
    /**
     * Match is condition is false
     **/
    $not: (item, condition) => !match(item, condition),
    /**
     * Match only if all of nested conditions are true
     **/
    $and: (item, condition) => {
      assertArray(condition, "$and requires an array as condition");
      return condition.every((cond) => match(item, cond));
    },
    /**
     * Match if any of nested conditions is true
     **/
    $or: (item, condition) => {
      assertArray(condition, "$or requires an array as condition");
      return condition.some((cond) => match(item, cond));
    },
    /**
     * Match if item is in condition array
     **/
    $in: (item, condition) => ensureArray(condition).some(
      (cond) => Array.isArray(item) ? match(item, { $contains: cond }) : match(item, cond)
    ),
    /**
     * Match if item contains every condition or match every rule in condition array
     **/
    $contains: (item, condition) => {
      item = Array.isArray(item) ? item : String(item);
      return ensureArray(condition).every((i) => item.includes(i));
    },
    /**
     * Ignore case contains
     **/
    $icontains: (item, condition) => {
      if (typeof condition !== "string") {
        throw new TypeError("$icontains requires a string, use $contains instead");
      }
      item = String(item).toLocaleLowerCase();
      return ensureArray(condition).every((i) => item.includes(i.toLocaleLowerCase()));
    },
    /**
     * Match if item contains at least one rule from condition array
     */
    $containsAny: (item, condition) => {
      assertArray(condition, "$containsAny requires an array as condition");
      item = Array.isArray(item) ? item : String(item);
      return condition.some((i) => item.includes(i));
    },
    /**
     * Check key existence
     */
    $exists: (item, condition) => condition ? typeof item !== "undefined" : typeof item === "undefined",
    /**
     * Match if type of item equals condition
     */
    $type: (item, condition) => typeof item === String(condition),
    /**
     * Provides regular expression capabilities for pattern matching strings.
     */
    $regex: (item, condition) => {
      if (!(condition instanceof RegExp)) {
        const matched = String(condition).match(/\/(.*)\/([dgimsuy]*)$/);
        condition = matched?.[1] ? new RegExp(matched[1], matched[2] || "") : new RegExp(condition);
      }
      return condition.test(String(item || ""));
    },
    /**
     * Check if item is less than condition
     */
    $lt: (item, condition) => {
      return item < condition;
    },
    /**
     * Check if item is less than or equal to condition
     */
    $lte: (item, condition) => {
      return item <= condition;
    },
    /**
     * Check if item is greater than condition
     */
    $gt: (item, condition) => {
      return item > condition;
    },
    /**
     * Check if item is greater than or equal to condition
     */
    $gte: (item, condition) => {
      return item >= condition;
    },
    ...operators || {}
  };
}

function createPipelineFetcher(getContentsList) {
  const match = createMatch();
  const surround = (data, { query, before, after }) => {
    const matchQuery = typeof query === "string" ? { _path: query } : query;
    const index = data.findIndex((item) => match(item, matchQuery));
    before = before ?? 1;
    after = after ?? 1;
    const slice = new Array(before + after).fill(null, 0);
    return index === -1 ? slice : slice.map((_, i) => data[index - before + i + Number(i >= before)] || null);
  };
  const matchingPipelines = [
    // Conditions
    (state, params) => {
      const filtered = state.result.filter((item) => ensureArray(params.where).every((matchQuery) => match(item, matchQuery)));
      return {
        ...state,
        result: filtered,
        total: filtered.length
      };
    },
    // Sort data
    (state, params) => ensureArray(params.sort).forEach((options) => sortList(state.result, options)),
    function fetchSurround(state, params, db) {
      if (params.surround) {
        let _surround = surround(state.result?.length === 1 ? db : state.result, params.surround);
        _surround = apply(withoutKeys(params.without))(_surround);
        _surround = apply(withKeys(params.only))(_surround);
        state.surround = _surround;
      }
      return state;
    }
  ];
  const transformingPiples = [
    // Skip first items
    (state, params) => {
      if (params.skip) {
        return {
          ...state,
          result: state.result.slice(params.skip),
          skip: params.skip
        };
      }
    },
    // Pick first items
    (state, params) => {
      if (params.limit) {
        return {
          ...state,
          result: state.result.slice(0, params.limit),
          limit: params.limit
        };
      }
    },
    function fetchDirConfig(state, params, db) {
      if (params.dirConfig) {
        const path = state.result[0]?._path || params.where?.find((w) => w._path)?._path;
        if (typeof path === "string") {
          const dirConfig = db.find((item) => item._path === joinURL(path, "_dir"));
          if (dirConfig) {
            state.dirConfig = { _path: dirConfig._path, ...withoutKeys(["_"])(dirConfig) };
          }
        }
      }
      return state;
    },
    // Remove unwanted fields
    (state, params) => ({
      ...state,
      result: apply(withoutKeys(params.without))(state.result)
    }),
    // Select only wanted fields
    (state, params) => ({
      ...state,
      result: apply(withKeys(params.only))(state.result)
    })
  ];
  return async (query) => {
    const db = await getContentsList();
    const params = query.params();
    const result1 = {
      result: db,
      limit: 0,
      skip: 0,
      total: db.length
    };
    const matchedData = matchingPipelines.reduce(($data, pipe) => pipe($data, params, db) || $data, result1);
    if (params.count) {
      return {
        result: matchedData.result.length
      };
    }
    const result = transformingPiples.reduce(($data, pipe) => pipe($data, params, db) || $data, matchedData);
    if (params.first) {
      return {
        ...omit(["skip", "limit", "total"])(result),
        result: result.result[0]
      };
    }
    return result;
  };
}

const isPreview = (event) => {
  const previewToken = getQuery(event).previewToken || getCookie(event, "previewToken");
  return !!previewToken;
};
const getPreview = (event) => {
  const key = getQuery(event).previewToken || getCookie(event, "previewToken");
  return { key };
};

async function getContentIndex(event) {
  const defaultLocale = useRuntimeConfig().content.defaultLocale;
  let contentIndex = await cacheStorage().getItem("content-index.json");
  if (!contentIndex) {
    const data = await getContentsList(event);
    contentIndex = data.reduce((acc, item) => {
      acc[item._path] = acc[item._path] || [];
      if (item._locale === defaultLocale) {
        acc[item._path].unshift(item._id);
      } else {
        acc[item._path].push(item._id);
      }
      return acc;
    }, {});
    await cacheStorage().setItem("content-index.json", contentIndex);
  }
  return contentIndex;
}
async function getIndexedContentsList(event, query) {
  const params = query.params();
  const path = params?.where?.find((wh) => wh._path)?._path;
  if (!isPreview(event) && !params.surround && !params.dirConfig && (typeof path === "string" || path instanceof RegExp)) {
    const index = await getContentIndex(event);
    const keys = Object.keys(index).filter((key) => path.test ? path.test(key) : key === String(path)).flatMap((key) => index[key]);
    const keyChunks = [...chunksFromArray(keys, 10)];
    const contents = [];
    for await (const chunk of keyChunks) {
      const result = await Promise.all(chunk.map((key) => getContent(event, key)));
      contents.push(...result);
    }
    return contents;
  }
  return getContentsList(event);
}

const transformers = [];

let _sourceStorage;
let _cacheStorage;
let _cacheParsedStorage;
const sourceStorage = () => {
  if (!_sourceStorage) {
    _sourceStorage = prefixStorage(useStorage(), "content:source");
  }
  return _sourceStorage;
};
const cacheStorage = () => {
  if (!_cacheStorage) {
    _cacheStorage = prefixStorage(useStorage(), "cache:content");
  }
  return _cacheStorage;
};
const cacheParsedStorage = () => {
  if (!_cacheParsedStorage) {
    _cacheParsedStorage = prefixStorage(useStorage(), "cache:content:parsed");
  }
  return _cacheParsedStorage;
};
const contentConfig = () => useRuntimeConfig().content;
const invalidKeyCharacters = `'"?#/`.split("");
const contentIgnorePredicate = (key) => {
  const isIgnored = makeIgnored(contentConfig().ignores);
  if (key.startsWith("preview:") || isIgnored(key)) {
    return false;
  }
  if (invalidKeyCharacters.some((ik) => key.includes(ik))) {
    console.warn(`Ignoring [${key}]. File name should not contain any of the following characters: ${invalidKeyCharacters.join(", ")}`);
    return false;
  }
  return true;
};
const getContentsIds = async (event, prefix) => {
  let keys = [];
  {
    keys = await cacheParsedStorage().getKeys(prefix);
  }
  const source = sourceStorage();
  if (keys.length === 0) {
    keys = await source.getKeys(prefix);
  }
  if (isPreview(event)) {
    const { key } = getPreview(event);
    const previewPrefix = `preview:${key}:${prefix || ""}`;
    const previewKeys = await source.getKeys(previewPrefix);
    if (previewKeys.length) {
      const keysSet = new Set(keys);
      await Promise.all(
        previewKeys.map(async (key2) => {
          const meta = await source.getMeta(key2);
          if (meta?.__deleted) {
            keysSet.delete(key2.substring(previewPrefix.length));
          } else {
            keysSet.add(key2.substring(previewPrefix.length));
          }
        })
      );
      keys = Array.from(keysSet);
    }
  }
  return keys.filter(contentIgnorePredicate);
};
function* chunksFromArray(arr, n) {
  for (let i = 0; i < arr.length; i += n) {
    yield arr.slice(i, i + n);
  }
}
const getContentsList = /* @__PURE__ */ (() => {
  let pendingContentsListPromise = null;
  const _getContentsList = async (event, prefix) => {
    const keys = await getContentsIds(event, prefix);
    const keyChunks = [...chunksFromArray(keys, 10)];
    const contents = [];
    for (const chunk of keyChunks) {
      const result = await Promise.all(chunk.map((key) => getContent(event, key)));
      contents.push(...result);
    }
    return contents.filter((c) => c && c._path);
  };
  return (event, prefix) => {
    if (event.context.__contentList) {
      return event.context.__contentList;
    }
    if (!pendingContentsListPromise) {
      pendingContentsListPromise = _getContentsList(event, prefix);
      pendingContentsListPromise.then((result) => {
        event.context.__contentList = result;
        pendingContentsListPromise = null;
      });
    }
    return pendingContentsListPromise;
  };
})();
const pendingPromises = {};
const getContent = async (event, id) => {
  const contentId = id;
  if (!contentIgnorePredicate(id)) {
    return { _id: contentId, body: null };
  }
  const source = sourceStorage();
  const cache = cacheParsedStorage();
  if (isPreview(event)) {
    const { key } = getPreview(event);
    const previewId = `preview:${key}:${id}`;
    const draft = await source.getItem(previewId);
    if (draft) {
      id = previewId;
    }
  }
  const cached = await cache.getItem(id);
  if (cached) {
    return cached.parsed;
  }
  const config = contentConfig();
  const meta = await source.getMeta(id);
  const mtime = meta.mtime;
  const size = meta.size || 0;
  const hash$1 = hash({
    // Last modified time
    mtime,
    // File size
    size,
    // Add Content version to the hash, to revalidate the cache on content update
    version: config.cacheVersion,
    integrity: config.cacheIntegrity
  });
  if (cached?.hash === hash$1) {
    return cached.parsed;
  }
  if (!pendingPromises[id + hash$1]) {
    pendingPromises[id + hash$1] = new Promise(async (resolve) => {
      const body = await source.getItem(id);
      if (body === null) {
        return resolve({ _id: contentId, body: null });
      }
      const parsed = await parseContent(contentId, body);
      await cache.setItem(id, { parsed, hash: hash$1 }).catch(() => {
      });
      resolve(parsed);
      delete pendingPromises[id + hash$1];
    });
  }
  return pendingPromises[id + hash$1];
};
const parseContent = async (id, content, opts = {}) => {
  const nitroApp = useNitroApp();
  const config = contentConfig();
  const options = defu(
    opts,
    {
      markdown: {
        ...config.markdown,
        highlight: config.highlight
      },
      csv: config.csv,
      yaml: config.yaml,
      transformers: transformers,
      pathMeta: {
        defaultLocale: config.defaultLocale,
        locales: config.locales,
        respectPathCase: config.respectPathCase
      }
    }
  );
  const file = { _id: id, body: typeof content === "string" ? content.replace(/\r\n|\r/g, "\n") : content };
  await nitroApp.hooks.callHook("content:file:beforeParse", file);
  const result = await transformContent(id, file.body, options);
  await nitroApp.hooks.callHook("content:file:afterParse", result);
  return result;
};
const createServerQueryFetch = (event) => (query) => {
  return createPipelineFetcher(() => getIndexedContentsList(event, query))(query);
};
function serverQueryContent(event, query, ...pathParts) {
  const { advanceQuery } = useRuntimeConfig().public.content.experimental;
  const config = contentConfig();
  const queryBuilder = advanceQuery ? createQuery(createServerQueryFetch(event), { initialParams: typeof query !== "string" ? query || {} : {}, legacy: false }) : createQuery(createServerQueryFetch(event), { initialParams: typeof query !== "string" ? query || {} : {}, legacy: true });
  let path;
  if (typeof query === "string") {
    path = withLeadingSlash(joinURL(query, ...pathParts));
  }
  const originalParamsFn = queryBuilder.params;
  queryBuilder.params = () => {
    const params = originalParamsFn();
    if (path) {
      params.where = params.where || [];
      if (params.first && (params.where || []).length === 0) {
        params.where.push({ _path: withoutTrailingSlash(path) });
      } else {
        params.where.push({ _path: new RegExp(`^${path.replace(/[-[\]{}()*+.,^$\s/]/g, "\\$&")}`) });
      }
    }
    if (!params.sort?.length) {
      params.sort = [{ _stem: 1, $numeric: true }];
    }
    {
      params.where = params.where || [];
      if (!params.where.find((item) => typeof item._draft !== "undefined")) {
        params.where.push({ _draft: { $ne: true } });
      }
    }
    if (config.locales.length) {
      const queryLocale = params.where?.find((w) => w._locale)?._locale;
      if (!queryLocale) {
        params.where = params.where || [];
        params.where.push({ _locale: config.defaultLocale });
      }
    }
    return params;
  };
  return queryBuilder;
}

function jsonParse(value) {
  return JSON.parse(value, regExpReviver);
}
function regExpReviver(_key, value) {
  const withOperator = typeof value === "string" && value.match(/^--([A-Z]+) (.+)$/) || [];
  if (withOperator[1] === "REGEX") {
    const regex = withOperator[2]?.match(/\/(.*)\/([dgimsuy]*)$/);
    return regex?.[1] ? new RegExp(regex[1], regex[2] || "") : value;
  }
  return value;
}

const parseJSONQueryParams = (body) => {
  try {
    return jsonParse(body);
  } catch (e) {
    throw createError$1({ statusCode: 400, message: "Invalid _params query" });
  }
};
const decodeQueryParams = (encoded) => {
  encoded = encoded.replace(/\//g, "");
  encoded = encoded.replace(/-/g, "+").replace(/_/g, "/");
  encoded = encoded.padEnd(encoded.length + (4 - encoded.length % 4) % 4, "=");
  return parseJSONQueryParams(typeof Buffer !== "undefined" ? Buffer.from(encoded, "base64").toString() : atob(encoded));
};
const memory = {};
const getContentQuery = (event) => {
  const { params } = event.context.params || {};
  if (params) {
    return decodeQueryParams(params.replace(/.json$/, ""));
  }
  const qid = event.context.params?.qid?.replace(/.json$/, "");
  const query = getQuery(event) || {};
  if (qid && query._params) {
    memory[qid] = parseJSONQueryParams(decodeURIComponent(query._params));
    if (memory[qid]?.where && !Array.isArray(memory[qid]?.where)) {
      memory[qid].where = [memory[qid].where];
    }
    return memory[qid];
  }
  if (qid && memory[qid]) {
    return memory[qid];
  }
  if (query._params) {
    return parseJSONQueryParams(decodeURIComponent(query._params));
  }
  if (typeof query.only === "string" && query.only.includes(",")) {
    query.only = query.only.split(",").map((s) => s.trim());
  }
  if (typeof query.without === "string" && query.without.includes(",")) {
    query.without = query.without.split(",").map((s) => s.trim());
  }
  const where = query.where || {};
  for (const key of ["draft", "partial", "empty"]) {
    if (query[key] && ["true", "false"].includes(query[key])) {
      where[key] = query[key] === "true";
      delete query[key];
    }
  }
  if (query.sort) {
    query.sort = String(query.sort).split(",").map((s) => {
      const [key, order] = s.split(":");
      return [key, Number.parseInt(order || "0", 10)];
    });
  }
  const reservedKeys = ["partial", "draft", "only", "without", "where", "sort", "limit", "skip"];
  for (const key of Object.keys(query)) {
    if (reservedKeys.includes(key)) {
      continue;
    }
    query.where = query.where || {};
    query.where[key] = query[key];
  }
  if (Object.keys(where).length > 0) {
    query.where = [where];
  } else {
    delete query.where;
  }
  return query;
};

const _8e6rV7 = defineEventHandler(async (event) => {
  const query = getContentQuery(event);
  const { advanceQuery } = useRuntimeConfig().public.content.experimental;
  if (query.first) {
    let contentQuery = serverQueryContent(event, query);
    if (!advanceQuery) {
      contentQuery = contentQuery.withDirConfig();
    }
    const content = await contentQuery.findOne();
    const _result = advanceQuery ? content?.result : content;
    const missing = !_result && !content?.dirConfig?.navigation?.redirect && !content?._dir?.navigation?.redirect;
    if (missing) {
      throw createError$1({
        statusMessage: "Document not found!",
        statusCode: 404,
        data: {
          description: "Could not find document for the given query.",
          query
        }
      });
    }
    return content;
  }
  if (query.count) {
    return serverQueryContent(event, query).count();
  }
  return serverQueryContent(event, query).find();
});

const _yztOpD = defineEventHandler(async (event) => {
  const { content } = useRuntimeConfig();
  const now = Date.now();
  const contents = await serverQueryContent(event).find();
  await getContentIndex(event);
  const navigation = await $fetch(`${content.api.baseURL}/navigation`);
  await cacheStorage().setItem("content-navigation.json", navigation);
  return {
    generatedAt: now,
    generateTime: Date.now() - now,
    contents: content.experimental.cacheContents ? contents : [],
    navigation
  };
});

function createNav(contents, configs) {
  const { navigation } = useRuntimeConfig().public.content;
  if (navigation === false) {
    return [];
  }
  const pickNavigationFields = (content) => ({
    ...pick(["title", ...navigation.fields])(content),
    ...isObject(content?.navigation) ? content.navigation : {}
  });
  const nav = contents.sort((a, b) => a._path.localeCompare(b._path)).reduce((nav2, content) => {
    const parts = content._path.substring(1).split("/");
    const idParts = content._id.split(":").slice(1);
    const isIndex = !!idParts[idParts.length - 1]?.match(/([1-9][0-9]*\.)?index.md/g);
    const getNavItem = (content2) => ({
      title: content2.title,
      _path: content2._path,
      _file: content2._file,
      children: [],
      ...pickNavigationFields(content2),
      ...content2._draft ? { _draft: true } : {}
    });
    const navItem = getNavItem(content);
    if (isIndex) {
      const dirConfig = configs[navItem._path];
      if (typeof dirConfig?.navigation !== "undefined" && !dirConfig?.navigation) {
        return nav2;
      }
      if (content._path !== "/") {
        const indexItem = getNavItem(content);
        navItem.children.push(indexItem);
      }
      if (dirConfig) {
        Object.assign(
          navItem,
          pickNavigationFields(dirConfig)
        );
      }
    }
    if (parts.length === 1) {
      nav2.push(navItem);
      return nav2;
    }
    const siblings = parts.slice(0, -1).reduce((nodes, part, i) => {
      const currentPathPart = "/" + parts.slice(0, i + 1).join("/");
      const conf = configs[currentPathPart];
      if (typeof conf?.navigation !== "undefined" && !conf.navigation) {
        return [];
      }
      let parent = nodes.find((n) => n._path === currentPathPart);
      if (!parent) {
        parent = {
          title: generateTitle(part),
          _path: currentPathPart,
          _file: content._file,
          children: [],
          ...conf && pickNavigationFields(conf)
        };
        nodes.push(parent);
      }
      return parent.children;
    }, nav2);
    siblings.push(navItem);
    return nav2;
  }, []);
  return sortAndClear(nav);
}
const collator = new Intl.Collator(void 0, { numeric: true, sensitivity: "base" });
function sortAndClear(nav) {
  nav.forEach((item) => {
    item._file = item._file.split(".").slice(0, -1).join(".");
  });
  const sorted = nav.sort((a, b) => collator.compare(a._file, b._file));
  for (const item of sorted) {
    if (item.children?.length) {
      sortAndClear(item.children);
    } else {
      delete item.children;
    }
    delete item._file;
  }
  return nav;
}
function pick(keys) {
  return (obj) => {
    obj = obj || {};
    if (keys && keys.length) {
      return keys.filter((key) => typeof obj[key] !== "undefined").reduce((newObj, key) => Object.assign(newObj, { [key]: obj[key] }), {});
    }
    return obj;
  };
}
function isObject(obj) {
  return Object.prototype.toString.call(obj) === "[object Object]";
}

const _v6RX9X = defineEventHandler(async (event) => {
  const query = getContentQuery(event);
  if (!isPreview(event) && Object.keys(query).length === 0) {
    const cache = await cacheStorage().getItem("content-navigation.json");
    if (cache) {
      return cache;
    }
  }
  const contents = await serverQueryContent(event, query).where({
    /**
     * Partial contents are not included in the navigation
     * A partial content is a content that has `_` prefix in its path
     */
    _partial: false,
    /**
     * Exclude any pages which have opted out of navigation via frontmatter.
     */
    navigation: {
      $ne: false
    }
  }).find();
  const dirConfigs = await serverQueryContent(event).where({ _path: /\/_dir$/i, _partial: true }).find();
  const configs = (dirConfigs?.result || dirConfigs).reduce((configs2, conf) => {
    if (conf.title?.toLowerCase() === "dir") {
      conf.title = void 0;
    }
    const key = conf._path.split("/").slice(0, -1).join("/") || "/";
    configs2[key] = {
      ...conf,
      // Extract meta from body. (non MD files)
      ...conf.body
    };
    return configs2;
  }, {});
  return createNav(contents?.result || contents, configs);
});

const _2Zrw8O = lazyEventHandler(() => {
  const opts = useRuntimeConfig().ipx || {};
  const fsDir = opts?.fs?.dir ? (Array.isArray(opts.fs.dir) ? opts.fs.dir : [opts.fs.dir]).map((dir) => isAbsolute(dir) ? dir : fileURLToPath(new URL(dir, globalThis._importMeta_.url))) : void 0;
  const fsStorage = opts.fs?.dir ? ipxFSStorage({ ...opts.fs, dir: fsDir }) : void 0;
  const httpStorage = opts.http?.domains ? ipxHttpStorage({ ...opts.http }) : void 0;
  if (!fsStorage && !httpStorage) {
    throw new Error("IPX storage is not configured!");
  }
  const ipxOptions = {
    ...opts,
    storage: fsStorage || httpStorage,
    httpStorage
  };
  const ipx = createIPX(ipxOptions);
  const ipxHandler = createIPXH3Handler(ipx);
  return useBase(opts.baseURL, ipxHandler);
});

const _lazy_e23gnj = () => import('./routes/renderer.mjs').then(function (n) { return n.r; });
const _lazy_x9R1HD = () => import('./routes/__og-image__/font/font.mjs');
const _lazy_1sXAVz = () => import('./routes/__og-image__/image/image.mjs').then(function (n) { return n.i; });

const handlers = [
  { route: '', handler: _f4b49z, lazy: false, middleware: true, method: undefined },
  { route: '/__nuxt_error', handler: _lazy_e23gnj, lazy: true, middleware: false, method: undefined },
  { route: '/api/_mdc/highlight', handler: _YpqKlk, lazy: false, middleware: false, method: undefined },
  { route: '/__studio.json', handler: _xyawK5, lazy: false, middleware: false, method: "get" },
  { route: '/api/component-meta', handler: _RuzGKw, lazy: false, middleware: false, method: "get" },
  { route: '/api/component-meta.json', handler: _RuzGKw, lazy: false, middleware: false, method: "get" },
  { route: '/api/component-meta/:component?', handler: _RuzGKw, lazy: false, middleware: false, method: "get" },
  { route: '', handler: _zyXcRf, lazy: false, middleware: true, method: undefined },
  { route: '/__og-image__/font/**', handler: _lazy_x9R1HD, lazy: true, middleware: false, method: undefined },
  { route: '/__og-image__/image/**', handler: _lazy_1sXAVz, lazy: true, middleware: false, method: undefined },
  { route: '/api/_content/query/:qid/**:params', handler: _8e6rV7, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/query/:qid', handler: _8e6rV7, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/query', handler: _8e6rV7, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/cache.1720964739686.json', handler: _yztOpD, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/navigation/:qid/**:params', handler: _v6RX9X, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/navigation/:qid', handler: _v6RX9X, lazy: false, middleware: false, method: "get" },
  { route: '/api/_content/navigation', handler: _v6RX9X, lazy: false, middleware: false, method: "get" },
  { route: '/_ipx/**', handler: _2Zrw8O, lazy: false, middleware: false, method: undefined },
  { route: '/**', handler: _lazy_e23gnj, lazy: true, middleware: false, method: undefined }
];

function createNitroApp() {
  const config = useRuntimeConfig();
  const hooks = createHooks();
  const captureError = (error, context = {}) => {
    const promise = hooks.callHookParallel("error", error, context).catch((_err) => {
      console.error("Error while capturing another error", _err);
    });
    if (context.event && isEvent(context.event)) {
      const errors = context.event.context.nitro?.errors;
      if (errors) {
        errors.push({ error, context });
      }
      if (context.event.waitUntil) {
        context.event.waitUntil(promise);
      }
    }
  };
  const h3App = createApp({
    debug: destr(false),
    onError: (error, event) => {
      captureError(error, { event, tags: ["request"] });
      return errorHandler(error, event);
    },
    onRequest: async (event) => {
      await nitroApp.hooks.callHook("request", event).catch((error) => {
        captureError(error, { event, tags: ["request"] });
      });
    },
    onBeforeResponse: async (event, response) => {
      await nitroApp.hooks.callHook("beforeResponse", event, response).catch((error) => {
        captureError(error, { event, tags: ["request", "response"] });
      });
    },
    onAfterResponse: async (event, response) => {
      await nitroApp.hooks.callHook("afterResponse", event, response).catch((error) => {
        captureError(error, { event, tags: ["request", "response"] });
      });
    }
  });
  const router = createRouter({
    preemptive: true
  });
  const localCall = createCall(toNodeListener(h3App));
  const _localFetch = createFetch(localCall, globalThis.fetch);
  const localFetch = (input, init) => _localFetch(input, init).then(
    (response) => normalizeFetchResponse(response)
  );
  const $fetch = createFetch$1({
    fetch: localFetch,
    Headers: Headers$1,
    defaults: { baseURL: config.app.baseURL }
  });
  globalThis.$fetch = $fetch;
  h3App.use(createRouteRulesHandler({ localFetch }));
  h3App.use(
    eventHandler((event) => {
      event.context.nitro = event.context.nitro || { errors: [] };
      const envContext = event.node.req?.__unenv__;
      if (envContext) {
        Object.assign(event.context, envContext);
      }
      event.fetch = (req, init) => fetchWithEvent(event, req, init, { fetch: localFetch });
      event.$fetch = (req, init) => fetchWithEvent(event, req, init, {
        fetch: $fetch
      });
      event.waitUntil = (promise) => {
        if (!event.context.nitro._waitUntilPromises) {
          event.context.nitro._waitUntilPromises = [];
        }
        event.context.nitro._waitUntilPromises.push(promise);
        if (envContext?.waitUntil) {
          envContext.waitUntil(promise);
        }
      };
      event.captureError = (error, context) => {
        captureError(error, { event, ...context });
      };
    })
  );
  for (const h of handlers) {
    let handler = h.lazy ? lazyEventHandler(h.handler) : h.handler;
    if (h.middleware || !h.route) {
      const middlewareBase = (config.app.baseURL + (h.route || "/")).replace(
        /\/+/g,
        "/"
      );
      h3App.use(middlewareBase, handler);
    } else {
      const routeRules = getRouteRulesForPath(
        h.route.replace(/:\w+|\*\*/g, "_")
      );
      if (routeRules.cache) {
        handler = cachedEventHandler(handler, {
          group: "nitro/routes",
          ...routeRules.cache
        });
      }
      router.use(h.route, handler, h.method);
    }
  }
  h3App.use(config.app.baseURL, router.handler);
  const app = {
    hooks,
    h3App,
    router,
    localCall,
    localFetch,
    captureError
  };
  for (const plugin of plugins) {
    try {
      plugin(app);
    } catch (err) {
      captureError(err, { tags: ["plugin"] });
      throw err;
    }
  }
  return app;
}
const nitroApp = createNitroApp();
const useNitroApp = () => nitroApp;

const debug = (...args) => {
};
function GracefulShutdown(server, opts) {
  opts = opts || {};
  const options = Object.assign(
    {
      signals: "SIGINT SIGTERM",
      timeout: 3e4,
      development: false,
      forceExit: true,
      onShutdown: (signal) => Promise.resolve(signal),
      preShutdown: (signal) => Promise.resolve(signal)
    },
    opts
  );
  let isShuttingDown = false;
  const connections = {};
  let connectionCounter = 0;
  const secureConnections = {};
  let secureConnectionCounter = 0;
  let failed = false;
  let finalRun = false;
  function onceFactory() {
    let called = false;
    return (emitter, events, callback) => {
      function call() {
        if (!called) {
          called = true;
          return Reflect.apply(callback, this, arguments);
        }
      }
      for (const e of events) {
        emitter.on(e, call);
      }
    };
  }
  const signals = options.signals.split(" ").map((s) => s.trim()).filter((s) => s.length > 0);
  const once = onceFactory();
  once(process, signals, (signal) => {
    shutdown(signal).then(() => {
      if (options.forceExit) {
        process.exit(failed ? 1 : 0);
      }
    }).catch((err) => {
      process.exit(1);
    });
  });
  function isFunction(functionToCheck) {
    const getType = Object.prototype.toString.call(functionToCheck);
    return /^\[object\s([A-Za-z]+)?Function]$/.test(getType);
  }
  function destroy(socket, force = false) {
    if (socket._isIdle && isShuttingDown || force) {
      socket.destroy();
      if (socket.server instanceof http.Server) {
        delete connections[socket._connectionId];
      } else {
        delete secureConnections[socket._connectionId];
      }
    }
  }
  function destroyAllConnections(force = false) {
    for (const key of Object.keys(connections)) {
      const socket = connections[key];
      const serverResponse = socket._httpMessage;
      if (serverResponse && !force) {
        if (!serverResponse.headersSent) {
          serverResponse.setHeader("connection", "close");
        }
      } else {
        destroy(socket);
      }
    }
    for (const key of Object.keys(secureConnections)) {
      const socket = secureConnections[key];
      const serverResponse = socket._httpMessage;
      if (serverResponse && !force) {
        if (!serverResponse.headersSent) {
          serverResponse.setHeader("connection", "close");
        }
      } else {
        destroy(socket);
      }
    }
  }
  server.on("request", function(req, res) {
    req.socket._isIdle = false;
    if (isShuttingDown && !res.headersSent) {
      res.setHeader("connection", "close");
    }
    res.on("finish", function() {
      req.socket._isIdle = true;
      destroy(req.socket);
    });
  });
  server.on("connection", function(socket) {
    if (isShuttingDown) {
      socket.destroy();
    } else {
      const id = connectionCounter++;
      socket._isIdle = true;
      socket._connectionId = id;
      connections[id] = socket;
      socket.once("close", () => {
        delete connections[socket._connectionId];
      });
    }
  });
  server.on("secureConnection", (socket) => {
    if (isShuttingDown) {
      socket.destroy();
    } else {
      const id = secureConnectionCounter++;
      socket._isIdle = true;
      socket._connectionId = id;
      secureConnections[id] = socket;
      socket.once("close", () => {
        delete secureConnections[socket._connectionId];
      });
    }
  });
  process.on("close", function() {
  });
  function shutdown(sig) {
    function cleanupHttp() {
      destroyAllConnections();
      return new Promise((resolve, reject) => {
        server.close((err) => {
          if (err) {
            return reject(err);
          }
          return resolve(true);
        });
      });
    }
    if (options.development) {
      return process.exit(0);
    }
    function finalHandler() {
      if (!finalRun) {
        finalRun = true;
        if (options.finally && isFunction(options.finally)) {
          options.finally();
        }
      }
      return Promise.resolve();
    }
    function waitForReadyToShutDown(totalNumInterval) {
      if (totalNumInterval === 0) {
        debug(
          `Could not close connections in time (${options.timeout}ms), will forcefully shut down`
        );
        return Promise.resolve(true);
      }
      const allConnectionsClosed = Object.keys(connections).length === 0 && Object.keys(secureConnections).length === 0;
      if (allConnectionsClosed) {
        return Promise.resolve(false);
      }
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(waitForReadyToShutDown(totalNumInterval - 1));
        }, 250);
      });
    }
    if (isShuttingDown) {
      return Promise.resolve();
    }
    return options.preShutdown(sig).then(() => {
      isShuttingDown = true;
      cleanupHttp();
    }).then(() => {
      const pollIterations = options.timeout ? Math.round(options.timeout / 250) : 0;
      return waitForReadyToShutDown(pollIterations);
    }).then((force) => {
      if (force) {
        destroyAllConnections(force);
      }
      return options.onShutdown(sig);
    }).then(finalHandler).catch((err) => {
      const errString = typeof err === "string" ? err : JSON.stringify(err);
      failed = true;
      throw errString;
    });
  }
  function shutdownManual() {
    return shutdown("manual");
  }
  return shutdownManual;
}

function getGracefulShutdownConfig() {
  return {
    disabled: !!process.env.NITRO_SHUTDOWN_DISABLED,
    signals: (process.env.NITRO_SHUTDOWN_SIGNALS || "SIGTERM SIGINT").split(" ").map((s) => s.trim()),
    timeout: Number.parseInt(process.env.NITRO_SHUTDOWN_TIMEOUT, 10) || 3e4,
    forceExit: !process.env.NITRO_SHUTDOWN_NO_FORCE_EXIT
  };
}
function setupGracefulShutdown(listener, nitroApp) {
  const shutdownConfig = getGracefulShutdownConfig();
  if (shutdownConfig.disabled) {
    return;
  }
  GracefulShutdown(listener, {
    signals: shutdownConfig.signals.join(" "),
    timeout: shutdownConfig.timeout,
    forceExit: shutdownConfig.forceExit,
    onShutdown: async () => {
      await new Promise((resolve) => {
        const timeout = setTimeout(() => {
          console.warn("Graceful shutdown timeout, force exiting...");
          resolve();
        }, shutdownConfig.timeout);
        nitroApp.hooks.callHook("close").catch((err) => {
          console.error(err);
        }).finally(() => {
          clearTimeout(timeout);
          resolve();
        });
      });
    }
  });
}

const cert = process.env.NITRO_SSL_CERT;
const key = process.env.NITRO_SSL_KEY;
const server = cert && key ? new Server({ key, cert }, toNodeListener(nitroApp.h3App)) : new Server$1(toNodeListener(nitroApp.h3App));
const port = destr(process.env.NITRO_PORT || process.env.PORT) || 3e3;
const host = process.env.NITRO_HOST || process.env.HOST;
const path = process.env.NITRO_UNIX_SOCKET;
const listener = server.listen(path ? { path } : { port, host }, (err) => {
  if (err) {
    console.error(err);
    process.exit(1);
  }
  const protocol = cert && key ? "https" : "http";
  const addressInfo = listener.address();
  if (typeof addressInfo === "string") {
    console.log(`Listening on unix socket ${addressInfo}`);
    return;
  }
  const baseURL = (useRuntimeConfig().app.baseURL || "").replace(/\/$/, "");
  const url = `${protocol}://${addressInfo.family === "IPv6" ? `[${addressInfo.address}]` : addressInfo.address}:${addressInfo.port}${baseURL}`;
  console.log(`Listening on ${url}`);
});
trapUnhandledNodeErrors();
setupGracefulShutdown(listener, nitroApp);
const nodeServer = {};

export { $fetch$1 as $, defineDriver as A, createStorage as B, withQuery as C, withoutLeadingSlash as D, normalizeKey$2 as E, prefixStorage as F, withTrailingSlash as G, useStorage as H, handleCacheHeaders as I, setHeaders as J, setHeader as K, H3Error as L, defuFn as M, klona as N, withLeadingSlash as O, joinURL as P, parseQuery as Q, createDefu as R, isEqual as S, withBase as T, createHooks as U, parse$1 as V, getRequestHeader as W, hasProtocol as X, isScriptProtocol as Y, setCookie as Z, getCookie as _, send as a, deleteCookie as a0, sanitizeStatusCode as a1, useNitroOrigin as a2, encodeParam as a3, encodePath as a4, pascalCase as a5, kebabCase as a6, memoryDriver as a7, nodeServer as a8, mdcHighlighter as a9, setResponseStatus as b, useNitroApp as c, setResponseHeaders as d, eventHandler as e, getQuery as f, getResponseStatus as g, createError$1 as h, getRouteRules as i, joinRelativeURL as j, hash as k, getResponseStatusText as l, destr as m, defineEventHandler as n, useOgImageRuntimeConfig as o, parseURL as p, proxyRequest as q, readBody as r, setResponseHeader as s, sendRedirect as t, useRuntimeConfig as u, toRouteMatcher as v, createRouter$1 as w, withoutTrailingSlash as x, defu as y, withoutBase as z };
//# sourceMappingURL=runtime.mjs.map
